{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-vivia/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-128.png","path":"images/favicon-dark-128.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-180.png","path":"images/favicon-dark-180.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-192.png","path":"images/favicon-dark-192.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-32.png","path":"images/favicon-dark-32.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-128.png","path":"images/favicon-light-128.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-180.png","path":"images/favicon-light-180.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-192.png","path":"images/favicon-light-192.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-32.png","path":"images/favicon-light-32.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/tile.png","path":"images/tile.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/color.global.min.js","path":"js/color.global.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/jquery-3.4.1.min.js","path":"js/jquery-3.4.1.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/light-dark-switch.js","path":"js/light-dark-switch.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/load-settings.js","path":"js/load-settings.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Bold.ttf","path":"css/fonts/Roboto-Bold.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Medium.ttf","path":"css/fonts/Roboto-Medium.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Regular.ttf","path":"css/fonts/Roboto-Regular.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.woff2","path":"css/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"source/tupian/touxiang.png","path":"tupian/touxiang.png","modified":0,"renderable":0},{"_id":"source/tupian/hengbantupian.jpg","path":"tupian/hengbantupian.jpg","modified":0,"renderable":0},{"_id":"source/tupian/niulangquming.png","path":"tupian/niulangquming.png","modified":0,"renderable":0},{"_id":"source/tupian/11.25(1).png","path":"tupian/11.25(1).png","modified":0,"renderable":0},{"_id":"source/tupian/11.25(2).png","path":"tupian/11.25(2).png","modified":0,"renderable":0},{"_id":"source/tupian/11.24tupian.jpg","path":"tupian/11.24tupian.jpg","modified":0,"renderable":0},{"_id":"source/tupian/11.25tupian.jpg","path":"tupian/11.25tupian.jpg","modified":0,"renderable":0},{"_id":"source/tupian/11.26tupian.jpg","path":"tupian/11.26tupian.jpg","modified":0,"renderable":0},{"_id":"source/tupian/11.26.png","path":"tupian/11.26.png","modified":0,"renderable":0},{"_id":"source/tupian/11.27tupian.jpg","path":"tupian/11.27tupian.jpg","modified":0,"renderable":0},{"_id":"source/tupian/11.27.png","path":"tupian/11.27.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/about/index.md","hash":"c502d6865f651e1ebd591f2be0b22e72f7ed46f5","modified":1733919189048},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1733828974006},{"_id":"node_modules/hexo-theme-vivia/.gitattributes","hash":"ba3dfe345280bdcc5e817bb02cf49b8b8d8e1c4c","modified":1733830203971},{"_id":"node_modules/hexo-theme-vivia/LICENSE","hash":"1039079fb6969c255e3df9a411ff5f94702f53ad","modified":1733830203973},{"_id":"node_modules/hexo-theme-vivia/README.md","hash":"f3bb9857bd474e06d9fa42cc1911c6ee8d86649f","modified":1733830204006},{"_id":"node_modules/hexo-theme-vivia/example_config.vivia.yml","hash":"1105cff0e9967389176aeb64e26530665af80aa1","modified":1733830204036},{"_id":"node_modules/hexo-theme-vivia/README.zh-CN.md","hash":"8b614f3b300fd0b4a4b7858b0897cd55ae00ef48","modified":1733830204007},{"_id":"node_modules/hexo-theme-vivia/example_zh_CN_config.vivia.yml","hash":"756b4d5965cff0cb89062ab52d50714f92532a01","modified":1733830204036},{"_id":"node_modules/hexo-theme-vivia/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1733829088416},{"_id":"node_modules/hexo-theme-vivia/package.json","hash":"dda08139954a6e50e056bdb197b55fd1eb6925ae","modified":1733830204006},{"_id":"node_modules/hexo-theme-vivia/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1733829088416},{"_id":"node_modules/hexo-theme-vivia/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1733829088416},{"_id":"node_modules/hexo-theme-vivia/languages/en.yml","hash":"b4b55e56a0554bfdc383650742c2038cef777142","modified":1733830204035},{"_id":"node_modules/hexo-theme-vivia/languages/zh-CN.yml","hash":"89154c7877fa274d340e2adb2241167abda71c60","modified":1733830204037},{"_id":"node_modules/hexo-theme-vivia/languages/zh-TW.yml","hash":"9098818e791e19d9921e256c771664b2cd999e13","modified":1733830204037},{"_id":"node_modules/hexo-theme-vivia/languages/zh.yml","hash":"e56bebd19d2abd1698e9aa87d337941957977468","modified":1733830204038},{"_id":"node_modules/hexo-theme-vivia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1733829088360},{"_id":"node_modules/hexo-theme-vivia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1733829088367},{"_id":"node_modules/hexo-theme-vivia/scripts/archive-helper.js","hash":"a04e4c8c0925652635e50605182dc5f1509b910f","modified":1733830204000},{"_id":"node_modules/hexo-theme-vivia/layout/index.ejs","hash":"c9d8dca730a254ab3f48309677a3cb994e513ad6","modified":1733830203987},{"_id":"node_modules/hexo-theme-vivia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1733829088382},{"_id":"node_modules/hexo-theme-vivia/scripts/categories-process.js","hash":"41b6be3986763efb8a8b363cbabba177c502a193","modified":1733830204001},{"_id":"node_modules/hexo-theme-vivia/layout/layout.ejs","hash":"11c0de0294fa83f38d70fcb3d5c47f77ed1e98da","modified":1733830203990},{"_id":"node_modules/hexo-theme-vivia/scripts/color-generate.js","hash":"90dff57087b692d2aa687c49980a0eed56a2f058","modified":1733830204002},{"_id":"node_modules/hexo-theme-vivia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1733829088387},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/navigate_next.ejs","hash":"c3ecb137ebc9bb949aebe3fc0631b05ba578c8e1","modified":1733830203993},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/dark_mode.ejs","hash":"0ea0e23fb16103f424591cf46939fcf07738ccc1","modified":1733830203983},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/menu.ejs","hash":"47f04d2c6413beaffee57d6164b5637bdb2cd1cb","modified":1733830203990},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/rss_feed.ejs","hash":"8bac3aa45c0e7a55f38783e7350039d0b1adb48b","modified":1733830203995},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/navigate_before.ejs","hash":"1c11e29aa2719674b161c072e53576ac38b1ee65","modified":1733830203993},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1733829088354},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/article.ejs","hash":"b63c43eb5902d2c2d64be1e700c639eb81b8a4e4","modified":1733830203978},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/archive.ejs","hash":"2106e7f5f73c9c8d592dcd7dab4359d23037f382","modified":1733830203975},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/back-to-top.ejs","hash":"a5132c5ab08b55891bcfe10d36ec83cacbfd60af","modified":1733830203978},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/banner.ejs","hash":"7f9c0b7d10238b45c1c1a65df7f801c904ae898c","modified":1733830203980},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/baidu-analytics.ejs","hash":"5951d0adc0490ff4d5c956e54d4828119755d1e7","modified":1733830203979},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/footer.ejs","hash":"e78a36c94879f70df2ec615ccc2b5d459eeb4fe7","modified":1733830203985},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1733829088372},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1733829088371},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1733829088378},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/head.ejs","hash":"b52fd8595ec4849944564721810e74948895675f","modified":1733830203986},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/sidebar.ejs","hash":"97eee27bfb59ccc109fcd9ce87963f686c2b6ba9","modified":1733830203996},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/wb_sunny.ejs","hash":"ef254cc64ba10918218a6672e34fd5f6d4ce08bb","modified":1733830203999},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/navbar.ejs","hash":"7d4a434cba72a3bca58b59fab4ce15894da68049","modified":1733830203992},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/category.ejs","hash":"cc465be58bf6aeee7947e9cf9563c651e42e7a5d","modified":1733830203982},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/archive.ejs","hash":"1dd3efd775f09f3e5a0e0205ddb8388851dfad57","modified":1733830203977},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/color.ejs","hash":"9e00f6c621db3c5c659b03d1dad6caa90d6217d9","modified":1733830203983},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/profile.ejs","hash":"ccd8c2442f3437b6752946f4d573edefaf2cd4c0","modified":1733830203994},{"_id":"node_modules/hexo-theme-vivia/source/css/style.styl","hash":"32cceae9c16fb4de06fd64bc333f07a1ba4d7528","modified":1733830204028},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/recent_posts.ejs","hash":"647f4151e7fca48af2b727228b84deb0652a6376","modified":1733830203995},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/tag.ejs","hash":"f231a62130014c07dc1888ed30399bcfde3ed0c0","modified":1733830203996},{"_id":"node_modules/hexo-theme-vivia/source/css/_extend.styl","hash":"cc37f2c5f8ccdb77f87cf8ed35ea71a2d66c9605","modified":1733830204015},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-128.png","hash":"44cceeef5fddc81a613faf6caa53bac139a6b564","modified":1733830204009},{"_id":"node_modules/hexo-theme-vivia/source/css/_variables.styl","hash":"b6b8419839cfbed3a0bde16ed1e6ad44bc59b7fe","modified":1733830204015},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-180.png","hash":"4771a6bd0386924ad31719f8999c036b36ad5688","modified":1733830204010},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-192.png","hash":"929acfdd6e69ceacdecf40a03ed520f826750c06","modified":1733830204010},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-32.png","hash":"8ef87b664e5c6250e5badd7312fe192e30fe2e83","modified":1733830204011},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-128.png","hash":"9c93c4ac222da14ca4f43b2d54573ce4099a161b","modified":1733830204012},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-180.png","hash":"6b26caab1d036726beaf47510bada4cddf253b24","modified":1733830204012},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-192.png","hash":"0d5f76f309b6a0661d695d6bf4db8ef8a56e4ae5","modified":1733830204012},{"_id":"node_modules/hexo-theme-vivia/source/images/tile.png","hash":"fbc016bfb004a5ca4a8c6f0b078ae320ec98ba20","modified":1733830204014},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-32.png","hash":"604915a91ddede7874d5dcfa4de0bc4b04ae5da6","modified":1733830204014},{"_id":"node_modules/hexo-theme-vivia/source/js/color.global.min.js","hash":"8140005be5afebb828b2890ce6e686ece34e78df","modified":1733830204002},{"_id":"node_modules/hexo-theme-vivia/source/js/light-dark-switch.js","hash":"371eacee9af459d04de60190c549fe7f8374be36","modified":1733830204003},{"_id":"node_modules/hexo-theme-vivia/source/js/load-settings.js","hash":"f420677aad3d200b4f92fca60ab5cb47c7db9a21","modified":1733830204004},{"_id":"node_modules/hexo-theme-vivia/source/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1733830204005},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/category.ejs","hash":"9f06ff87e50ff5005080c6bdebf4a0bbaf550aba","modified":1733830203980},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/date.ejs","hash":"760970e719ef973c18ac36c9fc9e13d0edaaaa5a","modified":1733830203984},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/gallery.ejs","hash":"0282d116251bd60b91e05c786386e4d570035996","modified":1733830203985},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1733829088385},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/nav.ejs","hash":"86886e1ca10aec7087b44048f92719d24ac738f4","modified":1733830203991},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/title.ejs","hash":"14e34508135bf83763d8c1f1f8d8467dff689002","modified":1733830203997},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/article.styl","hash":"cb77215312d030593afc5067810198cd2e2a710c","modified":1733830204016},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/archive.styl","hash":"ee7b27115aed0182dc9ac51b637a2bf986b56f55","modified":1733830204016},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/comment.styl","hash":"35cca399adc17633885ca416e8c48acd468d0e31","modified":1733830204018},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/back-to-top.styl","hash":"e8056291a477fe2d5216fdc76a84dc0f48975fef","modified":1733830204017},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/footer.styl","hash":"f038558bfe427b2cedd029cb9638c1d70d936763","modified":1733830204019},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/highlight.styl","hash":"3abb118aae2dba149cb616bbcbfed129ccfcb5b7","modified":1733830204021},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/header.styl","hash":"c7a95fbec06dba431c45e558dbaa767f0dacd1a3","modified":1733830204021},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/main-title.styl","hash":"73df1241b15d62cc19665883cd789440d4c7e7a6","modified":1733830204022},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/settings.styl","hash":"6e67f8c3659f6a9dd49e513a595a01c1afebf87c","modified":1733830204024},{"_id":"node_modules/hexo-theme-vivia/source/css/_util/color.styl","hash":"f98e30552996949e07529f13342f26ebd45a2281","modified":1733830204017},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/sidebar-aside.styl","hash":"87da0ef32f6e4e6cf742450f91731c68a68796ae","modified":1733830204026},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/sidebar.styl","hash":"69a08fe059c5e2ee00760ae61f1123d61d90c39a","modified":1733830204027},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1733829088408},{"_id":"node_modules/hexo-theme-vivia/source/css/_util/config.styl","hash":"8d603fa8f7957cd6a06f01616ea54977bdf62db2","modified":1733830204018},{"_id":"node_modules/hexo-theme-vivia/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1733829088403},{"_id":"node_modules/hexo-theme-vivia/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1733829088406},{"_id":"node_modules/hexo-theme-vivia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1733829088382},{"_id":"node_modules/hexo-theme-vivia/source/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1733830204002},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1733830204033},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1733830204034},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1733830204007},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Medium.ttf","hash":"3c6a09fcc6a454924c81af7dff94fc6d399ed79b","modified":1733830204031},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Bold.ttf","hash":"62442a18a9fe9457c1afeabf683d263a691b7798","modified":1733830204031},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Regular.ttf","hash":"56c5c0d38bde4c1f1549dda43db37b09c608aad3","modified":1733830204032},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1733830203999},{"_id":"source/tupian/hengbantupian.jpg","hash":"1e0794ba116ba962682fc96a9f3a31372b18221e","modified":1733823548641},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1733830204030},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1733830204029},{"_id":"source/tupian/touxiang.png","hash":"1db9394fe902b1e94b9de87c2d3e6e467696552d","modified":1733735642025},{"_id":"public/about/index.html","hash":"4e9c395d4a89943c105211ffee1466f397f5398f","modified":1733919895184},{"_id":"public/2024/12/10/hello-world/index.html","hash":"d63df7fa6ab3b2be73f18c3c32603e415a8a4b30","modified":1733833373467},{"_id":"public/index.html","hash":"8d21e2becd18fc53d991dc61949a063562b19f55","modified":1733919895184},{"_id":"public/archives/index.html","hash":"123635f8089392719328447c21d9850983fae3a3","modified":1733919895184},{"_id":"public/archives/2024/index.html","hash":"e2de34f33c38d24240fbea205ed7b9b1f0d2eb18","modified":1733919895184},{"_id":"public/archives/2024/12/index.html","hash":"1770b5abded78f581228834eb646ec7009d924f7","modified":1733919895184},{"_id":"public/images/favicon-dark-128.png","hash":"44cceeef5fddc81a613faf6caa53bac139a6b564","modified":1733916071512},{"_id":"public/images/favicon-dark-180.png","hash":"4771a6bd0386924ad31719f8999c036b36ad5688","modified":1733916071512},{"_id":"public/images/favicon-dark-32.png","hash":"8ef87b664e5c6250e5badd7312fe192e30fe2e83","modified":1733916071512},{"_id":"public/images/favicon-dark-192.png","hash":"929acfdd6e69ceacdecf40a03ed520f826750c06","modified":1733916071512},{"_id":"public/images/favicon-light-180.png","hash":"6b26caab1d036726beaf47510bada4cddf253b24","modified":1733916071512},{"_id":"public/images/favicon-light-192.png","hash":"0d5f76f309b6a0661d695d6bf4db8ef8a56e4ae5","modified":1733916071512},{"_id":"public/images/favicon-light-128.png","hash":"9c93c4ac222da14ca4f43b2d54573ce4099a161b","modified":1733916071512},{"_id":"public/images/favicon-light-32.png","hash":"604915a91ddede7874d5dcfa4de0bc4b04ae5da6","modified":1733916071512},{"_id":"public/images/tile.png","hash":"fbc016bfb004a5ca4a8c6f0b078ae320ec98ba20","modified":1733916071512},{"_id":"public/css/style.css","hash":"948360d9a0b33fa158e731f3edd2851bd569f1ae","modified":1733916071512},{"_id":"public/js/color.global.min.js","hash":"8140005be5afebb828b2890ce6e686ece34e78df","modified":1733916071512},{"_id":"public/js/light-dark-switch.js","hash":"371eacee9af459d04de60190c549fe7f8374be36","modified":1733916071512},{"_id":"public/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1733916071512},{"_id":"public/js/load-settings.js","hash":"f420677aad3d200b4f92fca60ab5cb47c7db9a21","modified":1733916071512},{"_id":"public/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1733916071512},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1733916071512},{"_id":"public/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1733916071512},{"_id":"public/css/fonts/Roboto-Bold.ttf","hash":"62442a18a9fe9457c1afeabf683d263a691b7798","modified":1733916071512},{"_id":"public/css/fonts/Roboto-Regular.ttf","hash":"56c5c0d38bde4c1f1549dda43db37b09c608aad3","modified":1733916071512},{"_id":"public/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1733916071512},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1733916071512},{"_id":"public/css/fonts/Roboto-Medium.ttf","hash":"3c6a09fcc6a454924c81af7dff94fc6d399ed79b","modified":1733916071512},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1733916071512},{"_id":"public/tupian/hengbantupian.jpg","hash":"1e0794ba116ba962682fc96a9f3a31372b18221e","modified":1733916071512},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1733916071512},{"_id":"public/tupian/touxiang.png","hash":"1db9394fe902b1e94b9de87c2d3e6e467696552d","modified":1733916071512},{"_id":"source/_posts/2024-11-24-蓝桥杯：牛郎取名.md","hash":"fb0ddb7f9e478f579e237e0c7b5f636c684971e8","modified":1733915803397},{"_id":"source/tupian/niulangquming.png","hash":"2a6d81615371b71c9e83fc31aa8d56db5924da1f","modified":1733826071589},{"_id":"public/2024/12/10/2024-11-24-蓝桥杯：牛郎取名/index.html","hash":"280f32eb49a4cdb85ed96796801700da62961689","modified":1733919895184},{"_id":"public/tags/算法/index.html","hash":"a6a752865c075ab2263eee89ee1699a7d4590718","modified":1733919895184},{"_id":"public/tags/字符串/index.html","hash":"38fe8d1f4aa7e039e58a44dbd2db30618d29ed88","modified":1733919895184},{"_id":"public/tags/模拟/index.html","hash":"c280f5d5dbd113524b5cfdd51717b4b6bc93553a","modified":1733919895184},{"_id":"public/categories/算法/index.html","hash":"6fc4efd12897c6c58eef9b46123aacd894e184d4","modified":1733919895184},{"_id":"public/tupian/niulangquming.png","hash":"2a6d81615371b71c9e83fc31aa8d56db5924da1f","modified":1733916071512},{"_id":"source/_posts/2024-11-25-蓝桥杯：数字转换字母.md","hash":"af11dd9282ab7f603244c2d3ca6dbac7be5565a9","modified":1733915801218},{"_id":"source/tupian/11.25(2).png","hash":"fcc123fc99e7e70f4c42f96c9e012f83444625e5","modified":1733913473204},{"_id":"source/tupian/11.25(1).png","hash":"48856e54be480260b0167b66222e10f1d2f4d490","modified":1733913464895},{"_id":"source/tupian/11.24tupian.jpg","hash":"6449b124c9e9617f8013f8b3907dfebbc63e663e","modified":1733915741944},{"_id":"public/2024/12/11/2024-11-25-蓝桥杯：数字转换字母/index.html","hash":"6a0d7a504da55addaa63892a8dbdfa2900471d2b","modified":1733919895184},{"_id":"public/tags/语法/index.html","hash":"f8d0773f02a5d6a5f0c543d4eb0e322b98193570","modified":1733919895184},{"_id":"public/tags/STL/index.html","hash":"3b2ca78450d0236bdb296d444ecf132eee7bf629","modified":1733919895184},{"_id":"public/tupian/11.25(2).png","hash":"fcc123fc99e7e70f4c42f96c9e012f83444625e5","modified":1733916071512},{"_id":"public/tupian/11.25(1).png","hash":"48856e54be480260b0167b66222e10f1d2f4d490","modified":1733916071512},{"_id":"public/tupian/11.24tupian.jpg","hash":"6449b124c9e9617f8013f8b3907dfebbc63e663e","modified":1733916071512},{"_id":"source/tupian/11.25tupian.jpg","hash":"3f9ed78c9ec95c8efa8df6188dac71942e323f9f","modified":1733915569769},{"_id":"public/tupian/11.25tupian.jpg","hash":"3f9ed78c9ec95c8efa8df6188dac71942e323f9f","modified":1733916071512},{"_id":"source/tupian/11.26tupian.jpg","hash":"bf748a59edc0034684a20ce28a6bb9f88f3fb55c","modified":1733915843228},{"_id":"public/tupian/11.26tupian.jpg","hash":"bf748a59edc0034684a20ce28a6bb9f88f3fb55c","modified":1733916071512},{"_id":"source/_posts/2024-11-16-蓝桥杯：回文判定.md","hash":"f4fe3fa35b2a4e9335413717023b9588a6f16e4c","modified":1733918706327},{"_id":"source/tupian/11.27tupian.jpg","hash":"826aa3bfc02925df9c4081db9a41d576b2b34a50","modified":1733918248379},{"_id":"source/tupian/11.26.png","hash":"1a8c44630028fa810aecb4021b6d3764e628d2dc","modified":1733918571312},{"_id":"public/2024/12/11/2024-11-16-蓝桥杯：回文判定/index.html","hash":"a9e33d7ebe0c4f0e0cae912deea78b75804683de","modified":1733919895184},{"_id":"public/tags/双指针/index.html","hash":"ed7011c45af515e20374769a2d274c8e81b93c39","modified":1733919895184},{"_id":"public/tupian/11.27tupian.jpg","hash":"826aa3bfc02925df9c4081db9a41d576b2b34a50","modified":1733918707446},{"_id":"public/tupian/11.26.png","hash":"1a8c44630028fa810aecb4021b6d3764e628d2dc","modified":1733918707446},{"_id":"source/_posts/2024-11-27-蓝桥杯：查找最大元素.md","hash":"79be228b43059f4be5cfcfa5461ca7552bce7efc","modified":1733919894151},{"_id":"source/tupian/11.27.png","hash":"3d3848226fbf8de93ca7b5aacdd232e84bfce905","modified":1733919620948},{"_id":"public/2024/12/11/2024-11-27-蓝桥杯：查找最大元素/index.html","hash":"8d3840f5fb6a98449511450cdbd361ad069f9c08","modified":1733919895184},{"_id":"public/tupian/11.27.png","hash":"3d3848226fbf8de93ca7b5aacdd232e84bfce905","modified":1733919895184}],"Category":[{"name":"算法","_id":"cm4ig3om30001aotoh46r94bn"}],"Data":[],"Page":[{"title":"个人简介","date":"2024-12-10T11:33:01.000Z","_content":"\n这是一个初入编程江湖的计算机男大学生\n热爱算法，喜欢钻研各类软件，也喜欢fps游戏，目前没想好要走的路ฅʕ•̫͡•ʔฅ\n\n\n### 友情链接\n#### [heStudio](https://www.hestudio.net/)\n简介：Welcome to the pit!\n\n","source":"about/index.md","raw":"---\ntitle: 个人简介\ndate: 2024-12-10 19:33:01\n---\n\n这是一个初入编程江湖的计算机男大学生\n热爱算法，喜欢钻研各类软件，也喜欢fps游戏，目前没想好要走的路ฅʕ•̫͡•ʔฅ\n\n\n### 友情链接\n#### [heStudio](https://www.hestudio.net/)\n简介：Welcome to the pit!\n\n","updated":"2024-12-11T12:13:09.048Z","path":"about/index.html","_id":"cm4if1xy30001lkto9irkcnip","comments":1,"layout":"page","content":"<p>这是一个初入编程江湖的计算机男大学生<br>热爱算法，喜欢钻研各类软件，也喜欢fps游戏，目前没想好要走的路ฅʕ•̫͡•ʔฅ</p>\n<h3 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h3><h4 id=\"heStudio\"><a href=\"#heStudio\" class=\"headerlink\" title=\"heStudio\"></a><a href=\"https://www.hestudio.net/\">heStudio</a></h4><p>简介：Welcome to the pit!</p>\n","length":89,"excerpt":"","more":"<p>这是一个初入编程江湖的计算机男大学生<br>热爱算法，喜欢钻研各类软件，也喜欢fps游戏，目前没想好要走的路ฅʕ•̫͡•ʔฅ</p>\n<h3 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h3><h4 id=\"heStudio\"><a href=\"#heStudio\" class=\"headerlink\" title=\"heStudio\"></a><a href=\"https://www.hestudio.net/\">heStudio</a></h4><p>简介：Welcome to the pit!</p>\n"}],"Post":[{"title":"2024.11.24 蓝桥杯：牛郎取名","date":"2024-12-10T12:30:43.000Z","photos":["/tupian/11.24tupian.jpg"],"_content":"\n# 牛郎取名\n\n## 问题与代码\n\n![](/tupian/niulangquming.png)\n\n### 思路\n\n1.创建n表示字符串长度 \n2.创建s表示字符 \n3.因为字符串不能修改，所以可以用stringBuilder方法来解决不能修改的问题 \n4.利用循环来改变字符顺序 \n5.用tostring来转变为字符串 \n6.最后输出字符串","source":"_posts/2024-11-24-蓝桥杯：牛郎取名.md","raw":"---\ntitle: 2024.11.24 蓝桥杯：牛郎取名\ndate: 2024-12-10 20:30:43\ntags: \n    - 算法\n    - 字符串\n    - 模拟\ncategories: 算法\nphotos: /tupian/11.24tupian.jpg\n---\n\n# 牛郎取名\n\n## 问题与代码\n\n![](/tupian/niulangquming.png)\n\n### 思路\n\n1.创建n表示字符串长度 \n2.创建s表示字符 \n3.因为字符串不能修改，所以可以用stringBuilder方法来解决不能修改的问题 \n4.利用循环来改变字符顺序 \n5.用tostring来转变为字符串 \n6.最后输出字符串","slug":"2024-11-24-蓝桥杯：牛郎取名","published":1,"updated":"2024-12-11T11:16:43.397Z","_id":"cm4ig3om10000aotocfzl4u55","comments":1,"layout":"post","content":"<h1 id=\"牛郎取名\"><a href=\"#牛郎取名\" class=\"headerlink\" title=\"牛郎取名\"></a>牛郎取名</h1><h2 id=\"问题与代码\"><a href=\"#问题与代码\" class=\"headerlink\" title=\"问题与代码\"></a>问题与代码</h2><p><img src=\"/tupian/niulangquming.png\"></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><p>1.创建n表示字符串长度<br>2.创建s表示字符<br>3.因为字符串不能修改，所以可以用stringBuilder方法来解决不能修改的问题<br>4.利用循环来改变字符顺序<br>5.用tostring来转变为字符串<br>6.最后输出字符串</p>\n","length":114,"excerpt":"","more":"<h1 id=\"牛郎取名\"><a href=\"#牛郎取名\" class=\"headerlink\" title=\"牛郎取名\"></a>牛郎取名</h1><h2 id=\"问题与代码\"><a href=\"#问题与代码\" class=\"headerlink\" title=\"问题与代码\"></a>问题与代码</h2><p><img src=\"/tupian/niulangquming.png\"></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><p>1.创建n表示字符串长度<br>2.创建s表示字符<br>3.因为字符串不能修改，所以可以用stringBuilder方法来解决不能修改的问题<br>4.利用循环来改变字符顺序<br>5.用tostring来转变为字符串<br>6.最后输出字符串</p>\n"},{"title":"2024-11-25-蓝桥杯：数字转换字母","date":"2024-12-11T10:35:18.000Z","photos":["/tupian/11.25tupian.jpg"],"_content":"# 数字转换字母\n\n## 问题与代码\n\n![](/tupian/11.25(1).png)\n![](/tupian/11.25(2).png)\n\n### 思路\n\n```java\nScanner sc = new Scanner(System.in);\n        //获取第一个字符串\n        String S = sc.next();\n        //获取第二个字符串\n        String T = sc.next();\n        //因为字符串不能更改，所以用StringBuilder\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < T.length(); i++) {\n            char c = T.charAt(i);\n            if(c >= '0' && c <= '9'){\n                //创立默认值\n                char replacement = ' ';\n                switch(c){\n                    case '0':\n                        replacement = S.charAt(0);\n                        break;\n                    case '1':\n                        replacement = S.charAt(1);\n                        break;\n                    case '2':\n                        replacement = S.charAt(2);\n                        break;\n                    case '3':\n                        replacement = S.charAt(3);\n                        break;\n                    case '4':\n                        replacement = S.charAt(4);\n                        break;\n                    case '5':\n                        replacement = S.charAt(5);\n                        break;\n                    case '6':\n                        replacement = S.charAt(6);\n                        break;\n                    case '7':\n                        replacement = S.charAt(7);\n                        break;\n                    case '8':\n                        replacement = S.charAt(8);\n                        break;\n                    case '9':\n                        replacement = S.charAt(9);\n                        break;\n                    default:\n                        break;\n\n                }\n            sb.append(replacement);\n            \n            }else {\n                sb.append(T.charAt(i));\n            }\n\n            \n        }\n        String str = sb.toString();\n        System.out.println(str);\n        \n\n        sc.close();\n\n```\n","source":"_posts/2024-11-25-蓝桥杯：数字转换字母.md","raw":"---\ntitle: 2024-11-25-蓝桥杯：数字转换字母\ndate: 2024-12-11 18:35:18\ntags:\n    - 语法\n    - STL\n    - 模拟\ncategories: 算法\nphotos: /tupian/11.25tupian.jpg\n---\n# 数字转换字母\n\n## 问题与代码\n\n![](/tupian/11.25(1).png)\n![](/tupian/11.25(2).png)\n\n### 思路\n\n```java\nScanner sc = new Scanner(System.in);\n        //获取第一个字符串\n        String S = sc.next();\n        //获取第二个字符串\n        String T = sc.next();\n        //因为字符串不能更改，所以用StringBuilder\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < T.length(); i++) {\n            char c = T.charAt(i);\n            if(c >= '0' && c <= '9'){\n                //创立默认值\n                char replacement = ' ';\n                switch(c){\n                    case '0':\n                        replacement = S.charAt(0);\n                        break;\n                    case '1':\n                        replacement = S.charAt(1);\n                        break;\n                    case '2':\n                        replacement = S.charAt(2);\n                        break;\n                    case '3':\n                        replacement = S.charAt(3);\n                        break;\n                    case '4':\n                        replacement = S.charAt(4);\n                        break;\n                    case '5':\n                        replacement = S.charAt(5);\n                        break;\n                    case '6':\n                        replacement = S.charAt(6);\n                        break;\n                    case '7':\n                        replacement = S.charAt(7);\n                        break;\n                    case '8':\n                        replacement = S.charAt(8);\n                        break;\n                    case '9':\n                        replacement = S.charAt(9);\n                        break;\n                    default:\n                        break;\n\n                }\n            sb.append(replacement);\n            \n            }else {\n                sb.append(T.charAt(i));\n            }\n\n            \n        }\n        String str = sb.toString();\n        System.out.println(str);\n        \n\n        sc.close();\n\n```\n","slug":"2024-11-25-蓝桥杯：数字转换字母","published":1,"updated":"2024-12-11T11:16:41.218Z","_id":"cm4jrjgvw00001ctohz7sglm8","comments":1,"layout":"post","content":"<h1 id=\"数字转换字母\"><a href=\"#数字转换字母\" class=\"headerlink\" title=\"数字转换字母\"></a>数字转换字母</h1><h2 id=\"问题与代码\"><a href=\"#问题与代码\" class=\"headerlink\" title=\"问题与代码\"></a>问题与代码</h2><p><img src=\"/tupian/11.25(1).png\"><br><img src=\"/tupian/11.25(2).png\"></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        <span class=\"comment\">//获取第一个字符串</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">S</span> <span class=\"operator\">=</span> sc.next();</span><br><span class=\"line\">        <span class=\"comment\">//获取第二个字符串</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">T</span> <span class=\"operator\">=</span> sc.next();</span><br><span class=\"line\">        <span class=\"comment\">//因为字符串不能更改，所以用StringBuilder</span></span><br><span class=\"line\">        <span class=\"type\">StringBuilder</span> <span class=\"variable\">sb</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; T.length(); i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">char</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> T.charAt(i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(c &gt;= <span class=\"string\">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class=\"string\">&#x27;9&#x27;</span>)&#123;</span><br><span class=\"line\">                <span class=\"comment\">//创立默认值</span></span><br><span class=\"line\">                <span class=\"type\">char</span> <span class=\"variable\">replacement</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">switch</span>(c)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;0&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;1&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">1</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;2&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">2</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;3&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">3</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;4&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">4</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;5&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">5</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;6&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">6</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;7&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">7</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;8&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">8</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;9&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">9</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            sb.append(replacement);</span><br><span class=\"line\">            </span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                sb.append(T.charAt(i));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> sb.toString();</span><br><span class=\"line\">        System.out.println(str);</span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\">        sc.close();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","length":1074,"excerpt":"","more":"<h1 id=\"数字转换字母\"><a href=\"#数字转换字母\" class=\"headerlink\" title=\"数字转换字母\"></a>数字转换字母</h1><h2 id=\"问题与代码\"><a href=\"#问题与代码\" class=\"headerlink\" title=\"问题与代码\"></a>问题与代码</h2><p><img src=\"/tupian/11.25(1).png\"><br><img src=\"/tupian/11.25(2).png\"></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        <span class=\"comment\">//获取第一个字符串</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">S</span> <span class=\"operator\">=</span> sc.next();</span><br><span class=\"line\">        <span class=\"comment\">//获取第二个字符串</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">T</span> <span class=\"operator\">=</span> sc.next();</span><br><span class=\"line\">        <span class=\"comment\">//因为字符串不能更改，所以用StringBuilder</span></span><br><span class=\"line\">        <span class=\"type\">StringBuilder</span> <span class=\"variable\">sb</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; T.length(); i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">char</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> T.charAt(i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(c &gt;= <span class=\"string\">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class=\"string\">&#x27;9&#x27;</span>)&#123;</span><br><span class=\"line\">                <span class=\"comment\">//创立默认值</span></span><br><span class=\"line\">                <span class=\"type\">char</span> <span class=\"variable\">replacement</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">switch</span>(c)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;0&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;1&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">1</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;2&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">2</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;3&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">3</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;4&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">4</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;5&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">5</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;6&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">6</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;7&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">7</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;8&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">8</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;9&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">9</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            sb.append(replacement);</span><br><span class=\"line\">            </span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                sb.append(T.charAt(i));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> sb.toString();</span><br><span class=\"line\">        System.out.println(str);</span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\">        sc.close();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"title":"2024-11-16-蓝桥杯：回文判定","date":"2024-12-11T12:00:33.000Z","photos":["/tupian/11.26tupian.jpg"],"_content":"# 回文判定\n\n## 问题与代码\n\n![](/tupian/11.26.png)\n\n### 思路\n\n```java\nimport java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        String S = scan.next(); // 从标准输入读取一个字符串\n        char[] c = S.toCharArray(); // 将字符串转换为字符数组\n        StringBuilder sb = new StringBuilder(); // 创建一个StringBuilder对象，用于构建字符串\n        double a = Math.pow(10, 6); // 定义一个变量a，值为10的6次方，但这里实际上用不上，因为字符串长度是int类型\n\n        // 检查字符串长度是否在1到10^6之间（虽然a是double类型，但这里只是形式上的检查，因为字符串长度不会超过Integer.MAX_VALUE）\n        \n            for (int i = 0; i < c.length; i++) {\n                char str = c[i]; // 获取当前字符\n\n                // 检查字符是否为字母（ASCII码65-90为大写字母A-Z，97-122为小写字母a-z）\n                if (str >= 65 && str <= 90 || str >= 97 && str <= 122) {\n                    // 这里开始出现问题：每次遇到字母时，都会重新遍历整个字符串并反转，这是不必要的\n                    for (int i1 = c.length - 1; i1 >= 0; i1--) {\n                        char str2 = c[i1]; // 获取反转后的字符\n                        sb.append(str2); // 将字符添加到StringBuilder中\n                    }\n                    String str3 = sb.toString(); // 将StringBuilder转换为字符串\n\n                    // 检查反转后的字符串是否与原字符串相同\n                    if (str3.equals(S)) {\n                        System.out.println(\"Y\"); // 如果是，输出Y\n                    } else {\n                        System.out.println(\"N\"); // 如果不是，输出N\n                    }\n                    break; // 一旦完成比较，就退出循环，这意味着只要第一个字符是字母，就会立即判断\n\n                } else {\n                    System.out.println(\"N\"); // 如果当前字符不是字母，直接输出N并退出循环\n                    break;\n                }\n\n                // 注意：这里的逻辑存在问题，因为无论是否找到字母，都会立即退出循环，\n                // 这意味着代码只能检查字符串的第一个字符是否为字母以及它是否构成回文。\n            }\n        }\n        scan.close(); // 关闭Scanner对象\n    }\n}\n\n// 存在的问题和改进建议：\n// 1. 不需要每次遇到字母都重新反转整个字符串，只需在循环结束后进行一次反转检查。\n// 2. 可以先过滤掉非字母字符，再检查剩余部分是否为回文。\n// 3. 变量a的声明和使用是多余的，因为字符串长度是int类型，不会超过Integer.MAX_VALUE。\n// 4. 可以使用更高效的算法，如双指针法，来检查回文。\n```","source":"_posts/2024-11-16-蓝桥杯：回文判定.md","raw":"---\ntitle: 2024-11-16-蓝桥杯：回文判定\ndate: 2024-12-11 20:00:33\ntags:\n    - 双指针\n    - 字符串\n    - 模拟\ncategories: 算法\nphotos: /tupian/11.26tupian.jpg\n---\n# 回文判定\n\n## 问题与代码\n\n![](/tupian/11.26.png)\n\n### 思路\n\n```java\nimport java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        String S = scan.next(); // 从标准输入读取一个字符串\n        char[] c = S.toCharArray(); // 将字符串转换为字符数组\n        StringBuilder sb = new StringBuilder(); // 创建一个StringBuilder对象，用于构建字符串\n        double a = Math.pow(10, 6); // 定义一个变量a，值为10的6次方，但这里实际上用不上，因为字符串长度是int类型\n\n        // 检查字符串长度是否在1到10^6之间（虽然a是double类型，但这里只是形式上的检查，因为字符串长度不会超过Integer.MAX_VALUE）\n        \n            for (int i = 0; i < c.length; i++) {\n                char str = c[i]; // 获取当前字符\n\n                // 检查字符是否为字母（ASCII码65-90为大写字母A-Z，97-122为小写字母a-z）\n                if (str >= 65 && str <= 90 || str >= 97 && str <= 122) {\n                    // 这里开始出现问题：每次遇到字母时，都会重新遍历整个字符串并反转，这是不必要的\n                    for (int i1 = c.length - 1; i1 >= 0; i1--) {\n                        char str2 = c[i1]; // 获取反转后的字符\n                        sb.append(str2); // 将字符添加到StringBuilder中\n                    }\n                    String str3 = sb.toString(); // 将StringBuilder转换为字符串\n\n                    // 检查反转后的字符串是否与原字符串相同\n                    if (str3.equals(S)) {\n                        System.out.println(\"Y\"); // 如果是，输出Y\n                    } else {\n                        System.out.println(\"N\"); // 如果不是，输出N\n                    }\n                    break; // 一旦完成比较，就退出循环，这意味着只要第一个字符是字母，就会立即判断\n\n                } else {\n                    System.out.println(\"N\"); // 如果当前字符不是字母，直接输出N并退出循环\n                    break;\n                }\n\n                // 注意：这里的逻辑存在问题，因为无论是否找到字母，都会立即退出循环，\n                // 这意味着代码只能检查字符串的第一个字符是否为字母以及它是否构成回文。\n            }\n        }\n        scan.close(); // 关闭Scanner对象\n    }\n}\n\n// 存在的问题和改进建议：\n// 1. 不需要每次遇到字母都重新反转整个字符串，只需在循环结束后进行一次反转检查。\n// 2. 可以先过滤掉非字母字符，再检查剩余部分是否为回文。\n// 3. 变量a的声明和使用是多余的，因为字符串长度是int类型，不会超过Integer.MAX_VALUE。\n// 4. 可以使用更高效的算法，如双指针法，来检查回文。\n```","slug":"2024-11-16-蓝桥杯：回文判定","published":1,"updated":"2024-12-11T12:05:06.327Z","comments":1,"layout":"post","_id":"cm4jufhz10000loto93w81t3z","content":"<h1 id=\"回文判定\"><a href=\"#回文判定\" class=\"headerlink\" title=\"回文判定\"></a>回文判定</h1><h2 id=\"问题与代码\"><a href=\"#问题与代码\" class=\"headerlink\" title=\"问题与代码\"></a>问题与代码</h2><p><img src=\"/tupian/11.26.png\"></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">scan</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">S</span> <span class=\"operator\">=</span> scan.next(); <span class=\"comment\">// 从标准输入读取一个字符串</span></span><br><span class=\"line\">        <span class=\"type\">char</span>[] c = S.toCharArray(); <span class=\"comment\">// 将字符串转换为字符数组</span></span><br><span class=\"line\">        <span class=\"type\">StringBuilder</span> <span class=\"variable\">sb</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>(); <span class=\"comment\">// 创建一个StringBuilder对象，用于构建字符串</span></span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> Math.pow(<span class=\"number\">10</span>, <span class=\"number\">6</span>); <span class=\"comment\">// 定义一个变量a，值为10的6次方，但这里实际上用不上，因为字符串长度是int类型</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 检查字符串长度是否在1到10^6之间（虽然a是double类型，但这里只是形式上的检查，因为字符串长度不会超过Integer.MAX_VALUE）</span></span><br><span class=\"line\">        </span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; c.length; i++) &#123;</span><br><span class=\"line\">                <span class=\"type\">char</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> c[i]; <span class=\"comment\">// 获取当前字符</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 检查字符是否为字母（ASCII码65-90为大写字母A-Z，97-122为小写字母a-z）</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (str &gt;= <span class=\"number\">65</span> &amp;&amp; str &lt;= <span class=\"number\">90</span> || str &gt;= <span class=\"number\">97</span> &amp;&amp; str &lt;= <span class=\"number\">122</span>) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 这里开始出现问题：每次遇到字母时，都会重新遍历整个字符串并反转，这是不必要的</span></span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i1</span> <span class=\"operator\">=</span> c.length - <span class=\"number\">1</span>; i1 &gt;= <span class=\"number\">0</span>; i1--) &#123;</span><br><span class=\"line\">                        <span class=\"type\">char</span> <span class=\"variable\">str2</span> <span class=\"operator\">=</span> c[i1]; <span class=\"comment\">// 获取反转后的字符</span></span><br><span class=\"line\">                        sb.append(str2); <span class=\"comment\">// 将字符添加到StringBuilder中</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"type\">String</span> <span class=\"variable\">str3</span> <span class=\"operator\">=</span> sb.toString(); <span class=\"comment\">// 将StringBuilder转换为字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">// 检查反转后的字符串是否与原字符串相同</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (str3.equals(S)) &#123;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">&quot;Y&quot;</span>); <span class=\"comment\">// 如果是，输出Y</span></span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">&quot;N&quot;</span>); <span class=\"comment\">// 如果不是，输出N</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>; <span class=\"comment\">// 一旦完成比较，就退出循环，这意味着只要第一个字符是字母，就会立即判断</span></span><br><span class=\"line\"></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;N&quot;</span>); <span class=\"comment\">// 如果当前字符不是字母，直接输出N并退出循环</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 注意：这里的逻辑存在问题，因为无论是否找到字母，都会立即退出循环，</span></span><br><span class=\"line\">                <span class=\"comment\">// 这意味着代码只能检查字符串的第一个字符是否为字母以及它是否构成回文。</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        scan.close(); <span class=\"comment\">// 关闭Scanner对象</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 存在的问题和改进建议：</span></span><br><span class=\"line\"><span class=\"comment\">// 1. 不需要每次遇到字母都重新反转整个字符串，只需在循环结束后进行一次反转检查。</span></span><br><span class=\"line\"><span class=\"comment\">// 2. 可以先过滤掉非字母字符，再检查剩余部分是否为回文。</span></span><br><span class=\"line\"><span class=\"comment\">// 3. 变量a的声明和使用是多余的，因为字符串长度是int类型，不会超过Integer.MAX_VALUE。</span></span><br><span class=\"line\"><span class=\"comment\">// 4. 可以使用更高效的算法，如双指针法，来检查回文。</span></span><br></pre></td></tr></table></figure>","length":1432,"excerpt":"","more":"<h1 id=\"回文判定\"><a href=\"#回文判定\" class=\"headerlink\" title=\"回文判定\"></a>回文判定</h1><h2 id=\"问题与代码\"><a href=\"#问题与代码\" class=\"headerlink\" title=\"问题与代码\"></a>问题与代码</h2><p><img src=\"/tupian/11.26.png\"></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">scan</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">S</span> <span class=\"operator\">=</span> scan.next(); <span class=\"comment\">// 从标准输入读取一个字符串</span></span><br><span class=\"line\">        <span class=\"type\">char</span>[] c = S.toCharArray(); <span class=\"comment\">// 将字符串转换为字符数组</span></span><br><span class=\"line\">        <span class=\"type\">StringBuilder</span> <span class=\"variable\">sb</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>(); <span class=\"comment\">// 创建一个StringBuilder对象，用于构建字符串</span></span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> Math.pow(<span class=\"number\">10</span>, <span class=\"number\">6</span>); <span class=\"comment\">// 定义一个变量a，值为10的6次方，但这里实际上用不上，因为字符串长度是int类型</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 检查字符串长度是否在1到10^6之间（虽然a是double类型，但这里只是形式上的检查，因为字符串长度不会超过Integer.MAX_VALUE）</span></span><br><span class=\"line\">        </span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; c.length; i++) &#123;</span><br><span class=\"line\">                <span class=\"type\">char</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> c[i]; <span class=\"comment\">// 获取当前字符</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 检查字符是否为字母（ASCII码65-90为大写字母A-Z，97-122为小写字母a-z）</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (str &gt;= <span class=\"number\">65</span> &amp;&amp; str &lt;= <span class=\"number\">90</span> || str &gt;= <span class=\"number\">97</span> &amp;&amp; str &lt;= <span class=\"number\">122</span>) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 这里开始出现问题：每次遇到字母时，都会重新遍历整个字符串并反转，这是不必要的</span></span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i1</span> <span class=\"operator\">=</span> c.length - <span class=\"number\">1</span>; i1 &gt;= <span class=\"number\">0</span>; i1--) &#123;</span><br><span class=\"line\">                        <span class=\"type\">char</span> <span class=\"variable\">str2</span> <span class=\"operator\">=</span> c[i1]; <span class=\"comment\">// 获取反转后的字符</span></span><br><span class=\"line\">                        sb.append(str2); <span class=\"comment\">// 将字符添加到StringBuilder中</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"type\">String</span> <span class=\"variable\">str3</span> <span class=\"operator\">=</span> sb.toString(); <span class=\"comment\">// 将StringBuilder转换为字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">// 检查反转后的字符串是否与原字符串相同</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (str3.equals(S)) &#123;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">&quot;Y&quot;</span>); <span class=\"comment\">// 如果是，输出Y</span></span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">&quot;N&quot;</span>); <span class=\"comment\">// 如果不是，输出N</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>; <span class=\"comment\">// 一旦完成比较，就退出循环，这意味着只要第一个字符是字母，就会立即判断</span></span><br><span class=\"line\"></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;N&quot;</span>); <span class=\"comment\">// 如果当前字符不是字母，直接输出N并退出循环</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 注意：这里的逻辑存在问题，因为无论是否找到字母，都会立即退出循环，</span></span><br><span class=\"line\">                <span class=\"comment\">// 这意味着代码只能检查字符串的第一个字符是否为字母以及它是否构成回文。</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        scan.close(); <span class=\"comment\">// 关闭Scanner对象</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 存在的问题和改进建议：</span></span><br><span class=\"line\"><span class=\"comment\">// 1. 不需要每次遇到字母都重新反转整个字符串，只需在循环结束后进行一次反转检查。</span></span><br><span class=\"line\"><span class=\"comment\">// 2. 可以先过滤掉非字母字符，再检查剩余部分是否为回文。</span></span><br><span class=\"line\"><span class=\"comment\">// 3. 变量a的声明和使用是多余的，因为字符串长度是int类型，不会超过Integer.MAX_VALUE。</span></span><br><span class=\"line\"><span class=\"comment\">// 4. 可以使用更高效的算法，如双指针法，来检查回文。</span></span><br></pre></td></tr></table></figure>"},{"title":"2024-11-27-蓝桥杯：查找最大元素","date":"2024-12-11T12:17:51.000Z","photos":["/tupian/11.27tupian.jpg"],"_content":"# 查找最大元素\n\n## 问题与代码\n\n![](/tupian/11.27.png)\n\n\n### 思路\n```java\n//读取字符串并转换为字符数组：\nString str = scan.next();\nchar[] chars = str.toCharArray();\n//找出ASCII码值最大的字符：\nchar max = 'a';\nfor(int j=0;j<chars.length;j++){\n  if(chars[j]>max){\n    max=chars[j];\n  }\n}\n//替换最大字符：\nString result = str.replaceAll(max+\"\",max+\"(max)\");\n```","source":"_posts/2024-11-27-蓝桥杯：查找最大元素.md","raw":"---\ntitle: 2024-11-27-蓝桥杯：查找最大元素\ndate: 2024-12-11 20:17:51\ntags:\n    - 字符串\ncategories: 算法\nphotos: /tupian/11.27tupian.jpg\n---\n# 查找最大元素\n\n## 问题与代码\n\n![](/tupian/11.27.png)\n\n\n### 思路\n```java\n//读取字符串并转换为字符数组：\nString str = scan.next();\nchar[] chars = str.toCharArray();\n//找出ASCII码值最大的字符：\nchar max = 'a';\nfor(int j=0;j<chars.length;j++){\n  if(chars[j]>max){\n    max=chars[j];\n  }\n}\n//替换最大字符：\nString result = str.replaceAll(max+\"\",max+\"(max)\");\n```","slug":"2024-11-27-蓝桥杯：查找最大元素","published":1,"updated":"2024-12-11T12:24:54.151Z","comments":1,"layout":"post","_id":"cm4jv4yf500003oto9x659yb0","content":"<h1 id=\"查找最大元素\"><a href=\"#查找最大元素\" class=\"headerlink\" title=\"查找最大元素\"></a>查找最大元素</h1><h2 id=\"问题与代码\"><a href=\"#问题与代码\" class=\"headerlink\" title=\"问题与代码\"></a>问题与代码</h2><p><img src=\"/tupian/11.27.png\"></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//读取字符串并转换为字符数组：</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> scan.next();</span><br><span class=\"line\"><span class=\"type\">char</span>[] chars = str.toCharArray();</span><br><span class=\"line\"><span class=\"comment\">//找出ASCII码值最大的字符：</span></span><br><span class=\"line\"><span class=\"type\">char</span> <span class=\"variable\">max</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;chars.length;j++)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(chars[j]&gt;max)&#123;</span><br><span class=\"line\">    max=chars[j];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//替换最大字符：</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> str.replaceAll(max+<span class=\"string\">&quot;&quot;</span>,max+<span class=\"string\">&quot;(max)&quot;</span>);</span><br></pre></td></tr></table></figure>","length":301,"excerpt":"","more":"<h1 id=\"查找最大元素\"><a href=\"#查找最大元素\" class=\"headerlink\" title=\"查找最大元素\"></a>查找最大元素</h1><h2 id=\"问题与代码\"><a href=\"#问题与代码\" class=\"headerlink\" title=\"问题与代码\"></a>问题与代码</h2><p><img src=\"/tupian/11.27.png\"></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//读取字符串并转换为字符数组：</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> scan.next();</span><br><span class=\"line\"><span class=\"type\">char</span>[] chars = str.toCharArray();</span><br><span class=\"line\"><span class=\"comment\">//找出ASCII码值最大的字符：</span></span><br><span class=\"line\"><span class=\"type\">char</span> <span class=\"variable\">max</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;chars.length;j++)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(chars[j]&gt;max)&#123;</span><br><span class=\"line\">    max=chars[j];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//替换最大字符：</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> str.replaceAll(max+<span class=\"string\">&quot;&quot;</span>,max+<span class=\"string\">&quot;(max)&quot;</span>);</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cm4ig3om10000aotocfzl4u55","category_id":"cm4ig3om30001aotoh46r94bn","_id":"cm4ig3om40004aoto2o7m3iz2"},{"post_id":"cm4jrjgvw00001ctohz7sglm8","category_id":"cm4ig3om30001aotoh46r94bn","_id":"cm4jspdre0000actod7nn67qo"},{"post_id":"cm4jufhz10000loto93w81t3z","category_id":"cm4ig3om30001aotoh46r94bn","_id":"cm4jufhz60002lotoclg3erpa"},{"post_id":"cm4jv4yf500003oto9x659yb0","category_id":"cm4ig3om30001aotoh46r94bn","_id":"cm4jv4yf700023otogee0hary"}],"PostTag":[{"post_id":"cm4ig3om10000aotocfzl4u55","tag_id":"cm4ig3om40002aoto73qf2kp9","_id":"cm4ig3om50006aoto6b0eg5j0"},{"post_id":"cm4ig3om10000aotocfzl4u55","tag_id":"cm4ig3om40003aotoccaiec3x","_id":"cm4ig3om50007aotob0uk7k5r"},{"post_id":"cm4ig3om10000aotocfzl4u55","tag_id":"cm4ig3om40005aoto8yjiem1s","_id":"cm4ig3om50008aoto7vjicxtx"},{"post_id":"cm4jrjgvw00001ctohz7sglm8","tag_id":"cm4jrjgvz00011ctoerg2abf5","_id":"cm4jrjgw000031cto90i99kxi"},{"post_id":"cm4jrjgvw00001ctohz7sglm8","tag_id":"cm4jrjgvz00021cto3kxqcjwp","_id":"cm4jrjgw000041ctohrdk42ox"},{"post_id":"cm4jrjgvw00001ctohz7sglm8","tag_id":"cm4ig3om40005aoto8yjiem1s","_id":"cm4jrjgw000051ctoe5pa3v37"},{"post_id":"cm4jufhz10000loto93w81t3z","tag_id":"cm4jufhz50001loto8gevdie0","_id":"cm4jufhz60003loto1wmxb3e0"},{"post_id":"cm4jufhz10000loto93w81t3z","tag_id":"cm4ig3om40003aotoccaiec3x","_id":"cm4jufhz60004lotoc8tv4sjm"},{"post_id":"cm4jufhz10000loto93w81t3z","tag_id":"cm4ig3om40005aoto8yjiem1s","_id":"cm4jufhz60005lotoali85oy7"},{"post_id":"cm4jv4yf500003oto9x659yb0","tag_id":"cm4ig3om40003aotoccaiec3x","_id":"cm4jv4yf700013oto99l4cbv9"}],"Tag":[{"name":"算法","_id":"cm4ig3om40002aoto73qf2kp9"},{"name":"字符串","_id":"cm4ig3om40003aotoccaiec3x"},{"name":"模拟","_id":"cm4ig3om40005aoto8yjiem1s"},{"name":"语法","_id":"cm4jrjgvz00011ctoerg2abf5"},{"name":"STL","_id":"cm4jrjgvz00021cto3kxqcjwp"},{"name":"双指针","_id":"cm4jufhz50001loto8gevdie0"}]}}
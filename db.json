{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"source/tupian/1.png","path":"tupian/1.png","modified":0,"renderable":0},{"_id":"source/tupian/11.24tupian.jpg","path":"tupian/11.24tupian.jpg","modified":0,"renderable":0},{"_id":"source/tupian/11.25(1).png","path":"tupian/11.25(1).png","modified":0,"renderable":0},{"_id":"source/tupian/11.25(2).png","path":"tupian/11.25(2).png","modified":0,"renderable":0},{"_id":"source/tupian/11.25tupian.jpg","path":"tupian/11.25tupian.jpg","modified":0,"renderable":0},{"_id":"source/tupian/11.26.png","path":"tupian/11.26.png","modified":0,"renderable":0},{"_id":"source/tupian/11.26tupian.jpg","path":"tupian/11.26tupian.jpg","modified":0,"renderable":0},{"_id":"source/tupian/11.27.png","path":"tupian/11.27.png","modified":0,"renderable":0},{"_id":"source/tupian/11.27tupian.jpg","path":"tupian/11.27tupian.jpg","modified":0,"renderable":0},{"_id":"source/tupian/1545615769372(1).png","path":"tupian/1545615769372(1).png","modified":0,"renderable":0},{"_id":"source/tupian/1545615769372.png","path":"tupian/1545615769372.png","modified":0,"renderable":0},{"_id":"source/tupian/1545616039363(1).png","path":"tupian/1545616039363(1).png","modified":0,"renderable":0},{"_id":"source/tupian/1545616039363.png","path":"tupian/1545616039363.png","modified":0,"renderable":0},{"_id":"source/tupian/1545616221283(1).png","path":"tupian/1545616221283(1).png","modified":0,"renderable":0},{"_id":"source/tupian/1545616221283.png","path":"tupian/1545616221283.png","modified":0,"renderable":0},{"_id":"source/tupian/1545616667104(1).png","path":"tupian/1545616667104(1).png","modified":0,"renderable":0},{"_id":"source/tupian/1545616667104.png","path":"tupian/1545616667104.png","modified":0,"renderable":0},{"_id":"source/tupian/2.png","path":"tupian/2.png","modified":0,"renderable":0},{"_id":"source/tupian/3.png","path":"tupian/3.png","modified":0,"renderable":0},{"_id":"source/tupian/4.png","path":"tupian/4.png","modified":0,"renderable":0},{"_id":"source/tupian/5.png","path":"tupian/5.png","modified":0,"renderable":0},{"_id":"source/tupian/cmd.png","path":"tupian/cmd.png","modified":0,"renderable":0},{"_id":"source/tupian/idea1.png","path":"tupian/idea1.png","modified":0,"renderable":0},{"_id":"source/tupian/hengbantupian.jpg","path":"tupian/hengbantupian.jpg","modified":0,"renderable":0},{"_id":"source/tupian/idea10.png","path":"tupian/idea10.png","modified":0,"renderable":0},{"_id":"source/tupian/idea11.png","path":"tupian/idea11.png","modified":0,"renderable":0},{"_id":"source/tupian/idea12.png","path":"tupian/idea12.png","modified":0,"renderable":0},{"_id":"source/tupian/idea13.png","path":"tupian/idea13.png","modified":0,"renderable":0},{"_id":"source/tupian/idea14.png","path":"tupian/idea14.png","modified":0,"renderable":0},{"_id":"source/tupian/idea15.png","path":"tupian/idea15.png","modified":0,"renderable":0},{"_id":"source/tupian/idea16.png","path":"tupian/idea16.png","modified":0,"renderable":0},{"_id":"source/tupian/idea2.png","path":"tupian/idea2.png","modified":0,"renderable":0},{"_id":"source/tupian/idea3.png","path":"tupian/idea3.png","modified":0,"renderable":0},{"_id":"source/tupian/idea4.png","path":"tupian/idea4.png","modified":0,"renderable":0},{"_id":"source/tupian/idea5.png","path":"tupian/idea5.png","modified":0,"renderable":0},{"_id":"source/tupian/idea6.png","path":"tupian/idea6.png","modified":0,"renderable":0},{"_id":"source/tupian/idea7.png","path":"tupian/idea7.png","modified":0,"renderable":0},{"_id":"source/tupian/idea8.png","path":"tupian/idea8.png","modified":0,"renderable":0},{"_id":"source/tupian/idea9.png","path":"tupian/idea9.png","modified":0,"renderable":0},{"_id":"source/tupian/idea使用1.png","path":"tupian/idea使用1.png","modified":0,"renderable":0},{"_id":"source/tupian/idea安装1.png","path":"tupian/idea安装1.png","modified":0,"renderable":0},{"_id":"source/tupian/idea安装10.png","path":"tupian/idea安装10.png","modified":0,"renderable":0},{"_id":"source/tupian/idea安装11.png","path":"tupian/idea安装11.png","modified":0,"renderable":0},{"_id":"source/tupian/idea安装2.png","path":"tupian/idea安装2.png","modified":0,"renderable":0},{"_id":"source/tupian/idea安装3.png","path":"tupian/idea安装3.png","modified":0,"renderable":0},{"_id":"source/tupian/idea安装4.png","path":"tupian/idea安装4.png","modified":0,"renderable":0},{"_id":"source/tupian/idea安装5.png","path":"tupian/idea安装5.png","modified":0,"renderable":0},{"_id":"source/tupian/idea安装6.png","path":"tupian/idea安装6.png","modified":0,"renderable":0},{"_id":"source/tupian/idea安装7.png","path":"tupian/idea安装7.png","modified":0,"renderable":0},{"_id":"source/tupian/idea安装8.png","path":"tupian/idea安装8.png","modified":0,"renderable":0},{"_id":"source/tupian/idea安装9.png","path":"tupian/idea安装9.png","modified":0,"renderable":0},{"_id":"source/tupian/image-20210923091350952.png","path":"tupian/image-20210923091350952.png","modified":0,"renderable":0},{"_id":"source/tupian/image-20210923091527227.png","path":"tupian/image-20210923091527227.png","modified":0,"renderable":0},{"_id":"source/tupian/image-20210923091544110.png","path":"tupian/image-20210923091544110.png","modified":0,"renderable":0},{"_id":"source/tupian/image-20210923091654365.png","path":"tupian/image-20210923091654365.png","modified":0,"renderable":0},{"_id":"source/tupian/image-20210923091710450.png","path":"tupian/image-20210923091710450.png","modified":0,"renderable":0},{"_id":"source/tupian/image-20210923091721035.png","path":"tupian/image-20210923091721035.png","modified":0,"renderable":0},{"_id":"source/tupian/image-20210923100419575.png","path":"tupian/image-20210923100419575.png","modified":0,"renderable":0},{"_id":"source/tupian/j01.jpg","path":"tupian/j01.jpg","modified":0,"renderable":0},{"_id":"source/tupian/j02.jpg","path":"tupian/j02.jpg","modified":0,"renderable":0},{"_id":"source/tupian/j03.jpg","path":"tupian/j03.jpg","modified":0,"renderable":0},{"_id":"source/tupian/j04.jpg","path":"tupian/j04.jpg","modified":0,"renderable":0},{"_id":"source/tupian/j05.jpg","path":"tupian/j05.jpg","modified":0,"renderable":0},{"_id":"source/tupian/j06.jpg","path":"tupian/j06.jpg","modified":0,"renderable":0},{"_id":"source/tupian/j07.jpg","path":"tupian/j07.jpg","modified":0,"renderable":0},{"_id":"source/tupian/j08.jpg","path":"tupian/j08.jpg","modified":0,"renderable":0},{"_id":"source/tupian/niulangquming.png","path":"tupian/niulangquming.png","modified":0,"renderable":0},{"_id":"source/tupian/touxiang.png","path":"tupian/touxiang.png","modified":0,"renderable":0},{"_id":"source/tupian/下载1.png","path":"tupian/下载1.png","modified":0,"renderable":0},{"_id":"source/tupian/下载2.png","path":"tupian/下载2.png","modified":0,"renderable":0},{"_id":"source/tupian/下载3.png","path":"tupian/下载3.png","modified":0,"renderable":0},{"_id":"source/tupian/修改模块名1.png","path":"tupian/修改模块名1.png","modified":0,"renderable":0},{"_id":"source/tupian/修改模块名3.png","path":"tupian/修改模块名3.png","modified":0,"renderable":0},{"_id":"source/tupian/修改模块名4.png","path":"tupian/修改模块名4.png","modified":0,"renderable":0},{"_id":"source/tupian/修改模块名5.png","path":"tupian/修改模块名5.png","modified":0,"renderable":0},{"_id":"source/tupian/修改类名1.png","path":"tupian/修改类名1.png","modified":0,"renderable":0},{"_id":"source/tupian/修改类名2.png","path":"tupian/修改类名2.png","modified":0,"renderable":0},{"_id":"source/tupian/修改类名3.png","path":"tupian/修改类名3.png","modified":0,"renderable":0},{"_id":"source/tupian/修改项目1.png","path":"tupian/修改项目1.png","modified":0,"renderable":0},{"_id":"source/tupian/修改项目2.png","path":"tupian/修改项目2.png","modified":0,"renderable":0},{"_id":"source/tupian/修改项目3.png","path":"tupian/修改项目3.png","modified":0,"renderable":0},{"_id":"source/tupian/修改项目4.png","path":"tupian/修改项目4.png","modified":0,"renderable":0},{"_id":"source/tupian/修改项目5.png","path":"tupian/修改项目5.png","modified":0,"renderable":0},{"_id":"source/tupian/修改项目6.png","path":"tupian/修改项目6.png","modified":0,"renderable":0},{"_id":"source/tupian/修改项目7.png","path":"tupian/修改项目7.png","modified":0,"renderable":0},{"_id":"source/tupian/关闭项目1.png","path":"tupian/关闭项目1.png","modified":0,"renderable":0},{"_id":"source/tupian/关闭项目2.png","path":"tupian/关闭项目2.png","modified":0,"renderable":0},{"_id":"source/tupian/关闭项目3.png","path":"tupian/关闭项目3.png","modified":0,"renderable":0},{"_id":"source/tupian/删除模块1.png","path":"tupian/删除模块1.png","modified":0,"renderable":0},{"_id":"source/tupian/删除模块2.png","path":"tupian/删除模块2.png","modified":0,"renderable":0},{"_id":"source/tupian/删除模块3.png","path":"tupian/删除模块3.png","modified":0,"renderable":0},{"_id":"source/tupian/删除类文件1.png","path":"tupian/删除类文件1.png","modified":0,"renderable":0},{"_id":"source/tupian/删除类文件2.png","path":"tupian/删除类文件2.png","modified":0,"renderable":0},{"_id":"source/tupian/安装1.png","path":"tupian/安装1.png","modified":0,"renderable":0},{"_id":"source/tupian/安装2.png","path":"tupian/安装2.png","modified":0,"renderable":0},{"_id":"source/tupian/安装3.png","path":"tupian/安装3.png","modified":0,"renderable":0},{"_id":"source/tupian/安装4.png","path":"tupian/安装4.png","modified":0,"renderable":0},{"_id":"source/tupian/导入模块1.png","path":"tupian/导入模块1.png","modified":0,"renderable":0},{"_id":"source/tupian/导入模块10.png","path":"tupian/导入模块10.png","modified":0,"renderable":0},{"_id":"source/tupian/导入模块11.png","path":"tupian/导入模块11.png","modified":0,"renderable":0},{"_id":"source/tupian/导入模块2.png","path":"tupian/导入模块2.png","modified":0,"renderable":0},{"_id":"source/tupian/导入模块3.png","path":"tupian/导入模块3.png","modified":0,"renderable":0},{"_id":"source/tupian/导入模块4.png","path":"tupian/导入模块4.png","modified":0,"renderable":0},{"_id":"source/tupian/导入模块5.png","path":"tupian/导入模块5.png","modified":0,"renderable":0},{"_id":"source/tupian/导入模块6.png","path":"tupian/导入模块6.png","modified":0,"renderable":0},{"_id":"source/tupian/导入模块7.png","path":"tupian/导入模块7.png","modified":0,"renderable":0},{"_id":"source/tupian/导入模块8.png","path":"tupian/导入模块8.png","modified":0,"renderable":0},{"_id":"source/tupian/导入模块9.png","path":"tupian/导入模块9.png","modified":0,"renderable":0},{"_id":"source/tupian/打开项目1.png","path":"tupian/打开项目1.png","modified":0,"renderable":0},{"_id":"source/tupian/打开项目2.png","path":"tupian/打开项目2.png","modified":0,"renderable":0},{"_id":"source/tupian/新建模块1.png","path":"tupian/新建模块1.png","modified":0,"renderable":0},{"_id":"source/tupian/打开项目3.png","path":"tupian/打开项目3.png","modified":0,"renderable":0},{"_id":"source/tupian/新建模块2.png","path":"tupian/新建模块2.png","modified":0,"renderable":0},{"_id":"source/tupian/新建模块3.png","path":"tupian/新建模块3.png","modified":0,"renderable":0},{"_id":"source/tupian/新建模块4.png","path":"tupian/新建模块4.png","modified":0,"renderable":0},{"_id":"source/tupian/新建模块5.png","path":"tupian/新建模块5.png","modified":0,"renderable":0},{"_id":"source/tupian/新建模块6.png","path":"tupian/新建模块6.png","modified":0,"renderable":0},{"_id":"source/tupian/新建模块7.png","path":"tupian/新建模块7.png","modified":0,"renderable":0},{"_id":"source/tupian/新建类1.png","path":"tupian/新建类1.png","modified":0,"renderable":0},{"_id":"source/tupian/新建类2.png","path":"tupian/新建类2.png","modified":0,"renderable":0},{"_id":"source/tupian/新建类3.png","path":"tupian/新建类3.png","modified":0,"renderable":0},{"_id":"source/tupian/新建项目1.png","path":"tupian/新建项目1.png","modified":0,"renderable":0},{"_id":"source/tupian/新建项目2.png","path":"tupian/新建项目2.png","modified":0,"renderable":0},{"_id":"source/tupian/新建项目3.png","path":"tupian/新建项目3.png","modified":0,"renderable":0},{"_id":"source/tupian/新建项目4.png","path":"tupian/新建项目4.png","modified":0,"renderable":0},{"_id":"source/tupian/新建项目5.png","path":"tupian/新建项目5.png","modified":0,"renderable":0},{"_id":"source/tupian/新建项目6.png","path":"tupian/新建项目6.png","modified":0,"renderable":0},{"_id":"node_modules/hexo-theme-vivia/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-128.png","path":"images/favicon-dark-128.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-180.png","path":"images/favicon-dark-180.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-192.png","path":"images/favicon-dark-192.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-32.png","path":"images/favicon-dark-32.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-128.png","path":"images/favicon-light-128.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-180.png","path":"images/favicon-light-180.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-192.png","path":"images/favicon-light-192.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-32.png","path":"images/favicon-light-32.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/images/tile.png","path":"images/tile.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/jquery-3.4.1.min.js","path":"js/jquery-3.4.1.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/color.global.min.js","path":"js/color.global.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/light-dark-switch.js","path":"js/light-dark-switch.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/load-settings.js","path":"js/load-settings.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Bold.ttf","path":"css/fonts/Roboto-Bold.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Medium.ttf","path":"css/fonts/Roboto-Medium.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Regular.ttf","path":"css/fonts/Roboto-Regular.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.woff2","path":"css/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"source/tupian/1 (2).png","path":"tupian/1 (2).png","modified":0,"renderable":0},{"_id":"source/tupian/1(1).png","path":"tupian/1(1).png","modified":0,"renderable":0},{"_id":"source/tupian/111(1).jpg","path":"tupian/111(1).jpg","modified":0,"renderable":0},{"_id":"source/tupian/111.jpg","path":"tupian/111.jpg","modified":0,"renderable":0},{"_id":"source/tupian/2 (2).png","path":"tupian/2 (2).png","modified":0,"renderable":0},{"_id":"source/tupian/2(1).png","path":"tupian/2(1).png","modified":0,"renderable":0},{"_id":"source/tupian/3 (2).png","path":"tupian/3 (2).png","modified":0,"renderable":0},{"_id":"source/tupian/3(1).png","path":"tupian/3(1).png","modified":0,"renderable":0},{"_id":"source/tupian/4 (2).png","path":"tupian/4 (2).png","modified":0,"renderable":0},{"_id":"source/tupian/4(1).png","path":"tupian/4(1).png","modified":0,"renderable":0},{"_id":"source/tupian/图片1.png","path":"tupian/图片1.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/_posts/2024-11-24-蓝桥杯：牛郎取名.md","hash":"fb0ddb7f9e478f579e237e0c7b5f636c684971e8","modified":1733915803397},{"_id":"source/_posts/2024-11-16-蓝桥杯：回文判定.md","hash":"f4fe3fa35b2a4e9335413717023b9588a6f16e4c","modified":1733918706327},{"_id":"source/_posts/2024-11-25-蓝桥杯：数字转换字母.md","hash":"af11dd9282ab7f603244c2d3ca6dbac7be5565a9","modified":1733915801218},{"_id":"source/_posts/2024-11-27-蓝桥杯：查找最大元素.md","hash":"79be228b43059f4be5cfcfa5461ca7552bce7efc","modified":1733919894151},{"_id":"source/_posts/day01-Java基础语法.md","hash":"6251cbb1e9f8a8694f98903d1b413f5db94ec95f","modified":1733993342270},{"_id":"source/_posts/day03笔记.md","hash":"931b3146f24029aebd00620974a8ce1d1a18435e","modified":1733993342270},{"_id":"source/_posts/day02-Java基础语法.md","hash":"5f5dedb577dab2dc474b6c7fd2b7be9339d26d80","modified":1733993342270},{"_id":"source/_posts/day04-流程控制语句.md","hash":"8bcba18cccb646bada0b7816b398eea38661a7a7","modified":1733997046151},{"_id":"source/_posts/day05-循环高级.md","hash":"fa5f4080b9118d2a7e86e9c7a02d26daab488e51","modified":1733993342268},{"_id":"source/_posts/day05-数组.md","hash":"7c5771be68ec256bf5158d8c7853de45a632931d","modified":1733993342268},{"_id":"source/_posts/day06-方法.md","hash":"04113553261937133c32530eaff70032d08d90aa","modified":1733993342268},{"_id":"source/_posts/day07-综合练习.md","hash":"25bbcb67feeb8c847b662c0daca5003274e6471c","modified":1734053024001},{"_id":"source/_posts/day08-面向对象.md","hash":"95687520320929025bc4444e7bd0326deac22693","modified":1734052809639},{"_id":"source/about/index.md","hash":"c502d6865f651e1ebd591f2be0b22e72f7ed46f5","modified":1733919189048},{"_id":"source/tupian/1545615769372(1).png","hash":"989a9a991ab7f28c0c0b5a69d46e7e5f0ebe3f0a","modified":1733996909182},{"_id":"source/tupian/1545616039363(1).png","hash":"d03986f03e51e6564037662f7280b9fe70026367","modified":1733996909218},{"_id":"source/tupian/1545615769372.png","hash":"989a9a991ab7f28c0c0b5a69d46e7e5f0ebe3f0a","modified":1733996907086},{"_id":"source/tupian/1545616221283.png","hash":"64b743f9547698f4133ba3915c8914751c691ee9","modified":1733996907092},{"_id":"source/tupian/1545616039363.png","hash":"d03986f03e51e6564037662f7280b9fe70026367","modified":1733996907104},{"_id":"source/tupian/1545616221283(1).png","hash":"64b743f9547698f4133ba3915c8914751c691ee9","modified":1733996909131},{"_id":"source/tupian/1545616667104(1).png","hash":"cae9edab1c8320dd85098612b26b65b84e1a5518","modified":1733996909182},{"_id":"source/tupian/1545616667104.png","hash":"cae9edab1c8320dd85098612b26b65b84e1a5518","modified":1733996907429},{"_id":"source/tupian/cmd.png","hash":"3be2f71750421d4c17414aedfcd3747f792bee98","modified":1733577134801},{"_id":"source/tupian/5.png","hash":"6443dea559da3cd83e690df05069640b0bafa342","modified":1733577132789},{"_id":"source/tupian/idea11.png","hash":"851e6621586db08a15160eca42979fee58815d7d","modified":1733577175639},{"_id":"source/tupian/idea16.png","hash":"56bd0f3a0d64a5de9e59affef951eb5f54a67bc3","modified":1733577183173},{"_id":"source/tupian/idea4.png","hash":"b8eaf0f6bd52fd0ad75c1bec206bd893f9092ca9","modified":1733577187450},{"_id":"source/tupian/idea使用1.png","hash":"69986d6034cc12c3b8de814b135f29d582c818f6","modified":1733577207460},{"_id":"source/tupian/idea安装7.png","hash":"22efb6c87cbbf8b045856924f8bc54bf8431c9d6","modified":1733577207294},{"_id":"source/tupian/image-20210923091544110.png","hash":"abf385101b66988431392b9a31eb8a3680dfdacf","modified":1733577137928},{"_id":"source/tupian/image-20210923091721035.png","hash":"d65ee924efacb5b55bf5d19aa576675090e52eec","modified":1733577140667},{"_id":"source/tupian/image-20210923091710450.png","hash":"e00f386a19d123c92afd08a7b0f53cff42defd13","modified":1733577140830},{"_id":"source/tupian/image-20210923100419575.png","hash":"4f360c8dbd8f3f944be7982a903c6e2595c1d38d","modified":1733577142366},{"_id":"source/tupian/下载1.png","hash":"0ef7daa7c9702a530c9fcd7a58827bccebf83610","modified":1733577247437},{"_id":"source/tupian/修改模块名3.png","hash":"dd4aa55174170b437cb1a1214ef1418c075ec448","modified":1733577283923},{"_id":"source/tupian/修改模块名5.png","hash":"d2428bf1c1eaa26234daeb73452e6c2aa12896b9","modified":1733577288426},{"_id":"source/tupian/修改项目5.png","hash":"588dfe791cd70196131cff20d88358b1b5f14fe9","modified":1733577293670},{"_id":"source/tupian/删除模块2.png","hash":"ad90348da83d2699c853dd64bba3a35dbe0754d5","modified":1733577243084},{"_id":"source/tupian/删除模块3.png","hash":"70a2b65ee3b319c32dcf08fbfc289b2e91e96cf9","modified":1733577243612},{"_id":"source/tupian/删除类文件2.png","hash":"8a0eecbbb4db864cd46c6d6926dd2fbed6269a04","modified":1733577242895},{"_id":"source/tupian/安装1.png","hash":"361426a54ac628266ddf9a190b41b7f73c5293e7","modified":1733577210321},{"_id":"source/tupian/安装4.png","hash":"0f7692b136b51e0cd54dc066a66f3a059df71eec","modified":1733577214179},{"_id":"source/tupian/安装3.png","hash":"98d388b8d5ccccf9a767762e69039230da8dc7cf","modified":1733577210398},{"_id":"source/tupian/导入模块6.png","hash":"1f1a163c8449e52a13a20cf5bfce89fa31f34e16","modified":1733577229996},{"_id":"source/tupian/导入模块8.png","hash":"233256842ce3b0b4724c1559fe82ba3b405a9ee5","modified":1733577234031},{"_id":"source/tupian/新建类2.png","hash":"2e14aae21b78fd7124d7602290e32c805c8f72b3","modified":1733577250743},{"_id":"source/tupian/新建项目4.png","hash":"31f2cf885b437541dece4518952a443ca67c5bd2","modified":1733577276137},{"_id":"source/tupian/新建项目3.png","hash":"0569f1da6715faf72c0c44b52c472fbee5c0f020","modified":1733577273317},{"_id":"source/tupian/3.png","hash":"e5b0585ee0d93a884fd55b2b5c218d35b2c3d566","modified":1733577132647},{"_id":"source/tupian/4.png","hash":"ebc3b19a5b145e2a9eda34f7bec92ef6c54ad48a","modified":1733577134700},{"_id":"source/tupian/idea1.png","hash":"08b348c0720f65946fa354d728f7611e5c69ebfc","modified":1733577177617},{"_id":"source/tupian/idea14.png","hash":"5f843e17a79a695f9a235f3e72d348b13e036147","modified":1733577180659},{"_id":"source/tupian/idea3.png","hash":"a9b9bae1657ab40b6eaad7f47e1fda002143445a","modified":1733577187218},{"_id":"source/tupian/idea5.png","hash":"f41695ae7352f6e33155e6dcba475b332db867bc","modified":1733577192475},{"_id":"source/tupian/idea6.png","hash":"bb42de30f02f7097666a299ad0b25978978b5fb6","modified":1733577193762},{"_id":"source/tupian/idea8.png","hash":"1599bf0a9a63ea4250818c0698adcee7ae48dbd7","modified":1733577195740},{"_id":"source/tupian/idea安装11.png","hash":"f8675b5dd5b6cf4392a6406329b5446f498f9638","modified":1733577200281},{"_id":"source/tupian/idea安装10.png","hash":"4ebe127c908b61e20b5515ca7234e195e05679db","modified":1733577200796},{"_id":"source/tupian/idea安装1.png","hash":"66be95b0c117ba797b02ff6db9ca108aeaac5d61","modified":1733577199735},{"_id":"source/tupian/idea安装2.png","hash":"eb9688a4d53456e5ff6704c5b226766ca61c8599","modified":1733577204758},{"_id":"source/tupian/idea安装3.png","hash":"71e577102cdd75963b535ef7bd073b8774f592b9","modified":1733577204805},{"_id":"source/tupian/idea安装4.png","hash":"146ca18feee9ba9b72206f53419a33f2821ecb06","modified":1733577206081},{"_id":"source/tupian/idea安装6.png","hash":"886b1e2d20314d1616adf3ac27b453520bb9d9fb","modified":1733577206828},{"_id":"source/tupian/idea安装5.png","hash":"231c74e3a18be80b697e6fd78606ac5d022a5163","modified":1733577206350},{"_id":"source/tupian/idea安装9.png","hash":"b221ae85bbae1f755f8f8183cc29db06b70791b7","modified":1733577210632},{"_id":"source/tupian/image-20210923091350952.png","hash":"44271850188df5c2adcf9660e166b89f150574a9","modified":1733577139347},{"_id":"source/tupian/image-20210923091527227.png","hash":"27765879f9ed2325e91668fafa1173a9eeea9067","modified":1733577139707},{"_id":"source/tupian/image-20210923091654365.png","hash":"4fc53fa9176ab3a30dbad2ba942ba41eca7cca0b","modified":1733577142742},{"_id":"source/tupian/修改模块名4.png","hash":"4aa14e1a5d656e08579aced0b8d6d23d24e08d30","modified":1733577288271},{"_id":"source/tupian/修改类名2.png","hash":"c42a6e5f943d9ca6a5843c6212d6f324d96e0181","modified":1733577280372},{"_id":"source/tupian/修改项目6.png","hash":"6842c96723a00ed904f27dfd54cffd496b5349b5","modified":1733577297538},{"_id":"source/tupian/关闭项目2.png","hash":"a2109a083029af0c76db9803d66812398b5bc97d","modified":1733577239558},{"_id":"source/tupian/关闭项目3.png","hash":"d17d95dd2c1ab23b8c454bef801922004e5bb57f","modified":1733577239604},{"_id":"source/tupian/安装2.png","hash":"b614af6127bd0c1b28b0db9da18cd78a7be1a6c8","modified":1733577211351},{"_id":"source/tupian/导入模块1.png","hash":"e0aef9123f76655bca00952e0871f35f7cde4829","modified":1733577221729},{"_id":"source/tupian/导入模块4.png","hash":"84be223b61a69c231d87733dc555cefe8cd71ac8","modified":1733577227470},{"_id":"source/tupian/打开项目2.png","hash":"3ba5393d1c191563cc177beab0486476c6c0c49e","modified":1733577215469},{"_id":"source/tupian/打开项目1.png","hash":"e7fa77f2a754580df86d55ac39b6ea33678e5e73","modified":1733577215378},{"_id":"source/tupian/新建模块5.png","hash":"3202389b979f6d386c306e9596f357575138f47d","modified":1733577263721},{"_id":"source/tupian/新建模块7.png","hash":"677cb766371a97f0cd8af6bbfdfe5e83dad72281","modified":1733577268262},{"_id":"source/tupian/新建项目5.png","hash":"e76354f64d3f047e55a42fd04cd96df974501ad2","modified":1733577278846},{"_id":"source/tupian/11.27.png","hash":"3d3848226fbf8de93ca7b5aacdd232e84bfce905","modified":1733919620948},{"_id":"source/tupian/idea12.png","hash":"3787e464c5b5ae5ecd52f979641e9fc939864624","modified":1733577182055},{"_id":"source/tupian/idea2.png","hash":"b51ff6c46d68e1cc6b28115e90fc31d7ec3625c2","modified":1733577188719},{"_id":"source/tupian/idea9.png","hash":"a92d68321f992d3aab2f4eb62643c85594cc7dc1","modified":1733577201062},{"_id":"source/tupian/niulangquming.png","hash":"2a6d81615371b71c9e83fc31aa8d56db5924da1f","modified":1733826071589},{"_id":"source/tupian/下载2.png","hash":"3360e0a44e7840c4e0a7a42dd6b18ac52596f805","modified":1733577252690},{"_id":"source/tupian/修改项目1.png","hash":"ee0c8fac33b42b63bf9f11d6199868edd38581d8","modified":1733577294505},{"_id":"source/tupian/修改类名3.png","hash":"8547a2f72e1ed98956ef6341bd5b774273ed4a0a","modified":1733577283721},{"_id":"source/tupian/关闭项目1.png","hash":"d5bd7d2f43492201b120e1bdba5984cf3bb9630f","modified":1733577240102},{"_id":"source/tupian/导入模块10.png","hash":"9f456dbda28fca2b46ebe5e09ab49df74f7ba45c","modified":1733577222960},{"_id":"source/tupian/导入模块11.png","hash":"c984341afcd27eb85eb4ad8e37d4ae4d2b38fcc8","modified":1733577221992},{"_id":"source/tupian/导入模块3.png","hash":"ad2fe302f13b6e370453a713fa5f4458bfd05026","modified":1733577231291},{"_id":"source/tupian/导入模块9.png","hash":"cdf87d36511e2f71dea2d6bf5e5d2c7fca93db03","modified":1733577239402},{"_id":"source/tupian/新建模块1.png","hash":"79120e143c006b6b47d4289073a5b15af8398c91","modified":1733577258230},{"_id":"source/tupian/新建类3.png","hash":"c7f1f6450d719597958e8886092ca631c9f00d0d","modified":1733577259213},{"_id":"source/tupian/新建项目2.png","hash":"eb6e5f7f800a5b1ffc4492c94c7efb9f85e2f868","modified":1733577275840},{"_id":"source/tupian/1.png","hash":"f11b0e28a3d8b5d89175e818fbef40630f9169fe","modified":1733577138697},{"_id":"source/tupian/idea13.png","hash":"d0739e94ae73cf7cb2d6873b73bef044d6e75749","modified":1733577184963},{"_id":"source/tupian/修改模块名1.png","hash":"02508cd7681e318689a39f67549e711e666aa5d2","modified":1733577287426},{"_id":"source/tupian/修改项目7.png","hash":"527f0de977fc04d468744ec8d62cd12ea0156763","modified":1733577304068},{"_id":"source/tupian/删除类文件1.png","hash":"0dcfe184d05f0ce2af849aa9a0f8740b73061334","modified":1733577248637},{"_id":"source/tupian/导入模块5.png","hash":"c30d6dc68ff573821fcacaa75569553cbc8c8a57","modified":1733577232536},{"_id":"source/tupian/导入模块7.png","hash":"62f96b9895c1db75b6be9969ca91d02783445a2f","modified":1733577237097},{"_id":"source/tupian/新建模块2.png","hash":"0b859d376a4a6abd3aa64561a2c8dd2ec988b3af","modified":1733577262772},{"_id":"source/tupian/新建模块6.png","hash":"6a746133768a12a7eab5c9c6fe7790ea1eb878bf","modified":1733577269818},{"_id":"source/tupian/新建类1.png","hash":"99dacd91ab89d5188a39273ffcfa96b4deeac97a","modified":1733577259072},{"_id":"source/tupian/新建项目1.png","hash":"ecc658d198e7bd51cd0335202b14373688ef43c9","modified":1733577273344},{"_id":"source/tupian/11.25(2).png","hash":"fcc123fc99e7e70f4c42f96c9e012f83444625e5","modified":1733913473204},{"_id":"source/tupian/11.25(1).png","hash":"48856e54be480260b0167b66222e10f1d2f4d490","modified":1733913464895},{"_id":"source/tupian/11.25tupian.jpg","hash":"3f9ed78c9ec95c8efa8df6188dac71942e323f9f","modified":1733915569769},{"_id":"source/tupian/11.26tupian.jpg","hash":"bf748a59edc0034684a20ce28a6bb9f88f3fb55c","modified":1733915843228},{"_id":"source/tupian/2.png","hash":"caed9e12a7a6d7318d97c139d3ae1d093191e7e0","modified":1733577140718},{"_id":"source/tupian/idea15.png","hash":"c2cd30713695395c0e05dc569400fbcc35ec8119","modified":1733577191233},{"_id":"source/tupian/idea7.png","hash":"e999165908448d17650f47f8ea0f15bccc669b4a","modified":1733577203335},{"_id":"source/tupian/j06.jpg","hash":"28eb8fb8810abf98a4c0cf5a444f7147406a1798","modified":1733993152558},{"_id":"source/tupian/j04.jpg","hash":"102076a0f9e9c85e63089e8b96ae43786dbf07ae","modified":1733993186469},{"_id":"source/tupian/下载3.png","hash":"768594265c00c401c5267a2ae1c4bce3a0b0106b","modified":1733577257747},{"_id":"source/tupian/修改项目2.png","hash":"a33ef74a05406e284884c65c8cf48f9d926fdef4","modified":1733577301870},{"_id":"source/tupian/修改项目3.png","hash":"74d814d089c85c9a77bf4680d2e4749b226ea223","modified":1733577301079},{"_id":"source/tupian/修改项目4.png","hash":"95d9482504a18e9cd31ee26e5b5fc2b8cf5e65d2","modified":1733577302603},{"_id":"source/tupian/删除模块1.png","hash":"f432d78691e6b6b6b05dd16b8646d58565fdbfa8","modified":1733577251145},{"_id":"source/tupian/新建模块4.png","hash":"be0788f6de2ce9e90d99d08ca3f569ffc7a9ee7a","modified":1733577271670},{"_id":"source/tupian/11.24tupian.jpg","hash":"6449b124c9e9617f8013f8b3907dfebbc63e663e","modified":1733915741944},{"_id":"source/tupian/11.27tupian.jpg","hash":"826aa3bfc02925df9c4081db9a41d576b2b34a50","modified":1733918248379},{"_id":"source/tupian/hengbantupian.jpg","hash":"1e0794ba116ba962682fc96a9f3a31372b18221e","modified":1733823548641},{"_id":"source/tupian/idea安装8.png","hash":"27f8f3cdda5a6b8382d6517841a325b02fd16707","modified":1733577219476},{"_id":"source/tupian/j01.jpg","hash":"761e9afe1a98053cde7bcd948dfd410443756144","modified":1733993197287},{"_id":"source/tupian/j03.jpg","hash":"3e038327c0111c9b2f05abb14fabbe268b283fb8","modified":1733993171123},{"_id":"source/tupian/j02.jpg","hash":"d37d2faddf60499f9c24eb6f6d5f2f2788eced43","modified":1733993138635},{"_id":"source/tupian/j05.jpg","hash":"318241f95cda3bb2b1fdad144f82f7b35ae07226","modified":1733993146541},{"_id":"source/tupian/j07.jpg","hash":"413e8a106d4a1aeec9186065876b4392fa18a93e","modified":1733993162049},{"_id":"source/tupian/j08.jpg","hash":"e39c8d66787bfe2f6761a935c841d2c88672b2e3","modified":1733993178727},{"_id":"source/tupian/修改类名1.png","hash":"ebf80d6312e7c518d5a3c7d0671c3c34a94d1e89","modified":1733577291058},{"_id":"source/tupian/导入模块2.png","hash":"f8dea8dedd3418de26f476371de882a0731249f0","modified":1733577234587},{"_id":"source/tupian/打开项目3.png","hash":"874ae3ac34ab51dbe9ea09d5bb0d964c526a9930","modified":1733577227018},{"_id":"source/tupian/新建模块3.png","hash":"161e50e24f3604a352def70b18d4f516bf57a2bc","modified":1733577273379},{"_id":"source/tupian/11.26.png","hash":"1a8c44630028fa810aecb4021b6d3764e628d2dc","modified":1733918571312},{"_id":"source/tupian/idea10.png","hash":"6dd098ab2c24c8b681155e8e46493bdd20f87ce3","modified":1733577193794},{"_id":"source/tupian/新建项目6.png","hash":"f8b88b6d7da01be1d231d9dbafc441782490fa27","modified":1733577292015},{"_id":"node_modules/hexo-theme-vivia/.gitattributes","hash":"ba3dfe345280bdcc5e817bb02cf49b8b8d8e1c4c","modified":1733830203971},{"_id":"node_modules/hexo-theme-vivia/LICENSE","hash":"1039079fb6969c255e3df9a411ff5f94702f53ad","modified":1733830203973},{"_id":"node_modules/hexo-theme-vivia/example_config.vivia.yml","hash":"1105cff0e9967389176aeb64e26530665af80aa1","modified":1733830204036},{"_id":"node_modules/hexo-theme-vivia/package.json","hash":"dda08139954a6e50e056bdb197b55fd1eb6925ae","modified":1733830204006},{"_id":"node_modules/hexo-theme-vivia/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1733829088416},{"_id":"node_modules/hexo-theme-vivia/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1733829088416},{"_id":"node_modules/hexo-theme-vivia/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1733829088416},{"_id":"node_modules/hexo-theme-vivia/languages/en.yml","hash":"b4b55e56a0554bfdc383650742c2038cef777142","modified":1733830204035},{"_id":"node_modules/hexo-theme-vivia/languages/zh-CN.yml","hash":"89154c7877fa274d340e2adb2241167abda71c60","modified":1733830204037},{"_id":"node_modules/hexo-theme-vivia/languages/zh.yml","hash":"e56bebd19d2abd1698e9aa87d337941957977468","modified":1733830204038},{"_id":"node_modules/hexo-theme-vivia/languages/zh-TW.yml","hash":"9098818e791e19d9921e256c771664b2cd999e13","modified":1733830204037},{"_id":"node_modules/hexo-theme-vivia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1733829088360},{"_id":"node_modules/hexo-theme-vivia/layout/layout.ejs","hash":"11c0de0294fa83f38d70fcb3d5c47f77ed1e98da","modified":1733830203990},{"_id":"node_modules/hexo-theme-vivia/layout/index.ejs","hash":"c9d8dca730a254ab3f48309677a3cb994e513ad6","modified":1733830203987},{"_id":"node_modules/hexo-theme-vivia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1733829088367},{"_id":"node_modules/hexo-theme-vivia/scripts/archive-helper.js","hash":"a04e4c8c0925652635e50605182dc5f1509b910f","modified":1733830204000},{"_id":"node_modules/hexo-theme-vivia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1733829088382},{"_id":"node_modules/hexo-theme-vivia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1733829088382},{"_id":"node_modules/hexo-theme-vivia/scripts/categories-process.js","hash":"41b6be3986763efb8a8b363cbabba177c502a193","modified":1733830204001},{"_id":"node_modules/hexo-theme-vivia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1733829088387},{"_id":"node_modules/hexo-theme-vivia/scripts/color-generate.js","hash":"90dff57087b692d2aa687c49980a0eed56a2f058","modified":1733830204002},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/dark_mode.ejs","hash":"0ea0e23fb16103f424591cf46939fcf07738ccc1","modified":1733830203983},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/navigate_before.ejs","hash":"1c11e29aa2719674b161c072e53576ac38b1ee65","modified":1733830203993},{"_id":"node_modules/hexo-theme-vivia/README.zh-CN.md","hash":"8b614f3b300fd0b4a4b7858b0897cd55ae00ef48","modified":1733830204007},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/navigate_next.ejs","hash":"c3ecb137ebc9bb949aebe3fc0631b05ba578c8e1","modified":1733830203993},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/menu.ejs","hash":"47f04d2c6413beaffee57d6164b5637bdb2cd1cb","modified":1733830203990},{"_id":"node_modules/hexo-theme-vivia/source/css/_extend.styl","hash":"cc37f2c5f8ccdb77f87cf8ed35ea71a2d66c9605","modified":1733830204015},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/rss_feed.ejs","hash":"8bac3aa45c0e7a55f38783e7350039d0b1adb48b","modified":1733830203995},{"_id":"node_modules/hexo-theme-vivia/README.md","hash":"f3bb9857bd474e06d9fa42cc1911c6ee8d86649f","modified":1733830204006},{"_id":"node_modules/hexo-theme-vivia/layout/_icon/wb_sunny.ejs","hash":"ef254cc64ba10918218a6672e34fd5f6d4ce08bb","modified":1733830203999},{"_id":"node_modules/hexo-theme-vivia/example_zh_CN_config.vivia.yml","hash":"756b4d5965cff0cb89062ab52d50714f92532a01","modified":1733830204036},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1733829088354},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/archive.ejs","hash":"2106e7f5f73c9c8d592dcd7dab4359d23037f382","modified":1733830203975},{"_id":"node_modules/hexo-theme-vivia/source/css/_variables.styl","hash":"b6b8419839cfbed3a0bde16ed1e6ad44bc59b7fe","modified":1733830204015},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/article.ejs","hash":"b63c43eb5902d2c2d64be1e700c639eb81b8a4e4","modified":1733830203978},{"_id":"node_modules/hexo-theme-vivia/source/css/style.styl","hash":"32cceae9c16fb4de06fd64bc333f07a1ba4d7528","modified":1733830204028},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/baidu-analytics.ejs","hash":"5951d0adc0490ff4d5c956e54d4828119755d1e7","modified":1733830203979},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/back-to-top.ejs","hash":"a5132c5ab08b55891bcfe10d36ec83cacbfd60af","modified":1733830203978},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/banner.ejs","hash":"7f9c0b7d10238b45c1c1a65df7f801c904ae898c","modified":1733830203980},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/footer.ejs","hash":"e78a36c94879f70df2ec615ccc2b5d459eeb4fe7","modified":1733830203985},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1733829088371},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1733829088378},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1733829088372},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/head.ejs","hash":"b52fd8595ec4849944564721810e74948895675f","modified":1733830203986},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/navbar.ejs","hash":"7d4a434cba72a3bca58b59fab4ce15894da68049","modified":1733830203992},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/sidebar.ejs","hash":"97eee27bfb59ccc109fcd9ce87963f686c2b6ba9","modified":1733830203996},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/archive.ejs","hash":"1dd3efd775f09f3e5a0e0205ddb8388851dfad57","modified":1733830203977},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/category.ejs","hash":"cc465be58bf6aeee7947e9cf9563c651e42e7a5d","modified":1733830203982},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/profile.ejs","hash":"ccd8c2442f3437b6752946f4d573edefaf2cd4c0","modified":1733830203994},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/recent_posts.ejs","hash":"647f4151e7fca48af2b727228b84deb0652a6376","modified":1733830203995},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/color.ejs","hash":"9e00f6c621db3c5c659b03d1dad6caa90d6217d9","modified":1733830203983},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-128.png","hash":"44cceeef5fddc81a613faf6caa53bac139a6b564","modified":1733830204009},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-192.png","hash":"929acfdd6e69ceacdecf40a03ed520f826750c06","modified":1733830204010},{"_id":"node_modules/hexo-theme-vivia/layout/_widget/tag.ejs","hash":"f231a62130014c07dc1888ed30399bcfde3ed0c0","modified":1733830203996},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-180.png","hash":"4771a6bd0386924ad31719f8999c036b36ad5688","modified":1733830204010},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-dark-32.png","hash":"8ef87b664e5c6250e5badd7312fe192e30fe2e83","modified":1733830204011},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-180.png","hash":"6b26caab1d036726beaf47510bada4cddf253b24","modified":1733830204012},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-128.png","hash":"9c93c4ac222da14ca4f43b2d54573ce4099a161b","modified":1733830204012},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-192.png","hash":"0d5f76f309b6a0661d695d6bf4db8ef8a56e4ae5","modified":1733830204012},{"_id":"node_modules/hexo-theme-vivia/source/images/favicon-light-32.png","hash":"604915a91ddede7874d5dcfa4de0bc4b04ae5da6","modified":1733830204014},{"_id":"node_modules/hexo-theme-vivia/source/images/tile.png","hash":"fbc016bfb004a5ca4a8c6f0b078ae320ec98ba20","modified":1733830204014},{"_id":"node_modules/hexo-theme-vivia/source/js/light-dark-switch.js","hash":"371eacee9af459d04de60190c549fe7f8374be36","modified":1733830204003},{"_id":"node_modules/hexo-theme-vivia/source/js/color.global.min.js","hash":"8140005be5afebb828b2890ce6e686ece34e78df","modified":1733830204002},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/archive.styl","hash":"ee7b27115aed0182dc9ac51b637a2bf986b56f55","modified":1733830204016},{"_id":"node_modules/hexo-theme-vivia/source/js/load-settings.js","hash":"f420677aad3d200b4f92fca60ab5cb47c7db9a21","modified":1733830204004},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/article.styl","hash":"cb77215312d030593afc5067810198cd2e2a710c","modified":1733830204016},{"_id":"node_modules/hexo-theme-vivia/source/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1733830204005},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/back-to-top.styl","hash":"e8056291a477fe2d5216fdc76a84dc0f48975fef","modified":1733830204017},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/header.styl","hash":"c7a95fbec06dba431c45e558dbaa767f0dacd1a3","modified":1733830204021},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/footer.styl","hash":"f038558bfe427b2cedd029cb9638c1d70d936763","modified":1733830204019},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/highlight.styl","hash":"3abb118aae2dba149cb616bbcbfed129ccfcb5b7","modified":1733830204021},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/settings.styl","hash":"6e67f8c3659f6a9dd49e513a595a01c1afebf87c","modified":1733830204024},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/main-title.styl","hash":"73df1241b15d62cc19665883cd789440d4c7e7a6","modified":1733830204022},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/sidebar-aside.styl","hash":"87da0ef32f6e4e6cf742450f91731c68a68796ae","modified":1733830204026},{"_id":"node_modules/hexo-theme-vivia/source/css/_util/config.styl","hash":"8d603fa8f7957cd6a06f01616ea54977bdf62db2","modified":1733830204018},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/sidebar.styl","hash":"69a08fe059c5e2ee00760ae61f1123d61d90c39a","modified":1733830204027},{"_id":"node_modules/hexo-theme-vivia/source/css/_util/color.styl","hash":"f98e30552996949e07529f13342f26ebd45a2281","modified":1733830204017},{"_id":"node_modules/hexo-theme-vivia/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1733829088403},{"_id":"node_modules/hexo-theme-vivia/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1733829088406},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/category.ejs","hash":"9f06ff87e50ff5005080c6bdebf4a0bbaf550aba","modified":1733830203980},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/date.ejs","hash":"760970e719ef973c18ac36c9fc9e13d0edaaaa5a","modified":1733830203984},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/nav.ejs","hash":"86886e1ca10aec7087b44048f92719d24ac738f4","modified":1733830203991},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/gallery.ejs","hash":"0282d116251bd60b91e05c786386e4d570035996","modified":1733830203985},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1733829088385},{"_id":"node_modules/hexo-theme-vivia/layout/_partial/post/title.ejs","hash":"14e34508135bf83763d8c1f1f8d8467dff689002","modified":1733830203997},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/comment.styl","hash":"35cca399adc17633885ca416e8c48acd468d0e31","modified":1733830204018},{"_id":"node_modules/hexo-theme-vivia/source/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1733830204002},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1733830204033},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1733830204034},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Bold.ttf","hash":"62442a18a9fe9457c1afeabf683d263a691b7798","modified":1733830204031},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1733830204007},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Regular.ttf","hash":"56c5c0d38bde4c1f1549dda43db37b09c608aad3","modified":1733830204032},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/Roboto-Medium.ttf","hash":"3c6a09fcc6a454924c81af7dff94fc6d399ed79b","modified":1733830204031},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1733830203999},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1733830204030},{"_id":"node_modules/hexo-theme-vivia/source/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1733830204029},{"_id":"source/tupian/touxiang.png","hash":"1db9394fe902b1e94b9de87c2d3e6e467696552d","modified":1733735642025},{"_id":"node_modules/hexo-theme-vivia/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1733829088408},{"_id":"public/about/index.html","hash":"dd98aa71e82ffbdc5aa920ae1ee2e08648650ec0","modified":1734053025114},{"_id":"public/2024/12/12/day08-面向对象/index.html","hash":"33a199618f2b047e66a4aba60ee1a6f7bff7c1b8","modified":1734053025114},{"_id":"public/2024/12/12/day07-综合练习/index.html","hash":"6b46c1164e998a8d265fbd050ff13ab89a7665d2","modified":1734053025114},{"_id":"public/2024/12/12/day06-方法/index.html","hash":"064db9d6c63be310edbe29469c885ac009f0d524","modified":1734053025114},{"_id":"public/2024/12/12/day05-循环高级/index.html","hash":"aea76e890f3e98b81e9d63037b0011c00ea995ca","modified":1734053025114},{"_id":"public/2024/12/12/day05-数组/index.html","hash":"5b2c9140a886da9a300f1e749bdae01d7fd96162","modified":1734053025114},{"_id":"public/2024/12/12/day04-流程控制语句/index.html","hash":"fc819dc83fa72c425f5ef95be21862aa8496bb00","modified":1734053025114},{"_id":"public/2024/12/12/day03笔记/index.html","hash":"279cba1395205a8c82182324c74c6a09b73cb8cd","modified":1734053025114},{"_id":"public/2024/12/12/day02-Java基础语法/index.html","hash":"28ae470d838af284e01c2b37c8783c4c04ea7500","modified":1734053025114},{"_id":"public/2024/12/12/day01-Java基础语法/index.html","hash":"6cde16a7fa12fde028201ed8e61850cf59e87866","modified":1734053025114},{"_id":"public/2024/12/11/2024-11-27-蓝桥杯：查找最大元素/index.html","hash":"74d3c2a9c0991861dbaa499b95da92c1548d601f","modified":1734053025114},{"_id":"public/2024/12/11/2024-11-16-蓝桥杯：回文判定/index.html","hash":"6c96f82bdef36939248a475274cd67a39ad99843","modified":1734053025114},{"_id":"public/2024/12/11/2024-11-25-蓝桥杯：数字转换字母/index.html","hash":"1e6cdba5ba1533dfe32d15ebba1c4fb84de2a9f3","modified":1734053025114},{"_id":"public/2024/12/10/2024-11-24-蓝桥杯：牛郎取名/index.html","hash":"fcd061b649b10febb8b9ad48a3ac7131f3683e4e","modified":1734053025114},{"_id":"public/categories/算法/index.html","hash":"2588af52c4a1db0c6c1ec0ccc548cdcfb5b6cad5","modified":1734053025114},{"_id":"public/categories/java/index.html","hash":"70577d3b54ab29073059cc33abf8a9ceeb74722f","modified":1734053025114},{"_id":"public/tags/双指针/index.html","hash":"c6d01f58af22f61565afd4ffcbe39d9a19561d6e","modified":1734053025114},{"_id":"public/tags/字符串/index.html","hash":"1c2751d335a7057519fc17fc18bff0fb3828fa0a","modified":1734053025114},{"_id":"public/tags/模拟/index.html","hash":"49d15c65ff8457f3e8c5ffd037a41516cec01395","modified":1734053025114},{"_id":"public/tags/算法/index.html","hash":"48b23c30698f90fae8ac164f1fac6367d53598a2","modified":1734053025114},{"_id":"public/tags/语法/index.html","hash":"4e1322f48e77b5514e041a2c9deb7a8cafd1be55","modified":1734053025114},{"_id":"public/tags/STL/index.html","hash":"996103fa3077bb6a3ff1661f3f62c7d11326616c","modified":1734053025114},{"_id":"public/tags/运算符/index.html","hash":"e20660b80b87ee3457f85cab2e34d98fe509e904","modified":1734053025114},{"_id":"public/tags/idea安装及使用/index.html","hash":"48236d83f9d6bea008c1fc78757422137ddedbd1","modified":1734053025114},{"_id":"public/tags/循环/index.html","hash":"07ac5681f6b69667b0947424743f4fd3008d5cd2","modified":1734053025114},{"_id":"public/tags/环境变量/index.html","hash":"5ebe50e80205a9b851cc3e2f4d807c2e6cfdb652","modified":1734053025114},{"_id":"public/tags/数组/index.html","hash":"c9a124dd125d5058a32f44d10e2e195fce980ee0","modified":1734053025114},{"_id":"public/tags/流程控制语句/index.html","hash":"84df1916506e602e775c6ec55f1f7cd9c2776ad3","modified":1734053025114},{"_id":"public/tags/方法/index.html","hash":"6a9d83c5aa50af00aba7a824128bbeb4bec695ee","modified":1734053025114},{"_id":"public/tags/面向对象/index.html","hash":"5ecba575e2370921beac6945ece8b7731602761c","modified":1734053025114},{"_id":"public/tags/练习/index.html","hash":"e7ad4d9137540999f867b4938745b4096bfd46cb","modified":1734053025114},{"_id":"public/archives/index.html","hash":"4e208dddaea312be62ac73a9c00ed9ce27f2986c","modified":1734053025114},{"_id":"public/index.html","hash":"d351ebe3c2817f581d657a7174b0bfdfbe7b072a","modified":1734053025114},{"_id":"public/archives/2024/index.html","hash":"ca8d0ebd74f3f040f6fe79a850efc77d3a858f07","modified":1734053025114},{"_id":"public/page/2/index.html","hash":"504ac436edaeea94082d4f97c722a0f07741e106","modified":1734053025114},{"_id":"public/archives/2024/12/index.html","hash":"d4e7a11bdd2b2b42b370f9716089eb7feed3deed","modified":1734053025114},{"_id":"public/tupian/1545615769372.png","hash":"989a9a991ab7f28c0c0b5a69d46e7e5f0ebe3f0a","modified":1734010441242},{"_id":"public/tupian/1545615769372(1).png","hash":"989a9a991ab7f28c0c0b5a69d46e7e5f0ebe3f0a","modified":1734010441242},{"_id":"public/tupian/1545616221283(1).png","hash":"64b743f9547698f4133ba3915c8914751c691ee9","modified":1734010441242},{"_id":"public/tupian/1545616039363(1).png","hash":"d03986f03e51e6564037662f7280b9fe70026367","modified":1734010441242},{"_id":"public/tupian/1545616039363.png","hash":"d03986f03e51e6564037662f7280b9fe70026367","modified":1734010441242},{"_id":"public/tupian/1545616221283.png","hash":"64b743f9547698f4133ba3915c8914751c691ee9","modified":1734010441242},{"_id":"public/tupian/1545616667104(1).png","hash":"cae9edab1c8320dd85098612b26b65b84e1a5518","modified":1734010441242},{"_id":"public/tupian/1545616667104.png","hash":"cae9edab1c8320dd85098612b26b65b84e1a5518","modified":1734010441242},{"_id":"public/tupian/cmd.png","hash":"3be2f71750421d4c17414aedfcd3747f792bee98","modified":1734010441242},{"_id":"public/tupian/5.png","hash":"6443dea559da3cd83e690df05069640b0bafa342","modified":1734010441242},{"_id":"public/tupian/idea11.png","hash":"851e6621586db08a15160eca42979fee58815d7d","modified":1734010441242},{"_id":"public/tupian/idea16.png","hash":"56bd0f3a0d64a5de9e59affef951eb5f54a67bc3","modified":1734010441242},{"_id":"public/tupian/idea4.png","hash":"b8eaf0f6bd52fd0ad75c1bec206bd893f9092ca9","modified":1734010441242},{"_id":"public/tupian/idea使用1.png","hash":"69986d6034cc12c3b8de814b135f29d582c818f6","modified":1734010441242},{"_id":"public/tupian/idea安装7.png","hash":"22efb6c87cbbf8b045856924f8bc54bf8431c9d6","modified":1734010441242},{"_id":"public/tupian/image-20210923091544110.png","hash":"abf385101b66988431392b9a31eb8a3680dfdacf","modified":1734010441242},{"_id":"public/tupian/image-20210923091710450.png","hash":"e00f386a19d123c92afd08a7b0f53cff42defd13","modified":1734010441242},{"_id":"public/tupian/image-20210923100419575.png","hash":"4f360c8dbd8f3f944be7982a903c6e2595c1d38d","modified":1734010441242},{"_id":"public/tupian/image-20210923091721035.png","hash":"d65ee924efacb5b55bf5d19aa576675090e52eec","modified":1734010441242},{"_id":"public/tupian/下载1.png","hash":"0ef7daa7c9702a530c9fcd7a58827bccebf83610","modified":1734010441242},{"_id":"public/tupian/修改模块名3.png","hash":"dd4aa55174170b437cb1a1214ef1418c075ec448","modified":1734010441242},{"_id":"public/tupian/修改模块名5.png","hash":"d2428bf1c1eaa26234daeb73452e6c2aa12896b9","modified":1734010441242},{"_id":"public/tupian/修改项目5.png","hash":"588dfe791cd70196131cff20d88358b1b5f14fe9","modified":1734010441242},{"_id":"public/tupian/删除模块2.png","hash":"ad90348da83d2699c853dd64bba3a35dbe0754d5","modified":1734010441242},{"_id":"public/tupian/删除模块3.png","hash":"70a2b65ee3b319c32dcf08fbfc289b2e91e96cf9","modified":1734010441242},{"_id":"public/tupian/删除类文件2.png","hash":"8a0eecbbb4db864cd46c6d6926dd2fbed6269a04","modified":1734010441242},{"_id":"public/tupian/安装3.png","hash":"98d388b8d5ccccf9a767762e69039230da8dc7cf","modified":1734010441242},{"_id":"public/tupian/安装1.png","hash":"361426a54ac628266ddf9a190b41b7f73c5293e7","modified":1734010441242},{"_id":"public/tupian/安装4.png","hash":"0f7692b136b51e0cd54dc066a66f3a059df71eec","modified":1734010441242},{"_id":"public/tupian/导入模块6.png","hash":"1f1a163c8449e52a13a20cf5bfce89fa31f34e16","modified":1734010441242},{"_id":"public/tupian/导入模块8.png","hash":"233256842ce3b0b4724c1559fe82ba3b405a9ee5","modified":1734010441242},{"_id":"public/tupian/新建类2.png","hash":"2e14aae21b78fd7124d7602290e32c805c8f72b3","modified":1734010441242},{"_id":"public/tupian/新建项目4.png","hash":"31f2cf885b437541dece4518952a443ca67c5bd2","modified":1734010441242},{"_id":"public/tupian/新建项目3.png","hash":"0569f1da6715faf72c0c44b52c472fbee5c0f020","modified":1734010441242},{"_id":"public/images/favicon-dark-128.png","hash":"44cceeef5fddc81a613faf6caa53bac139a6b564","modified":1734010441242},{"_id":"public/images/favicon-dark-180.png","hash":"4771a6bd0386924ad31719f8999c036b36ad5688","modified":1734010441242},{"_id":"public/images/favicon-light-128.png","hash":"9c93c4ac222da14ca4f43b2d54573ce4099a161b","modified":1734010441242},{"_id":"public/images/favicon-dark-192.png","hash":"929acfdd6e69ceacdecf40a03ed520f826750c06","modified":1734010441242},{"_id":"public/images/favicon-dark-32.png","hash":"8ef87b664e5c6250e5badd7312fe192e30fe2e83","modified":1734010441242},{"_id":"public/images/favicon-light-180.png","hash":"6b26caab1d036726beaf47510bada4cddf253b24","modified":1734010441242},{"_id":"public/images/favicon-light-192.png","hash":"0d5f76f309b6a0661d695d6bf4db8ef8a56e4ae5","modified":1734010441242},{"_id":"public/images/favicon-light-32.png","hash":"604915a91ddede7874d5dcfa4de0bc4b04ae5da6","modified":1734010441242},{"_id":"public/images/tile.png","hash":"fbc016bfb004a5ca4a8c6f0b078ae320ec98ba20","modified":1734010441242},{"_id":"public/tupian/3.png","hash":"e5b0585ee0d93a884fd55b2b5c218d35b2c3d566","modified":1734010441242},{"_id":"public/tupian/4.png","hash":"ebc3b19a5b145e2a9eda34f7bec92ef6c54ad48a","modified":1734010441242},{"_id":"public/tupian/idea1.png","hash":"08b348c0720f65946fa354d728f7611e5c69ebfc","modified":1734010441242},{"_id":"public/tupian/idea14.png","hash":"5f843e17a79a695f9a235f3e72d348b13e036147","modified":1734010441242},{"_id":"public/tupian/idea3.png","hash":"a9b9bae1657ab40b6eaad7f47e1fda002143445a","modified":1734010441242},{"_id":"public/tupian/idea5.png","hash":"f41695ae7352f6e33155e6dcba475b332db867bc","modified":1734010441242},{"_id":"public/tupian/idea6.png","hash":"bb42de30f02f7097666a299ad0b25978978b5fb6","modified":1734010441242},{"_id":"public/tupian/idea8.png","hash":"1599bf0a9a63ea4250818c0698adcee7ae48dbd7","modified":1734010441242},{"_id":"public/tupian/idea安装10.png","hash":"4ebe127c908b61e20b5515ca7234e195e05679db","modified":1734010441242},{"_id":"public/tupian/idea安装1.png","hash":"66be95b0c117ba797b02ff6db9ca108aeaac5d61","modified":1734010441242},{"_id":"public/css/style.css","hash":"948360d9a0b33fa158e731f3edd2851bd569f1ae","modified":1734010441242},{"_id":"public/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1734010441242},{"_id":"public/js/color.global.min.js","hash":"8140005be5afebb828b2890ce6e686ece34e78df","modified":1734010441242},{"_id":"public/js/load-settings.js","hash":"f420677aad3d200b4f92fca60ab5cb47c7db9a21","modified":1734010441242},{"_id":"public/js/light-dark-switch.js","hash":"371eacee9af459d04de60190c549fe7f8374be36","modified":1734010441242},{"_id":"public/js/script.js","hash":"998ed4c5b147e1299bf62beebf33514474f28112","modified":1734010441242},{"_id":"public/tupian/idea安装2.png","hash":"eb9688a4d53456e5ff6704c5b226766ca61c8599","modified":1734010441242},{"_id":"public/tupian/idea安装11.png","hash":"f8675b5dd5b6cf4392a6406329b5446f498f9638","modified":1734010441242},{"_id":"public/tupian/idea安装3.png","hash":"71e577102cdd75963b535ef7bd073b8774f592b9","modified":1734010441242},{"_id":"public/tupian/idea安装4.png","hash":"146ca18feee9ba9b72206f53419a33f2821ecb06","modified":1734010441242},{"_id":"public/tupian/idea安装5.png","hash":"231c74e3a18be80b697e6fd78606ac5d022a5163","modified":1734010441242},{"_id":"public/tupian/idea安装6.png","hash":"886b1e2d20314d1616adf3ac27b453520bb9d9fb","modified":1734010441242},{"_id":"public/tupian/image-20210923091350952.png","hash":"44271850188df5c2adcf9660e166b89f150574a9","modified":1734010441242},{"_id":"public/tupian/image-20210923091527227.png","hash":"27765879f9ed2325e91668fafa1173a9eeea9067","modified":1734010441242},{"_id":"public/tupian/idea安装9.png","hash":"b221ae85bbae1f755f8f8183cc29db06b70791b7","modified":1734010441242},{"_id":"public/tupian/image-20210923091654365.png","hash":"4fc53fa9176ab3a30dbad2ba942ba41eca7cca0b","modified":1734010441242},{"_id":"public/tupian/修改模块名4.png","hash":"4aa14e1a5d656e08579aced0b8d6d23d24e08d30","modified":1734010441242},{"_id":"public/tupian/修改类名2.png","hash":"c42a6e5f943d9ca6a5843c6212d6f324d96e0181","modified":1734010441242},{"_id":"public/tupian/修改项目6.png","hash":"6842c96723a00ed904f27dfd54cffd496b5349b5","modified":1734010441242},{"_id":"public/tupian/关闭项目2.png","hash":"a2109a083029af0c76db9803d66812398b5bc97d","modified":1734010441242},{"_id":"public/tupian/关闭项目3.png","hash":"d17d95dd2c1ab23b8c454bef801922004e5bb57f","modified":1734010441242},{"_id":"public/tupian/安装2.png","hash":"b614af6127bd0c1b28b0db9da18cd78a7be1a6c8","modified":1734010441242},{"_id":"public/tupian/导入模块1.png","hash":"e0aef9123f76655bca00952e0871f35f7cde4829","modified":1734010441242},{"_id":"public/tupian/导入模块4.png","hash":"84be223b61a69c231d87733dc555cefe8cd71ac8","modified":1734010441242},{"_id":"public/tupian/打开项目2.png","hash":"3ba5393d1c191563cc177beab0486476c6c0c49e","modified":1734010441242},{"_id":"public/tupian/打开项目1.png","hash":"e7fa77f2a754580df86d55ac39b6ea33678e5e73","modified":1734010441242},{"_id":"public/tupian/新建模块5.png","hash":"3202389b979f6d386c306e9596f357575138f47d","modified":1734010441242},{"_id":"public/tupian/新建模块7.png","hash":"677cb766371a97f0cd8af6bbfdfe5e83dad72281","modified":1734010441242},{"_id":"public/tupian/新建项目5.png","hash":"e76354f64d3f047e55a42fd04cd96df974501ad2","modified":1734010441242},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1734010441242},{"_id":"public/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1734010441242},{"_id":"public/tupian/11.27.png","hash":"3d3848226fbf8de93ca7b5aacdd232e84bfce905","modified":1734010441242},{"_id":"public/tupian/idea12.png","hash":"3787e464c5b5ae5ecd52f979641e9fc939864624","modified":1734010441242},{"_id":"public/tupian/idea2.png","hash":"b51ff6c46d68e1cc6b28115e90fc31d7ec3625c2","modified":1734010441242},{"_id":"public/tupian/idea9.png","hash":"a92d68321f992d3aab2f4eb62643c85594cc7dc1","modified":1734010441242},{"_id":"public/tupian/niulangquming.png","hash":"2a6d81615371b71c9e83fc31aa8d56db5924da1f","modified":1734010441242},{"_id":"public/tupian/下载2.png","hash":"3360e0a44e7840c4e0a7a42dd6b18ac52596f805","modified":1734010441242},{"_id":"public/tupian/修改类名3.png","hash":"8547a2f72e1ed98956ef6341bd5b774273ed4a0a","modified":1734010441242},{"_id":"public/tupian/修改项目1.png","hash":"ee0c8fac33b42b63bf9f11d6199868edd38581d8","modified":1734010441242},{"_id":"public/tupian/关闭项目1.png","hash":"d5bd7d2f43492201b120e1bdba5984cf3bb9630f","modified":1734010441242},{"_id":"public/tupian/导入模块11.png","hash":"c984341afcd27eb85eb4ad8e37d4ae4d2b38fcc8","modified":1734010441242},{"_id":"public/tupian/导入模块3.png","hash":"ad2fe302f13b6e370453a713fa5f4458bfd05026","modified":1734010441242},{"_id":"public/tupian/导入模块10.png","hash":"9f456dbda28fca2b46ebe5e09ab49df74f7ba45c","modified":1734010441242},{"_id":"public/tupian/导入模块9.png","hash":"cdf87d36511e2f71dea2d6bf5e5d2c7fca93db03","modified":1734010441242},{"_id":"public/tupian/新建模块1.png","hash":"79120e143c006b6b47d4289073a5b15af8398c91","modified":1734010441242},{"_id":"public/tupian/新建项目2.png","hash":"eb6e5f7f800a5b1ffc4492c94c7efb9f85e2f868","modified":1734010441242},{"_id":"public/tupian/新建类3.png","hash":"c7f1f6450d719597958e8886092ca631c9f00d0d","modified":1734010441242},{"_id":"public/css/fonts/Roboto-Regular.ttf","hash":"56c5c0d38bde4c1f1549dda43db37b09c608aad3","modified":1734010441242},{"_id":"public/css/fonts/Roboto-Bold.ttf","hash":"62442a18a9fe9457c1afeabf683d263a691b7798","modified":1734010441242},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1734010441242},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1734010441242},{"_id":"public/css/fonts/Roboto-Medium.ttf","hash":"3c6a09fcc6a454924c81af7dff94fc6d399ed79b","modified":1734010441242},{"_id":"public/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1734010441242},{"_id":"public/tupian/1.png","hash":"f11b0e28a3d8b5d89175e818fbef40630f9169fe","modified":1734010441242},{"_id":"public/tupian/idea13.png","hash":"d0739e94ae73cf7cb2d6873b73bef044d6e75749","modified":1734010441242},{"_id":"public/tupian/修改模块名1.png","hash":"02508cd7681e318689a39f67549e711e666aa5d2","modified":1734010441242},{"_id":"public/tupian/修改项目7.png","hash":"527f0de977fc04d468744ec8d62cd12ea0156763","modified":1734010441242},{"_id":"public/tupian/删除类文件1.png","hash":"0dcfe184d05f0ce2af849aa9a0f8740b73061334","modified":1734010441242},{"_id":"public/tupian/导入模块5.png","hash":"c30d6dc68ff573821fcacaa75569553cbc8c8a57","modified":1734010441242},{"_id":"public/tupian/新建模块2.png","hash":"0b859d376a4a6abd3aa64561a2c8dd2ec988b3af","modified":1734010441242},{"_id":"public/tupian/导入模块7.png","hash":"62f96b9895c1db75b6be9969ca91d02783445a2f","modified":1734010441242},{"_id":"public/tupian/新建模块6.png","hash":"6a746133768a12a7eab5c9c6fe7790ea1eb878bf","modified":1734010441242},{"_id":"public/tupian/新建类1.png","hash":"99dacd91ab89d5188a39273ffcfa96b4deeac97a","modified":1734010441242},{"_id":"public/tupian/新建项目1.png","hash":"ecc658d198e7bd51cd0335202b14373688ef43c9","modified":1734010441242},{"_id":"public/tupian/11.25(2).png","hash":"fcc123fc99e7e70f4c42f96c9e012f83444625e5","modified":1734010441242},{"_id":"public/tupian/11.25tupian.jpg","hash":"3f9ed78c9ec95c8efa8df6188dac71942e323f9f","modified":1734010441242},{"_id":"public/tupian/11.25(1).png","hash":"48856e54be480260b0167b66222e10f1d2f4d490","modified":1734010441242},{"_id":"public/tupian/2.png","hash":"caed9e12a7a6d7318d97c139d3ae1d093191e7e0","modified":1734010441242},{"_id":"public/tupian/11.26tupian.jpg","hash":"bf748a59edc0034684a20ce28a6bb9f88f3fb55c","modified":1734010441242},{"_id":"public/tupian/idea15.png","hash":"c2cd30713695395c0e05dc569400fbcc35ec8119","modified":1734010441242},{"_id":"public/tupian/idea7.png","hash":"e999165908448d17650f47f8ea0f15bccc669b4a","modified":1734010441242},{"_id":"public/tupian/j04.jpg","hash":"102076a0f9e9c85e63089e8b96ae43786dbf07ae","modified":1734010441242},{"_id":"public/tupian/j06.jpg","hash":"28eb8fb8810abf98a4c0cf5a444f7147406a1798","modified":1734010441242},{"_id":"public/tupian/下载3.png","hash":"768594265c00c401c5267a2ae1c4bce3a0b0106b","modified":1734010441242},{"_id":"public/tupian/修改项目3.png","hash":"74d814d089c85c9a77bf4680d2e4749b226ea223","modified":1734010441242},{"_id":"public/tupian/修改项目2.png","hash":"a33ef74a05406e284884c65c8cf48f9d926fdef4","modified":1734010441242},{"_id":"public/tupian/修改项目4.png","hash":"95d9482504a18e9cd31ee26e5b5fc2b8cf5e65d2","modified":1734010441242},{"_id":"public/tupian/删除模块1.png","hash":"f432d78691e6b6b6b05dd16b8646d58565fdbfa8","modified":1734010441242},{"_id":"public/tupian/新建模块4.png","hash":"be0788f6de2ce9e90d99d08ca3f569ffc7a9ee7a","modified":1734010441242},{"_id":"public/tupian/11.24tupian.jpg","hash":"6449b124c9e9617f8013f8b3907dfebbc63e663e","modified":1734010441242},{"_id":"public/tupian/11.27tupian.jpg","hash":"826aa3bfc02925df9c4081db9a41d576b2b34a50","modified":1734010441242},{"_id":"public/tupian/hengbantupian.jpg","hash":"1e0794ba116ba962682fc96a9f3a31372b18221e","modified":1734010441242},{"_id":"public/tupian/idea安装8.png","hash":"27f8f3cdda5a6b8382d6517841a325b02fd16707","modified":1734010441242},{"_id":"public/tupian/j02.jpg","hash":"d37d2faddf60499f9c24eb6f6d5f2f2788eced43","modified":1734010441242},{"_id":"public/tupian/j01.jpg","hash":"761e9afe1a98053cde7bcd948dfd410443756144","modified":1734010441242},{"_id":"public/tupian/j05.jpg","hash":"318241f95cda3bb2b1fdad144f82f7b35ae07226","modified":1734010441242},{"_id":"public/tupian/j07.jpg","hash":"413e8a106d4a1aeec9186065876b4392fa18a93e","modified":1734010441242},{"_id":"public/tupian/j03.jpg","hash":"3e038327c0111c9b2f05abb14fabbe268b283fb8","modified":1734010441242},{"_id":"public/tupian/j08.jpg","hash":"e39c8d66787bfe2f6761a935c841d2c88672b2e3","modified":1734010441242},{"_id":"public/tupian/修改类名1.png","hash":"ebf80d6312e7c518d5a3c7d0671c3c34a94d1e89","modified":1734010441242},{"_id":"public/tupian/导入模块2.png","hash":"f8dea8dedd3418de26f476371de882a0731249f0","modified":1734010441242},{"_id":"public/tupian/新建模块3.png","hash":"161e50e24f3604a352def70b18d4f516bf57a2bc","modified":1734010441242},{"_id":"public/tupian/打开项目3.png","hash":"874ae3ac34ab51dbe9ea09d5bb0d964c526a9930","modified":1734010441242},{"_id":"public/tupian/11.26.png","hash":"1a8c44630028fa810aecb4021b6d3764e628d2dc","modified":1734010441242},{"_id":"public/tupian/idea10.png","hash":"6dd098ab2c24c8b681155e8e46493bdd20f87ce3","modified":1734010441242},{"_id":"public/tupian/新建项目6.png","hash":"f8b88b6d7da01be1d231d9dbafc441782490fa27","modified":1734010441242},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1734010441242},{"_id":"public/tupian/touxiang.png","hash":"1db9394fe902b1e94b9de87c2d3e6e467696552d","modified":1734010441242},{"_id":"source/tupian/1(1).png","hash":"b7b9c8dabea317fcb99e59db95fefc3ae4df83c8","modified":1734052520244},{"_id":"source/tupian/111.jpg","hash":"7b4563398dc949e6bfdb011fdb44ecd2a9d8bb56","modified":1734052514313},{"_id":"source/tupian/1 (2).png","hash":"b7b9c8dabea317fcb99e59db95fefc3ae4df83c8","modified":1734052514389},{"_id":"source/tupian/111(1).jpg","hash":"7b4563398dc949e6bfdb011fdb44ecd2a9d8bb56","modified":1734052520366},{"_id":"source/tupian/3(1).png","hash":"6482b6021ca0b25656f52a7c906d201706bd5986","modified":1734052520335},{"_id":"source/tupian/2 (2).png","hash":"82e5c477b3a0b0d1c1763af3fbbaf199d9a87b72","modified":1734052514262},{"_id":"source/tupian/4 (2).png","hash":"0f7a3dd403549309e94f5a0e58875d405498846d","modified":1734052514290},{"_id":"source/tupian/3 (2).png","hash":"6482b6021ca0b25656f52a7c906d201706bd5986","modified":1734052514340},{"_id":"source/tupian/2(1).png","hash":"82e5c477b3a0b0d1c1763af3fbbaf199d9a87b72","modified":1734052520293},{"_id":"source/tupian/4(1).png","hash":"0f7a3dd403549309e94f5a0e58875d405498846d","modified":1734052520187},{"_id":"public/tupian/1 (2).png","hash":"b7b9c8dabea317fcb99e59db95fefc3ae4df83c8","modified":1734052864325},{"_id":"public/tupian/1(1).png","hash":"b7b9c8dabea317fcb99e59db95fefc3ae4df83c8","modified":1734052864325},{"_id":"public/tupian/111(1).jpg","hash":"7b4563398dc949e6bfdb011fdb44ecd2a9d8bb56","modified":1734052864325},{"_id":"public/tupian/111.jpg","hash":"7b4563398dc949e6bfdb011fdb44ecd2a9d8bb56","modified":1734052864325},{"_id":"public/tupian/2(1).png","hash":"82e5c477b3a0b0d1c1763af3fbbaf199d9a87b72","modified":1734052864325},{"_id":"public/tupian/2 (2).png","hash":"82e5c477b3a0b0d1c1763af3fbbaf199d9a87b72","modified":1734052864325},{"_id":"public/tupian/3 (2).png","hash":"6482b6021ca0b25656f52a7c906d201706bd5986","modified":1734052864325},{"_id":"public/tupian/3(1).png","hash":"6482b6021ca0b25656f52a7c906d201706bd5986","modified":1734052864325},{"_id":"public/tupian/4 (2).png","hash":"0f7a3dd403549309e94f5a0e58875d405498846d","modified":1734052864325},{"_id":"public/tupian/4(1).png","hash":"0f7a3dd403549309e94f5a0e58875d405498846d","modified":1734052864325},{"_id":"source/tupian/图片1.png","hash":"da265d376d3801cac178f6f7a2dd66bf19992614","modified":1734052937604},{"_id":"public/tupian/图片1.png","hash":"da265d376d3801cac178f6f7a2dd66bf19992614","modified":1734053025114}],"Category":[{"name":"算法","_id":"cm4ld1o840003qstoa7gk0ehm"},{"name":"java","_id":"cm4ld1o88000iqsto6rjq0jdn"}],"Data":[],"Page":[{"title":"个人简介","date":"2024-12-10T11:33:01.000Z","_content":"\n这是一个初入编程江湖的计算机男大学生\n热爱算法，喜欢钻研各类软件，也喜欢fps游戏，目前没想好要走的路ฅʕ•̫͡•ʔฅ\n\n\n### 友情链接\n#### [heStudio](https://www.hestudio.net/)\n简介：Welcome to the pit!\n\n","source":"about/index.md","raw":"---\ntitle: 个人简介\ndate: 2024-12-10 19:33:01\n---\n\n这是一个初入编程江湖的计算机男大学生\n热爱算法，喜欢钻研各类软件，也喜欢fps游戏，目前没想好要走的路ฅʕ•̫͡•ʔฅ\n\n\n### 友情链接\n#### [heStudio](https://www.hestudio.net/)\n简介：Welcome to the pit!\n\n","updated":"2024-12-11T12:13:09.048Z","path":"about/index.html","comments":1,"layout":"page","_id":"cm4ld1o830001qstof8vjd2y9","content":"<p>这是一个初入编程江湖的计算机男大学生<br>热爱算法，喜欢钻研各类软件，也喜欢fps游戏，目前没想好要走的路ฅʕ•̫͡•ʔฅ</p>\n<h3 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h3><h4 id=\"heStudio\"><a href=\"#heStudio\" class=\"headerlink\" title=\"heStudio\"></a><a href=\"https://www.hestudio.net/\">heStudio</a></h4><p>简介：Welcome to the pit!</p>\n","length":89,"excerpt":"","more":"<p>这是一个初入编程江湖的计算机男大学生<br>热爱算法，喜欢钻研各类软件，也喜欢fps游戏，目前没想好要走的路ฅʕ•̫͡•ʔฅ</p>\n<h3 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h3><h4 id=\"heStudio\"><a href=\"#heStudio\" class=\"headerlink\" title=\"heStudio\"></a><a href=\"https://www.hestudio.net/\">heStudio</a></h4><p>简介：Welcome to the pit!</p>\n"}],"Post":[{"title":"2024-11-16-蓝桥杯：回文判定","date":"2024-12-11T12:00:33.000Z","photos":["/tupian/11.26tupian.jpg"],"_content":"# 回文判定\n\n## 问题与代码\n\n![](/tupian/11.26.png)\n\n### 思路\n\n```java\nimport java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        String S = scan.next(); // 从标准输入读取一个字符串\n        char[] c = S.toCharArray(); // 将字符串转换为字符数组\n        StringBuilder sb = new StringBuilder(); // 创建一个StringBuilder对象，用于构建字符串\n        double a = Math.pow(10, 6); // 定义一个变量a，值为10的6次方，但这里实际上用不上，因为字符串长度是int类型\n\n        // 检查字符串长度是否在1到10^6之间（虽然a是double类型，但这里只是形式上的检查，因为字符串长度不会超过Integer.MAX_VALUE）\n        \n            for (int i = 0; i < c.length; i++) {\n                char str = c[i]; // 获取当前字符\n\n                // 检查字符是否为字母（ASCII码65-90为大写字母A-Z，97-122为小写字母a-z）\n                if (str >= 65 && str <= 90 || str >= 97 && str <= 122) {\n                    // 这里开始出现问题：每次遇到字母时，都会重新遍历整个字符串并反转，这是不必要的\n                    for (int i1 = c.length - 1; i1 >= 0; i1--) {\n                        char str2 = c[i1]; // 获取反转后的字符\n                        sb.append(str2); // 将字符添加到StringBuilder中\n                    }\n                    String str3 = sb.toString(); // 将StringBuilder转换为字符串\n\n                    // 检查反转后的字符串是否与原字符串相同\n                    if (str3.equals(S)) {\n                        System.out.println(\"Y\"); // 如果是，输出Y\n                    } else {\n                        System.out.println(\"N\"); // 如果不是，输出N\n                    }\n                    break; // 一旦完成比较，就退出循环，这意味着只要第一个字符是字母，就会立即判断\n\n                } else {\n                    System.out.println(\"N\"); // 如果当前字符不是字母，直接输出N并退出循环\n                    break;\n                }\n\n                // 注意：这里的逻辑存在问题，因为无论是否找到字母，都会立即退出循环，\n                // 这意味着代码只能检查字符串的第一个字符是否为字母以及它是否构成回文。\n            }\n        }\n        scan.close(); // 关闭Scanner对象\n    }\n}\n\n// 存在的问题和改进建议：\n// 1. 不需要每次遇到字母都重新反转整个字符串，只需在循环结束后进行一次反转检查。\n// 2. 可以先过滤掉非字母字符，再检查剩余部分是否为回文。\n// 3. 变量a的声明和使用是多余的，因为字符串长度是int类型，不会超过Integer.MAX_VALUE。\n// 4. 可以使用更高效的算法，如双指针法，来检查回文。\n```","source":"_posts/2024-11-16-蓝桥杯：回文判定.md","raw":"---\ntitle: 2024-11-16-蓝桥杯：回文判定\ndate: 2024-12-11 20:00:33\ntags:\n    - 双指针\n    - 字符串\n    - 模拟\ncategories: 算法\nphotos: /tupian/11.26tupian.jpg\n---\n# 回文判定\n\n## 问题与代码\n\n![](/tupian/11.26.png)\n\n### 思路\n\n```java\nimport java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scan = new Scanner(System.in);\n        String S = scan.next(); // 从标准输入读取一个字符串\n        char[] c = S.toCharArray(); // 将字符串转换为字符数组\n        StringBuilder sb = new StringBuilder(); // 创建一个StringBuilder对象，用于构建字符串\n        double a = Math.pow(10, 6); // 定义一个变量a，值为10的6次方，但这里实际上用不上，因为字符串长度是int类型\n\n        // 检查字符串长度是否在1到10^6之间（虽然a是double类型，但这里只是形式上的检查，因为字符串长度不会超过Integer.MAX_VALUE）\n        \n            for (int i = 0; i < c.length; i++) {\n                char str = c[i]; // 获取当前字符\n\n                // 检查字符是否为字母（ASCII码65-90为大写字母A-Z，97-122为小写字母a-z）\n                if (str >= 65 && str <= 90 || str >= 97 && str <= 122) {\n                    // 这里开始出现问题：每次遇到字母时，都会重新遍历整个字符串并反转，这是不必要的\n                    for (int i1 = c.length - 1; i1 >= 0; i1--) {\n                        char str2 = c[i1]; // 获取反转后的字符\n                        sb.append(str2); // 将字符添加到StringBuilder中\n                    }\n                    String str3 = sb.toString(); // 将StringBuilder转换为字符串\n\n                    // 检查反转后的字符串是否与原字符串相同\n                    if (str3.equals(S)) {\n                        System.out.println(\"Y\"); // 如果是，输出Y\n                    } else {\n                        System.out.println(\"N\"); // 如果不是，输出N\n                    }\n                    break; // 一旦完成比较，就退出循环，这意味着只要第一个字符是字母，就会立即判断\n\n                } else {\n                    System.out.println(\"N\"); // 如果当前字符不是字母，直接输出N并退出循环\n                    break;\n                }\n\n                // 注意：这里的逻辑存在问题，因为无论是否找到字母，都会立即退出循环，\n                // 这意味着代码只能检查字符串的第一个字符是否为字母以及它是否构成回文。\n            }\n        }\n        scan.close(); // 关闭Scanner对象\n    }\n}\n\n// 存在的问题和改进建议：\n// 1. 不需要每次遇到字母都重新反转整个字符串，只需在循环结束后进行一次反转检查。\n// 2. 可以先过滤掉非字母字符，再检查剩余部分是否为回文。\n// 3. 变量a的声明和使用是多余的，因为字符串长度是int类型，不会超过Integer.MAX_VALUE。\n// 4. 可以使用更高效的算法，如双指针法，来检查回文。\n```","slug":"2024-11-16-蓝桥杯：回文判定","published":1,"updated":"2024-12-11T12:05:06.327Z","comments":1,"layout":"post","_id":"cm4ld1o810000qsto4mk747hh","content":"<h1 id=\"回文判定\"><a href=\"#回文判定\" class=\"headerlink\" title=\"回文判定\"></a>回文判定</h1><h2 id=\"问题与代码\"><a href=\"#问题与代码\" class=\"headerlink\" title=\"问题与代码\"></a>问题与代码</h2><p><img src=\"/tupian/11.26.png\"></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">scan</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">S</span> <span class=\"operator\">=</span> scan.next(); <span class=\"comment\">// 从标准输入读取一个字符串</span></span><br><span class=\"line\">        <span class=\"type\">char</span>[] c = S.toCharArray(); <span class=\"comment\">// 将字符串转换为字符数组</span></span><br><span class=\"line\">        <span class=\"type\">StringBuilder</span> <span class=\"variable\">sb</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>(); <span class=\"comment\">// 创建一个StringBuilder对象，用于构建字符串</span></span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> Math.pow(<span class=\"number\">10</span>, <span class=\"number\">6</span>); <span class=\"comment\">// 定义一个变量a，值为10的6次方，但这里实际上用不上，因为字符串长度是int类型</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 检查字符串长度是否在1到10^6之间（虽然a是double类型，但这里只是形式上的检查，因为字符串长度不会超过Integer.MAX_VALUE）</span></span><br><span class=\"line\">        </span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; c.length; i++) &#123;</span><br><span class=\"line\">                <span class=\"type\">char</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> c[i]; <span class=\"comment\">// 获取当前字符</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 检查字符是否为字母（ASCII码65-90为大写字母A-Z，97-122为小写字母a-z）</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (str &gt;= <span class=\"number\">65</span> &amp;&amp; str &lt;= <span class=\"number\">90</span> || str &gt;= <span class=\"number\">97</span> &amp;&amp; str &lt;= <span class=\"number\">122</span>) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 这里开始出现问题：每次遇到字母时，都会重新遍历整个字符串并反转，这是不必要的</span></span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i1</span> <span class=\"operator\">=</span> c.length - <span class=\"number\">1</span>; i1 &gt;= <span class=\"number\">0</span>; i1--) &#123;</span><br><span class=\"line\">                        <span class=\"type\">char</span> <span class=\"variable\">str2</span> <span class=\"operator\">=</span> c[i1]; <span class=\"comment\">// 获取反转后的字符</span></span><br><span class=\"line\">                        sb.append(str2); <span class=\"comment\">// 将字符添加到StringBuilder中</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"type\">String</span> <span class=\"variable\">str3</span> <span class=\"operator\">=</span> sb.toString(); <span class=\"comment\">// 将StringBuilder转换为字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">// 检查反转后的字符串是否与原字符串相同</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (str3.equals(S)) &#123;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">&quot;Y&quot;</span>); <span class=\"comment\">// 如果是，输出Y</span></span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">&quot;N&quot;</span>); <span class=\"comment\">// 如果不是，输出N</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>; <span class=\"comment\">// 一旦完成比较，就退出循环，这意味着只要第一个字符是字母，就会立即判断</span></span><br><span class=\"line\"></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;N&quot;</span>); <span class=\"comment\">// 如果当前字符不是字母，直接输出N并退出循环</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 注意：这里的逻辑存在问题，因为无论是否找到字母，都会立即退出循环，</span></span><br><span class=\"line\">                <span class=\"comment\">// 这意味着代码只能检查字符串的第一个字符是否为字母以及它是否构成回文。</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        scan.close(); <span class=\"comment\">// 关闭Scanner对象</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 存在的问题和改进建议：</span></span><br><span class=\"line\"><span class=\"comment\">// 1. 不需要每次遇到字母都重新反转整个字符串，只需在循环结束后进行一次反转检查。</span></span><br><span class=\"line\"><span class=\"comment\">// 2. 可以先过滤掉非字母字符，再检查剩余部分是否为回文。</span></span><br><span class=\"line\"><span class=\"comment\">// 3. 变量a的声明和使用是多余的，因为字符串长度是int类型，不会超过Integer.MAX_VALUE。</span></span><br><span class=\"line\"><span class=\"comment\">// 4. 可以使用更高效的算法，如双指针法，来检查回文。</span></span><br></pre></td></tr></table></figure>","length":1432,"excerpt":"","more":"<h1 id=\"回文判定\"><a href=\"#回文判定\" class=\"headerlink\" title=\"回文判定\"></a>回文判定</h1><h2 id=\"问题与代码\"><a href=\"#问题与代码\" class=\"headerlink\" title=\"问题与代码\"></a>问题与代码</h2><p><img src=\"/tupian/11.26.png\"></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">scan</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">S</span> <span class=\"operator\">=</span> scan.next(); <span class=\"comment\">// 从标准输入读取一个字符串</span></span><br><span class=\"line\">        <span class=\"type\">char</span>[] c = S.toCharArray(); <span class=\"comment\">// 将字符串转换为字符数组</span></span><br><span class=\"line\">        <span class=\"type\">StringBuilder</span> <span class=\"variable\">sb</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>(); <span class=\"comment\">// 创建一个StringBuilder对象，用于构建字符串</span></span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> Math.pow(<span class=\"number\">10</span>, <span class=\"number\">6</span>); <span class=\"comment\">// 定义一个变量a，值为10的6次方，但这里实际上用不上，因为字符串长度是int类型</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 检查字符串长度是否在1到10^6之间（虽然a是double类型，但这里只是形式上的检查，因为字符串长度不会超过Integer.MAX_VALUE）</span></span><br><span class=\"line\">        </span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; c.length; i++) &#123;</span><br><span class=\"line\">                <span class=\"type\">char</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> c[i]; <span class=\"comment\">// 获取当前字符</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 检查字符是否为字母（ASCII码65-90为大写字母A-Z，97-122为小写字母a-z）</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (str &gt;= <span class=\"number\">65</span> &amp;&amp; str &lt;= <span class=\"number\">90</span> || str &gt;= <span class=\"number\">97</span> &amp;&amp; str &lt;= <span class=\"number\">122</span>) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 这里开始出现问题：每次遇到字母时，都会重新遍历整个字符串并反转，这是不必要的</span></span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i1</span> <span class=\"operator\">=</span> c.length - <span class=\"number\">1</span>; i1 &gt;= <span class=\"number\">0</span>; i1--) &#123;</span><br><span class=\"line\">                        <span class=\"type\">char</span> <span class=\"variable\">str2</span> <span class=\"operator\">=</span> c[i1]; <span class=\"comment\">// 获取反转后的字符</span></span><br><span class=\"line\">                        sb.append(str2); <span class=\"comment\">// 将字符添加到StringBuilder中</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"type\">String</span> <span class=\"variable\">str3</span> <span class=\"operator\">=</span> sb.toString(); <span class=\"comment\">// 将StringBuilder转换为字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">// 检查反转后的字符串是否与原字符串相同</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (str3.equals(S)) &#123;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">&quot;Y&quot;</span>); <span class=\"comment\">// 如果是，输出Y</span></span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">&quot;N&quot;</span>); <span class=\"comment\">// 如果不是，输出N</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>; <span class=\"comment\">// 一旦完成比较，就退出循环，这意味着只要第一个字符是字母，就会立即判断</span></span><br><span class=\"line\"></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;N&quot;</span>); <span class=\"comment\">// 如果当前字符不是字母，直接输出N并退出循环</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 注意：这里的逻辑存在问题，因为无论是否找到字母，都会立即退出循环，</span></span><br><span class=\"line\">                <span class=\"comment\">// 这意味着代码只能检查字符串的第一个字符是否为字母以及它是否构成回文。</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        scan.close(); <span class=\"comment\">// 关闭Scanner对象</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 存在的问题和改进建议：</span></span><br><span class=\"line\"><span class=\"comment\">// 1. 不需要每次遇到字母都重新反转整个字符串，只需在循环结束后进行一次反转检查。</span></span><br><span class=\"line\"><span class=\"comment\">// 2. 可以先过滤掉非字母字符，再检查剩余部分是否为回文。</span></span><br><span class=\"line\"><span class=\"comment\">// 3. 变量a的声明和使用是多余的，因为字符串长度是int类型，不会超过Integer.MAX_VALUE。</span></span><br><span class=\"line\"><span class=\"comment\">// 4. 可以使用更高效的算法，如双指针法，来检查回文。</span></span><br></pre></td></tr></table></figure>"},{"title":"2024.11.24 蓝桥杯：牛郎取名","date":"2024-12-10T12:30:43.000Z","photos":["/tupian/11.24tupian.jpg"],"_content":"\n# 牛郎取名\n\n## 问题与代码\n\n![](/tupian/niulangquming.png)\n\n### 思路\n\n1.创建n表示字符串长度 \n2.创建s表示字符 \n3.因为字符串不能修改，所以可以用stringBuilder方法来解决不能修改的问题 \n4.利用循环来改变字符顺序 \n5.用tostring来转变为字符串 \n6.最后输出字符串","source":"_posts/2024-11-24-蓝桥杯：牛郎取名.md","raw":"---\ntitle: 2024.11.24 蓝桥杯：牛郎取名\ndate: 2024-12-10 20:30:43\ntags: \n    - 算法\n    - 字符串\n    - 模拟\ncategories: 算法\nphotos: /tupian/11.24tupian.jpg\n---\n\n# 牛郎取名\n\n## 问题与代码\n\n![](/tupian/niulangquming.png)\n\n### 思路\n\n1.创建n表示字符串长度 \n2.创建s表示字符 \n3.因为字符串不能修改，所以可以用stringBuilder方法来解决不能修改的问题 \n4.利用循环来改变字符顺序 \n5.用tostring来转变为字符串 \n6.最后输出字符串","slug":"2024-11-24-蓝桥杯：牛郎取名","published":1,"updated":"2024-12-11T11:16:43.397Z","comments":1,"layout":"post","_id":"cm4ld1o830002qsto78hgb6rp","content":"<h1 id=\"牛郎取名\"><a href=\"#牛郎取名\" class=\"headerlink\" title=\"牛郎取名\"></a>牛郎取名</h1><h2 id=\"问题与代码\"><a href=\"#问题与代码\" class=\"headerlink\" title=\"问题与代码\"></a>问题与代码</h2><p><img src=\"/tupian/niulangquming.png\"></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><p>1.创建n表示字符串长度<br>2.创建s表示字符<br>3.因为字符串不能修改，所以可以用stringBuilder方法来解决不能修改的问题<br>4.利用循环来改变字符顺序<br>5.用tostring来转变为字符串<br>6.最后输出字符串</p>\n","length":114,"excerpt":"","more":"<h1 id=\"牛郎取名\"><a href=\"#牛郎取名\" class=\"headerlink\" title=\"牛郎取名\"></a>牛郎取名</h1><h2 id=\"问题与代码\"><a href=\"#问题与代码\" class=\"headerlink\" title=\"问题与代码\"></a>问题与代码</h2><p><img src=\"/tupian/niulangquming.png\"></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><p>1.创建n表示字符串长度<br>2.创建s表示字符<br>3.因为字符串不能修改，所以可以用stringBuilder方法来解决不能修改的问题<br>4.利用循环来改变字符顺序<br>5.用tostring来转变为字符串<br>6.最后输出字符串</p>\n"},{"title":"2024-11-27-蓝桥杯：查找最大元素","date":"2024-12-11T12:17:51.000Z","photos":["/tupian/11.27tupian.jpg"],"_content":"# 查找最大元素\n\n## 问题与代码\n\n![](/tupian/11.27.png)\n\n\n### 思路\n```java\n//读取字符串并转换为字符数组：\nString str = scan.next();\nchar[] chars = str.toCharArray();\n//找出ASCII码值最大的字符：\nchar max = 'a';\nfor(int j=0;j<chars.length;j++){\n  if(chars[j]>max){\n    max=chars[j];\n  }\n}\n//替换最大字符：\nString result = str.replaceAll(max+\"\",max+\"(max)\");\n```","source":"_posts/2024-11-27-蓝桥杯：查找最大元素.md","raw":"---\ntitle: 2024-11-27-蓝桥杯：查找最大元素\ndate: 2024-12-11 20:17:51\ntags:\n    - 字符串\ncategories: 算法\nphotos: /tupian/11.27tupian.jpg\n---\n# 查找最大元素\n\n## 问题与代码\n\n![](/tupian/11.27.png)\n\n\n### 思路\n```java\n//读取字符串并转换为字符数组：\nString str = scan.next();\nchar[] chars = str.toCharArray();\n//找出ASCII码值最大的字符：\nchar max = 'a';\nfor(int j=0;j<chars.length;j++){\n  if(chars[j]>max){\n    max=chars[j];\n  }\n}\n//替换最大字符：\nString result = str.replaceAll(max+\"\",max+\"(max)\");\n```","slug":"2024-11-27-蓝桥杯：查找最大元素","published":1,"updated":"2024-12-11T12:24:54.151Z","comments":1,"layout":"post","_id":"cm4ld1o850005qstocmdkghif","content":"<h1 id=\"查找最大元素\"><a href=\"#查找最大元素\" class=\"headerlink\" title=\"查找最大元素\"></a>查找最大元素</h1><h2 id=\"问题与代码\"><a href=\"#问题与代码\" class=\"headerlink\" title=\"问题与代码\"></a>问题与代码</h2><p><img src=\"/tupian/11.27.png\"></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//读取字符串并转换为字符数组：</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> scan.next();</span><br><span class=\"line\"><span class=\"type\">char</span>[] chars = str.toCharArray();</span><br><span class=\"line\"><span class=\"comment\">//找出ASCII码值最大的字符：</span></span><br><span class=\"line\"><span class=\"type\">char</span> <span class=\"variable\">max</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;chars.length;j++)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(chars[j]&gt;max)&#123;</span><br><span class=\"line\">    max=chars[j];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//替换最大字符：</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> str.replaceAll(max+<span class=\"string\">&quot;&quot;</span>,max+<span class=\"string\">&quot;(max)&quot;</span>);</span><br></pre></td></tr></table></figure>","length":301,"excerpt":"","more":"<h1 id=\"查找最大元素\"><a href=\"#查找最大元素\" class=\"headerlink\" title=\"查找最大元素\"></a>查找最大元素</h1><h2 id=\"问题与代码\"><a href=\"#问题与代码\" class=\"headerlink\" title=\"问题与代码\"></a>问题与代码</h2><p><img src=\"/tupian/11.27.png\"></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//读取字符串并转换为字符数组：</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> scan.next();</span><br><span class=\"line\"><span class=\"type\">char</span>[] chars = str.toCharArray();</span><br><span class=\"line\"><span class=\"comment\">//找出ASCII码值最大的字符：</span></span><br><span class=\"line\"><span class=\"type\">char</span> <span class=\"variable\">max</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;chars.length;j++)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(chars[j]&gt;max)&#123;</span><br><span class=\"line\">    max=chars[j];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//替换最大字符：</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> str.replaceAll(max+<span class=\"string\">&quot;&quot;</span>,max+<span class=\"string\">&quot;(max)&quot;</span>);</span><br></pre></td></tr></table></figure>"},{"title":"2024-11-25-蓝桥杯：数字转换字母","date":"2024-12-11T10:35:18.000Z","photos":["/tupian/11.25tupian.jpg"],"_content":"# 数字转换字母\n\n## 问题与代码\n\n![](/tupian/11.25(1).png)\n![](/tupian/11.25(2).png)\n\n### 思路\n\n```java\nScanner sc = new Scanner(System.in);\n        //获取第一个字符串\n        String S = sc.next();\n        //获取第二个字符串\n        String T = sc.next();\n        //因为字符串不能更改，所以用StringBuilder\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < T.length(); i++) {\n            char c = T.charAt(i);\n            if(c >= '0' && c <= '9'){\n                //创立默认值\n                char replacement = ' ';\n                switch(c){\n                    case '0':\n                        replacement = S.charAt(0);\n                        break;\n                    case '1':\n                        replacement = S.charAt(1);\n                        break;\n                    case '2':\n                        replacement = S.charAt(2);\n                        break;\n                    case '3':\n                        replacement = S.charAt(3);\n                        break;\n                    case '4':\n                        replacement = S.charAt(4);\n                        break;\n                    case '5':\n                        replacement = S.charAt(5);\n                        break;\n                    case '6':\n                        replacement = S.charAt(6);\n                        break;\n                    case '7':\n                        replacement = S.charAt(7);\n                        break;\n                    case '8':\n                        replacement = S.charAt(8);\n                        break;\n                    case '9':\n                        replacement = S.charAt(9);\n                        break;\n                    default:\n                        break;\n\n                }\n            sb.append(replacement);\n            \n            }else {\n                sb.append(T.charAt(i));\n            }\n\n            \n        }\n        String str = sb.toString();\n        System.out.println(str);\n        \n\n        sc.close();\n\n```\n","source":"_posts/2024-11-25-蓝桥杯：数字转换字母.md","raw":"---\ntitle: 2024-11-25-蓝桥杯：数字转换字母\ndate: 2024-12-11 18:35:18\ntags:\n    - 语法\n    - STL\n    - 模拟\ncategories: 算法\nphotos: /tupian/11.25tupian.jpg\n---\n# 数字转换字母\n\n## 问题与代码\n\n![](/tupian/11.25(1).png)\n![](/tupian/11.25(2).png)\n\n### 思路\n\n```java\nScanner sc = new Scanner(System.in);\n        //获取第一个字符串\n        String S = sc.next();\n        //获取第二个字符串\n        String T = sc.next();\n        //因为字符串不能更改，所以用StringBuilder\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < T.length(); i++) {\n            char c = T.charAt(i);\n            if(c >= '0' && c <= '9'){\n                //创立默认值\n                char replacement = ' ';\n                switch(c){\n                    case '0':\n                        replacement = S.charAt(0);\n                        break;\n                    case '1':\n                        replacement = S.charAt(1);\n                        break;\n                    case '2':\n                        replacement = S.charAt(2);\n                        break;\n                    case '3':\n                        replacement = S.charAt(3);\n                        break;\n                    case '4':\n                        replacement = S.charAt(4);\n                        break;\n                    case '5':\n                        replacement = S.charAt(5);\n                        break;\n                    case '6':\n                        replacement = S.charAt(6);\n                        break;\n                    case '7':\n                        replacement = S.charAt(7);\n                        break;\n                    case '8':\n                        replacement = S.charAt(8);\n                        break;\n                    case '9':\n                        replacement = S.charAt(9);\n                        break;\n                    default:\n                        break;\n\n                }\n            sb.append(replacement);\n            \n            }else {\n                sb.append(T.charAt(i));\n            }\n\n            \n        }\n        String str = sb.toString();\n        System.out.println(str);\n        \n\n        sc.close();\n\n```\n","slug":"2024-11-25-蓝桥杯：数字转换字母","published":1,"updated":"2024-12-11T11:16:41.218Z","comments":1,"layout":"post","_id":"cm4ld1o850006qstofc0w352h","content":"<h1 id=\"数字转换字母\"><a href=\"#数字转换字母\" class=\"headerlink\" title=\"数字转换字母\"></a>数字转换字母</h1><h2 id=\"问题与代码\"><a href=\"#问题与代码\" class=\"headerlink\" title=\"问题与代码\"></a>问题与代码</h2><p><img src=\"/tupian/11.25(1).png\"><br><img src=\"/tupian/11.25(2).png\"></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        <span class=\"comment\">//获取第一个字符串</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">S</span> <span class=\"operator\">=</span> sc.next();</span><br><span class=\"line\">        <span class=\"comment\">//获取第二个字符串</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">T</span> <span class=\"operator\">=</span> sc.next();</span><br><span class=\"line\">        <span class=\"comment\">//因为字符串不能更改，所以用StringBuilder</span></span><br><span class=\"line\">        <span class=\"type\">StringBuilder</span> <span class=\"variable\">sb</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; T.length(); i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">char</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> T.charAt(i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(c &gt;= <span class=\"string\">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class=\"string\">&#x27;9&#x27;</span>)&#123;</span><br><span class=\"line\">                <span class=\"comment\">//创立默认值</span></span><br><span class=\"line\">                <span class=\"type\">char</span> <span class=\"variable\">replacement</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">switch</span>(c)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;0&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;1&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">1</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;2&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">2</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;3&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">3</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;4&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">4</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;5&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">5</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;6&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">6</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;7&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">7</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;8&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">8</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;9&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">9</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            sb.append(replacement);</span><br><span class=\"line\">            </span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                sb.append(T.charAt(i));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> sb.toString();</span><br><span class=\"line\">        System.out.println(str);</span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\">        sc.close();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","length":1074,"excerpt":"","more":"<h1 id=\"数字转换字母\"><a href=\"#数字转换字母\" class=\"headerlink\" title=\"数字转换字母\"></a>数字转换字母</h1><h2 id=\"问题与代码\"><a href=\"#问题与代码\" class=\"headerlink\" title=\"问题与代码\"></a>问题与代码</h2><p><img src=\"/tupian/11.25(1).png\"><br><img src=\"/tupian/11.25(2).png\"></p>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        <span class=\"comment\">//获取第一个字符串</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">S</span> <span class=\"operator\">=</span> sc.next();</span><br><span class=\"line\">        <span class=\"comment\">//获取第二个字符串</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">T</span> <span class=\"operator\">=</span> sc.next();</span><br><span class=\"line\">        <span class=\"comment\">//因为字符串不能更改，所以用StringBuilder</span></span><br><span class=\"line\">        <span class=\"type\">StringBuilder</span> <span class=\"variable\">sb</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; T.length(); i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">char</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> T.charAt(i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(c &gt;= <span class=\"string\">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class=\"string\">&#x27;9&#x27;</span>)&#123;</span><br><span class=\"line\">                <span class=\"comment\">//创立默认值</span></span><br><span class=\"line\">                <span class=\"type\">char</span> <span class=\"variable\">replacement</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">switch</span>(c)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;0&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;1&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">1</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;2&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">2</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;3&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">3</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;4&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">4</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;5&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">5</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;6&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">6</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;7&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">7</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;8&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">8</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;9&#x27;</span>:</span><br><span class=\"line\">                        replacement = S.charAt(<span class=\"number\">9</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            sb.append(replacement);</span><br><span class=\"line\">            </span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                sb.append(T.charAt(i));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> sb.toString();</span><br><span class=\"line\">        System.out.println(str);</span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\">        sc.close();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"title":"day03-运算符","date":"2024-12-12T08:37:00.000Z","photos":["/tupian/j03.jpg"],"_content":"\n\n\n# 1.运算符和表达式\n\n### 运算符：\n\n​\t就是对常量或者变量进行操作的符号。\n\n​\t比如： +  -  *  / \n\n### 表达式：\n\n​\t用运算符把常量或者变量连接起来的，符合Java语法的式子就是表达式。\n\n​\t比如：a + b 这个整体就是表达式。\n\n​\t而其中+是算术运算符的一种，所以这个表达式也称之为算术表达式。\n\n# 2.算术运算符\n\n分类：\n\n```java\n+ - * / %\n```\n\n运算特点：\n\n```java\n+ - * :跟小学数学中一模一样没有任何区别.\n```\n\n```java\n/：\n1.整数相除结果只能得到整除，如果结果想要是小数，必须要有小数参数。\n2.小数直接参与运算，得到的结果有可能是不精确的。\n案例：\nSystem.out.println( 10 / 3);//3\nSystem.out.println(10.0 / 3);//3.3333333333333335\n```\n\n```java\n%：取模、取余。\n   他做的也是除法运算，只不过获取的是余数而已。\n案例：\nSystem.out.println(10 % 2);//0\nSystem.out.println(10 % 3);//1\n应用场景：\n//可以利用取模来判断一个数是奇数还是偶数\nSystem.out.println(15 % 2);//1  奇数\n```\n\n### 练习：数值拆分\n\n需求：键盘录入一个三位数，将其拆分为个位、十位、百位后，打印在控制台\n\n代码示例：\n\n```java\n//1.键盘录入一个三位数\n//导包 --- 创建对象 --- 接收数据\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入一个三位数\");\nint number = sc.nextInt();//123\n\n//2.获取这个三位数的个位、十位、百位并打印出来\n//公式：\n//针对于任意的一个数而言\n//个位： 数字 % 10\nint ones = number % 10;\n//十位： 数字 / 10 % 10\nint tens = number / 10 % 10;\n//百位： 数字 / 100 % 10\nint hundreds = number / 100  % 10;\n\n//输出结果\nSystem.out.println(ones);\nSystem.out.println(tens);\nSystem.out.println(hundreds);\n```\n\n公式：\n\n​\t获取任意一个数上每一位数。\n\n个位：数字 % 10\n\n十位：数字 / 10 % 10\n\n百位：数字 / 100 % 10\n\n千位：数字 / 1000 % 10\n\n。。。以此类推。。。\n\n# 3.隐式转换\n\n### 概念：\n\n​\t也叫自动类型提升。\n\n​\t就是把一个取值范围小的数据或者变量，赋值给另一个取值范围大的变量。此时不需要我们额外写代码单独实现，是程序自动帮我们完成的。\n\n### 简单记忆：\n\n​\t就是小的给大的，可以直接给。\n\n### 两种提升规则：\n\n* 取值范围小的，和取值范围大的进行运算，小的会先提升为大的，再进行运算。\n* byte、short、char三种类型的数据在运算的时候，都会直接先提升为int，然后再进行运算。\n\n### 取值范围从小到大的关系：\n\n​\tbyte short int long float double\n\n# 4.隐式转换的练习\n\n请看下面案例是否有误，如果有问题，请说出原因，如果没有问题，请说出运算过程和运算结果\n\n### 案例一：\n\n```java\ndouble d = 10;\nSystem.out.println(d);//10.0\n```\n\n解释：\n\n​\t10是整数，整数默认是int类型的。\n\n​\t而在取值范围的顺序中：byte short int long float double\n\n​\t在赋值的时候把一个int类型的赋值给了一个double类型的。把一个小的赋值给一个大的是可以直接给的。\n\n\n\n### 案例二：\n\n```java\nbyte b = 100;\nint i = b;//可以成功赋值\n```\n\n解释：\n\n​\t因为byte的取值范围是小的，int的取值范围是大的，在底层进行了隐式转换，不需要我们额外写代码单独实现，是可以直接赋值。\n\n\n\n### 案例三：\n\n```java\nint i = 10;\nlong n = 20L;\n??? result = i + n;\n问变量result是什么类型的？\n```\n\n解释：\n\n​\t变量i是int类型的，变量n是long类型的。\n\n​\t而在取值范围的顺序中：byte short int long float double\n\n​\t变量i里面的值会自动提升为long类型的，最终的结果其实就是两个long相加，那么最终的result是long类型的。\n\n### 案例四：\n\n```java\nint i = 10;\nlong n = 100L;\ndouble d = 20.0;\n??? result = i + n + d;\n问变量result是什么类型的？\n```\n\n解释：\n\n​\t变量i是int类型，变量n是long类型，变量d是double类型。\n\n​\t而在取值范围的顺序中：byte short int long float double\n\n​\t所以变量i和变量n里面的值在参与运算的时候，都会进行类型提升，变成double。\n\n​\t最终其实就是三个double进行相加，那么最终的结果就是double类型的。\n\n\n\n\n\n### 案例五：\n\n```java\nbyte b1 = 10;\nbyte b2 = 20;\n??? result = b1 + b2;//int\n问变量result是什么类型的？\n```\n\n解释：\n\n​\t因为b1和b2都是byte类型的。所以在参与计算的时候，变量b1和变量b2里面的值都会自动提升为int类型的。最终其实就是两个int类型的相加，最终结果也是int类型的。\n\n\n\n### 案例六：\n\n```java\nbyte b = 10;\nshort s = 20;\nlong n = 100L;\n??? result = b + s + n;\n问变量result是什么类型的？long\n```\n\n解释：\n\n​\t变量b是byte类型的，变量s是short类型的，变量n是long类型的。\n\n​\tbyte，short，char类型的变量在参与运算的时候，变量里面的值会直接先提升为int。\n\n第一步：变量b和变量s里面的值会先提升为int参与运算。\n\n​\t\tint + int + long\n\n第二步：而long类型的取值范围是大于int的取值范围的。\n\n​\t\t所以变量b和变量s里面的值会再次提升为long。\n\n​\t\tlong + long + long。\n\n所以最终结果是long类型的。\n\n# 5.强制转换\n\n### 概念：\n\n​\t如果要把一个取值范围大的数据或者变量赋值给另一个取值范围小的变量。是不允许直接操作。\n\n​\t如果一定要这么干，就需要加入强制转换。\n\n### 书写格式：\n\n​\t目标数据类型 变量名 = （目标数据类型）被强转的数据；\n\n简单理解：\n\n​\t要转成什么类型的，那么就在小括号中写什么类型就可以了。\n\n案例：\n\n```java\npublic class OperatorDemo2 {\n    public static void main(String[] args) {\n        double a = 12.3;\n        int b = (int) a;\n        System.out.println(b);//12\n    }\n}\n```\n\n注意点：\n\n​\t强制转换有可能会导致数据发生错误。（数据的精度丢失）\n\n# 6.字符串的+操作\n\n### 核心技巧：\n\n* 当+操作中出现字符串时，此时就是字符串的连接符，会将前后的数据进行拼接，并产生一个新的字符串。\n* 当连续进行+操作时，从左到右逐个执行的。\n\n# 7.字符串相加的练习：\n\n案例1：\n\n```java\n1 + \"abc\" + 1\n```\n\n结果：\"1abc1\"\n\n解释：\n\n​\t第一步： 1 + \"abc\"。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串\"1abc\"\n\n​\t第二步：  \"1abc\" + 1。这个过程中，有字符串参与的，所以做的也是拼接操作，产生一个新的字符串\"1abc1\"\n\n\n\n案例2：\n\n```java\n1 + 2 + \"abc\" + 2 + 1\n```\n\n结果：“3abc21”\n\n解释：\n\n​\t第一步：1 + 2 。在这个过程中，没有字符串参与的，所以做的是加法运算，结果为3。\n\n​\t第二步：3 + \"abc\"。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串\"3abc\"。\n\n​\t第三步：\"3abc\" + 2。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串\"3abc2\"。\n\n​\t第四步：\"3abc2\" + 1。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串“3abc21”\n\n\n\n案例3：\n\n```java\nString name = \"黑默丁格\";\nSystem.out.println(\"我的名字是\" + name);\n```\n\n结果： 我的名字是黑默丁格\n\n解释：当字符串跟变量相加的时候，实际上是跟变量里面的值进行拼接。\n\n# 8.字符的+操作\n\n### 规则：\n\n​\t当+操作中出现了字符，会拿着字符到计算机内置的ASCII码表中去查对应的数字，然后再进行计算。\n\n### 案例：\n\n```java\nchar c = 'a';\nint result = c + 0;\nSystem.out.println(result);//97\n```\n\nASCII码表中：\n\n​\t'a'   -----    97\n\n​\t'A'   -----    65\n\n# 9.算术运算符的总结\n\n分类：\n\n```java\n+ - * / %  这些操作跟小学数学几乎是一模一样的。\n```\n\n注意点：\n\n* / 和 % 的区别：他们两个都是做除法运算，/取结果的商。% 取结果的余数。\n* 整数操作只能得到整数，如果想要得到小数，必须有浮点数参与运算。\n\n算术运算符的高级用法：\n\n是以+为例进行的讲解，其余减法，乘法，除法的运算规则也是一样的。\n\n特例：字符串只有+操作，没有其他操作。\n\n# 10.自增自减运算符\n\n### 分类：\n\n```java\n++  自增运算符\n--  自减运算符\n```\n\n++：就是把变量里面的值+1\n\n--：就是把变量里面的值-1\n\n### 使用方式：\n\n* 放在变量的前面，我们叫做先++。 比如：++a\n* 放在变量的后面，我们叫做后++。 比如：a++\n\n### 注意点：\n\n​\t不管是先++，还是后++。单独写在一行的时候，运算结果是一模一样的。\n\n### 案例：\n\n```java\n//++\nint a = 10;\na++;//就是让变量a里面的值 + 1\nSystem.out.println(a);//11\n++a;//就是让变量a里面的值 + 1\nSystem.out.println(a);//12\n```\n\n### 自增自减运算符的应用场景：\n\n某些情况下，变量需要进行加1或者减1的时候使用。\n\n比如：过生日多一岁，就用到了自增运算符。\n\n比如：购物商场中，选择商品数量，也用到了自增或者自减运算符。\n\n比如：统计很多数据中，有多少个数据满足要求，也用到了自增运算符。\n\n# 11.赋值运算符\n\n最为常用的：\t=\n\n运算过程：就是把等号右边的结果赋值给左边的变量\n\n案例：\n\n```java\npublic class OperatorDemo6 {\n    public static void main(String[] args) {\n        //1.最为简单的赋值运算符用法\n        int a = 10;//就是把10赋值给变量a\n        System.out.println(a);\n\n        //2.如果等号右边需要进行计算。\n        int b = 20;\n        int c = a + b;//先计算等号右边的，把计算的结果赋值给左边的变量\n        System.out.println(c);\n\n        //3.特殊的用法\n        a = a + 10;//先计算等号右边的，把计算的结果赋值给左边的变量\n        System.out.println(a);//20\n    }\n}\n```\n\n# 12.扩展赋值运算符\n\n### 分类：\n\n​\t+=、-=、*=、/=、%=\n\n### 运算规则：\n\n​\t就是把左边跟右边进行运算，把最终的结果赋值给左边，对右边没有任何影响。\n\n### 案例：\n\n```java\npublic class OperatorDemo7 {\n    public static void main(String[] args) {\n        //扩展赋值运算符\n        int a = 10;\n        int b = 20;\n        a += b;//把左边和右边相加，再把最终的结果赋值给左边，对右边没有任何影响\n        // 相当于 a = a + b;\n        System.out.println(a);//30\n        System.out.println(b);//20\n    }\n}\n```\n\n### 注意点：\n\n​\t扩展的赋值运算符中隐层还包含了一个强制转换。\n\n以+=为例。\n\na += b ;实际上相当于 a = (byte)(a + b);\n\n```java\npublic class OperatorDemo8 {\n    public static void main(String[] args) {\n        byte a = 10;\n        byte b = 20;\n        //a += b;\n        a = (byte)(a + b);\n        System.out.println(a);//30\n    }\n}\n```\n\n# 13.关系运算符\n\n又叫比较运算符，其实就是拿着左边跟右边进行了判断而已。\n\n### 分类：\n\n| 符号 | 解释                                                         |\n| ---- | ------------------------------------------------------------ |\n| ==   | 就是判断左边跟右边是否相等，如果成立就是true，如果不成立就是false |\n| !=   | 就是判断左边跟右边是否不相等，如果成立就是true，如果不成立就是false |\n| >    | 就是判断左边是否大于右边，如果成立就是true，如果不成立就是false |\n| >=   | 就是判断左边是否大于等于右边，如果成立就是true，如果不成立就是false |\n| <    | 就是判断左边是否小于右边，如果成立就是true，如果不成立就是false |\n| <=   | 就是判断左边是否小于等于右边，如果成立就是true，如果不成立就是false |\n\n### 注意点：\n\n* 关系运算符最终的结果一定是布尔类型的。要么是true，要么是false\n* 在写==的时候，千万不要写成=\n\n# 14.逻辑运算符\n\n### & 和 | 的使用：\n\n&：逻辑与（而且）\n\n​\t两边都为真，结果才是真，只要有一个为假，那么结果就是假。\n\n|：逻辑或（或者）\n\n​\t两边都为假，结果才是假，只要有一个为真，那么结果就是真。\n\n代码示例：\n\n```java\n// &  //两边都是真，结果才是真。\nSystem.out.println(true & true);//true\nSystem.out.println(false & false);//false\nSystem.out.println(true & false);//false\nSystem.out.println(false & true);//false\n\nSystem.out.println(\"===================================\");\n\n// | 或  //两边都是假，结果才是假，如果有一个为真，那么结果就是真。\nSystem.out.println(true | true);//true\nSystem.out.println(false | false);//false\nSystem.out.println(true | false);//true\nSystem.out.println(false | true);//true\n```\n\n### 使用场景：\n\n​\t根据固定的场景，来选择使用&还是使用|\n\n* 用户登录。\n\n  用户名输入正确  & 密码输入正确\n\n  因为只有用户名和密码同时都正确了，那么才能成功登录，只要有一个失败了都不行。\n\n  使用技巧：\n\n  ​\t当我们需要同时满足左边和右边两种情况时，可以使用且\n\n* 丈母娘选女婿\n\n  丈母娘：女婿啊，你要么买个房子，要么买辆车。就可以把我的小棉袄穿走了。\n\n  买个房子 | 买辆车\n\n  两个条件中，只要满足其中一个，就可以穿走小棉袄了。\n\n  使用技巧：\n\n  ​\t当两种条件只要满足其中一个的时候，可以使用或\n\n### ^（异或）的使用：\n\n​\t在以后用的不多，了解一下即可。\n\n计算规则：如果两边相同，结果为false，如果两边不同，结果为true\n\n代码示例：\n\n```java\n//^   //左右不相同，结果才是true，左右相同结果就是false\nSystem.out.println(true ^ true);//false\nSystem.out.println(false ^ false);//false\nSystem.out.println(true ^ false);//true\nSystem.out.println(false ^ true);//true\n```\n\n### !（取反）的使用：\n\n​\t是取反，也叫做非。\n\n计算规则：false取反就是true，true取反就是false\n\n温馨提示：**取反最多只用一个。**\n\n代码示例：\n\n```java\nSystem.out.println(!false);//true\nSystem.out.println(!true);//false\n\nSystem.out.println(!!false);//注意点：取反最多只用一个。\n```\n\n# 15.短路逻辑运算符\n\n分类：  &&   ||\n\n### &&：\n\n​\t运算结果跟&是一模一样的，只不过具有短路效果。\n\n### ||：\n\n​\t运算结果跟|是一模一样的。只不过具有短路效果。\n\n### 逻辑核心：\n\n​\t当左边不能确定整个表达式的结果，右边才会执行。\n\n​\t当左边能确定整个表达式的结果，那么右边就不会执行了。从而提高了代码的运行效率。\n\n### 举例：\n\n* 用户登录案例\n\n  用户名正确  & 密码正确\n\n  如果使用一个&，不管用户名是否正确都会去验证密码。\n\n思考：\n\n​\t如果用户名输入正确了，那么我们再判断密码是否正确，是符合业务逻辑的。\n\n​\t但是如果用户名输入错误了，那么现在还有必要去比较密码吗？没有不要了。\n\n​\t如果使用一个&，那么左边和右边不管什么情况下，都会执行。\n\n\n\n​\t用户名正确  &&  密码正确\n\n​\t如果用户名输入正确了，那么才会验证密码是否输入正确。\n\n​\t如果用户名输入错误了，那么就不会再去验证密码是否正确，最终的结果直接为false。从而提高了程序运行的效率。\n\n* 丈母娘选女婿\n\n  有房 |  有车\n\n  首先先看看有没有房，发现有，然后再去看看有没有车。\n\n思考：\n\n​\t既然都有房子，干嘛还要去看车呢？多此一举。\n\n​\t有房 ||  有车\n\n​\t首先先看看有没有房，如果有，那么右边就不执行了。最终的结果直接为true。\n\n​\t如果没有房子，才会去看右边有没有车。\n\n### 总结：\n\n​\t&& 和 & 、||和|的运行结果都是一模一样的。\n\n​\t但是短路逻辑运算符可以提高程序的运行效率。\n\n### 建议：\n\n​\t最为常用： &&   ||   ！\n\n# 16.三元运算符\n\n又叫做：三元表达式或者问号冒号表达式。\n\n### 格式：\n\n​\t关系表达式 ？ 表达式1 ：表达式2 ；\n\n### 计算规则：\n\n* 计算关系表达式的值。\n* 如果关系表达式的值为真，那么执行表达式1。\n* 如果关系表达式的值为假，那么执行表达式2。\n\n### 注意点：\n\n​\t三元运算符的最终结果一定要被使用，要么赋值给一个变量，要么直接打印出来。\n\n### 案例：\n\n```java\npublic class OperatorDemo12 {\n    public static void main(String[] args) {\n        //需求：求两个数的较大值\n        int a = 10;\n        int b = 20;\n\n        //格式：关系表达式 ？ 表达式1 ： 表达式2 ；\n        //注意点：\n        //三元运算符的最终结果一定要被使用。\n        //要么赋值给一个变量，要么直接输出。\n       int max =  a > b ? a : b ;\n        System.out.println(max);\n\n\n        System.out.println(a > b ? a : b);\n    }\n}\n```\n\n# 17.练习1-两只老虎\n\n需求：\n\n​\t动物园里有两只老虎，两只老虎的体重分别为通过键盘录入获得，\n\n​\t请用程序实现判断两只老虎的体重是否相同。\n\n代码示例：\n\n```java\n//1.获取两只老虎的体重\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入第一只老虎的体重\");\nint weight1 = sc.nextInt();\nSystem.out.println(\"请输入第二只老虎的体重\");\nint weight2 = sc.nextInt();\n\n//2.利用三元运算符求出最终结果\nString result = weight1 == weight2 ? \"相同\" : \"不相同\";\nSystem.out.println(result);\n```\n\n# 18.练习2-求三个数的最大值\n\n需求：\n\n​\t一座寺庙里住着三个和尚，已知他们的身高分别为150cm、210cm、165cm。\n\n​\t请用程序实现获取这三个和尚的最高身高。\n\n代码示例：\n\n```java\n//1.定义三个变量记录和尚的身高\nint height1 = 150;\nint height2 = 210;\nint height3 = 165;\n\n//2.利用三元运算符求出两个数中的较大值。\nint temp = height1 > height2 ? height1 : height2;\n\n//3.求出最终的结果\nint max = temp > height3 ? temp : height3;\n\nSystem.out.println(max);\n```\n\n# 19.运算符的优先级\n\n在Java中涉及了很多的运算符，每一种运算符都有各自的优先级。但是这些优先级不需要记忆。\n\n咱们只要知道其中一点：\n\n​\t小括号优先于所有。\n\n\n\n\n\n\n\n\n\n","source":"_posts/day03笔记.md","raw":"---\ntitle: day03-运算符\ndate: 2024-12-12 16:37:00\ntags:\n    - 运算符\ncategories: java\nphotos: /tupian/j03.jpg\n---\n\n\n\n# 1.运算符和表达式\n\n### 运算符：\n\n​\t就是对常量或者变量进行操作的符号。\n\n​\t比如： +  -  *  / \n\n### 表达式：\n\n​\t用运算符把常量或者变量连接起来的，符合Java语法的式子就是表达式。\n\n​\t比如：a + b 这个整体就是表达式。\n\n​\t而其中+是算术运算符的一种，所以这个表达式也称之为算术表达式。\n\n# 2.算术运算符\n\n分类：\n\n```java\n+ - * / %\n```\n\n运算特点：\n\n```java\n+ - * :跟小学数学中一模一样没有任何区别.\n```\n\n```java\n/：\n1.整数相除结果只能得到整除，如果结果想要是小数，必须要有小数参数。\n2.小数直接参与运算，得到的结果有可能是不精确的。\n案例：\nSystem.out.println( 10 / 3);//3\nSystem.out.println(10.0 / 3);//3.3333333333333335\n```\n\n```java\n%：取模、取余。\n   他做的也是除法运算，只不过获取的是余数而已。\n案例：\nSystem.out.println(10 % 2);//0\nSystem.out.println(10 % 3);//1\n应用场景：\n//可以利用取模来判断一个数是奇数还是偶数\nSystem.out.println(15 % 2);//1  奇数\n```\n\n### 练习：数值拆分\n\n需求：键盘录入一个三位数，将其拆分为个位、十位、百位后，打印在控制台\n\n代码示例：\n\n```java\n//1.键盘录入一个三位数\n//导包 --- 创建对象 --- 接收数据\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入一个三位数\");\nint number = sc.nextInt();//123\n\n//2.获取这个三位数的个位、十位、百位并打印出来\n//公式：\n//针对于任意的一个数而言\n//个位： 数字 % 10\nint ones = number % 10;\n//十位： 数字 / 10 % 10\nint tens = number / 10 % 10;\n//百位： 数字 / 100 % 10\nint hundreds = number / 100  % 10;\n\n//输出结果\nSystem.out.println(ones);\nSystem.out.println(tens);\nSystem.out.println(hundreds);\n```\n\n公式：\n\n​\t获取任意一个数上每一位数。\n\n个位：数字 % 10\n\n十位：数字 / 10 % 10\n\n百位：数字 / 100 % 10\n\n千位：数字 / 1000 % 10\n\n。。。以此类推。。。\n\n# 3.隐式转换\n\n### 概念：\n\n​\t也叫自动类型提升。\n\n​\t就是把一个取值范围小的数据或者变量，赋值给另一个取值范围大的变量。此时不需要我们额外写代码单独实现，是程序自动帮我们完成的。\n\n### 简单记忆：\n\n​\t就是小的给大的，可以直接给。\n\n### 两种提升规则：\n\n* 取值范围小的，和取值范围大的进行运算，小的会先提升为大的，再进行运算。\n* byte、short、char三种类型的数据在运算的时候，都会直接先提升为int，然后再进行运算。\n\n### 取值范围从小到大的关系：\n\n​\tbyte short int long float double\n\n# 4.隐式转换的练习\n\n请看下面案例是否有误，如果有问题，请说出原因，如果没有问题，请说出运算过程和运算结果\n\n### 案例一：\n\n```java\ndouble d = 10;\nSystem.out.println(d);//10.0\n```\n\n解释：\n\n​\t10是整数，整数默认是int类型的。\n\n​\t而在取值范围的顺序中：byte short int long float double\n\n​\t在赋值的时候把一个int类型的赋值给了一个double类型的。把一个小的赋值给一个大的是可以直接给的。\n\n\n\n### 案例二：\n\n```java\nbyte b = 100;\nint i = b;//可以成功赋值\n```\n\n解释：\n\n​\t因为byte的取值范围是小的，int的取值范围是大的，在底层进行了隐式转换，不需要我们额外写代码单独实现，是可以直接赋值。\n\n\n\n### 案例三：\n\n```java\nint i = 10;\nlong n = 20L;\n??? result = i + n;\n问变量result是什么类型的？\n```\n\n解释：\n\n​\t变量i是int类型的，变量n是long类型的。\n\n​\t而在取值范围的顺序中：byte short int long float double\n\n​\t变量i里面的值会自动提升为long类型的，最终的结果其实就是两个long相加，那么最终的result是long类型的。\n\n### 案例四：\n\n```java\nint i = 10;\nlong n = 100L;\ndouble d = 20.0;\n??? result = i + n + d;\n问变量result是什么类型的？\n```\n\n解释：\n\n​\t变量i是int类型，变量n是long类型，变量d是double类型。\n\n​\t而在取值范围的顺序中：byte short int long float double\n\n​\t所以变量i和变量n里面的值在参与运算的时候，都会进行类型提升，变成double。\n\n​\t最终其实就是三个double进行相加，那么最终的结果就是double类型的。\n\n\n\n\n\n### 案例五：\n\n```java\nbyte b1 = 10;\nbyte b2 = 20;\n??? result = b1 + b2;//int\n问变量result是什么类型的？\n```\n\n解释：\n\n​\t因为b1和b2都是byte类型的。所以在参与计算的时候，变量b1和变量b2里面的值都会自动提升为int类型的。最终其实就是两个int类型的相加，最终结果也是int类型的。\n\n\n\n### 案例六：\n\n```java\nbyte b = 10;\nshort s = 20;\nlong n = 100L;\n??? result = b + s + n;\n问变量result是什么类型的？long\n```\n\n解释：\n\n​\t变量b是byte类型的，变量s是short类型的，变量n是long类型的。\n\n​\tbyte，short，char类型的变量在参与运算的时候，变量里面的值会直接先提升为int。\n\n第一步：变量b和变量s里面的值会先提升为int参与运算。\n\n​\t\tint + int + long\n\n第二步：而long类型的取值范围是大于int的取值范围的。\n\n​\t\t所以变量b和变量s里面的值会再次提升为long。\n\n​\t\tlong + long + long。\n\n所以最终结果是long类型的。\n\n# 5.强制转换\n\n### 概念：\n\n​\t如果要把一个取值范围大的数据或者变量赋值给另一个取值范围小的变量。是不允许直接操作。\n\n​\t如果一定要这么干，就需要加入强制转换。\n\n### 书写格式：\n\n​\t目标数据类型 变量名 = （目标数据类型）被强转的数据；\n\n简单理解：\n\n​\t要转成什么类型的，那么就在小括号中写什么类型就可以了。\n\n案例：\n\n```java\npublic class OperatorDemo2 {\n    public static void main(String[] args) {\n        double a = 12.3;\n        int b = (int) a;\n        System.out.println(b);//12\n    }\n}\n```\n\n注意点：\n\n​\t强制转换有可能会导致数据发生错误。（数据的精度丢失）\n\n# 6.字符串的+操作\n\n### 核心技巧：\n\n* 当+操作中出现字符串时，此时就是字符串的连接符，会将前后的数据进行拼接，并产生一个新的字符串。\n* 当连续进行+操作时，从左到右逐个执行的。\n\n# 7.字符串相加的练习：\n\n案例1：\n\n```java\n1 + \"abc\" + 1\n```\n\n结果：\"1abc1\"\n\n解释：\n\n​\t第一步： 1 + \"abc\"。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串\"1abc\"\n\n​\t第二步：  \"1abc\" + 1。这个过程中，有字符串参与的，所以做的也是拼接操作，产生一个新的字符串\"1abc1\"\n\n\n\n案例2：\n\n```java\n1 + 2 + \"abc\" + 2 + 1\n```\n\n结果：“3abc21”\n\n解释：\n\n​\t第一步：1 + 2 。在这个过程中，没有字符串参与的，所以做的是加法运算，结果为3。\n\n​\t第二步：3 + \"abc\"。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串\"3abc\"。\n\n​\t第三步：\"3abc\" + 2。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串\"3abc2\"。\n\n​\t第四步：\"3abc2\" + 1。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串“3abc21”\n\n\n\n案例3：\n\n```java\nString name = \"黑默丁格\";\nSystem.out.println(\"我的名字是\" + name);\n```\n\n结果： 我的名字是黑默丁格\n\n解释：当字符串跟变量相加的时候，实际上是跟变量里面的值进行拼接。\n\n# 8.字符的+操作\n\n### 规则：\n\n​\t当+操作中出现了字符，会拿着字符到计算机内置的ASCII码表中去查对应的数字，然后再进行计算。\n\n### 案例：\n\n```java\nchar c = 'a';\nint result = c + 0;\nSystem.out.println(result);//97\n```\n\nASCII码表中：\n\n​\t'a'   -----    97\n\n​\t'A'   -----    65\n\n# 9.算术运算符的总结\n\n分类：\n\n```java\n+ - * / %  这些操作跟小学数学几乎是一模一样的。\n```\n\n注意点：\n\n* / 和 % 的区别：他们两个都是做除法运算，/取结果的商。% 取结果的余数。\n* 整数操作只能得到整数，如果想要得到小数，必须有浮点数参与运算。\n\n算术运算符的高级用法：\n\n是以+为例进行的讲解，其余减法，乘法，除法的运算规则也是一样的。\n\n特例：字符串只有+操作，没有其他操作。\n\n# 10.自增自减运算符\n\n### 分类：\n\n```java\n++  自增运算符\n--  自减运算符\n```\n\n++：就是把变量里面的值+1\n\n--：就是把变量里面的值-1\n\n### 使用方式：\n\n* 放在变量的前面，我们叫做先++。 比如：++a\n* 放在变量的后面，我们叫做后++。 比如：a++\n\n### 注意点：\n\n​\t不管是先++，还是后++。单独写在一行的时候，运算结果是一模一样的。\n\n### 案例：\n\n```java\n//++\nint a = 10;\na++;//就是让变量a里面的值 + 1\nSystem.out.println(a);//11\n++a;//就是让变量a里面的值 + 1\nSystem.out.println(a);//12\n```\n\n### 自增自减运算符的应用场景：\n\n某些情况下，变量需要进行加1或者减1的时候使用。\n\n比如：过生日多一岁，就用到了自增运算符。\n\n比如：购物商场中，选择商品数量，也用到了自增或者自减运算符。\n\n比如：统计很多数据中，有多少个数据满足要求，也用到了自增运算符。\n\n# 11.赋值运算符\n\n最为常用的：\t=\n\n运算过程：就是把等号右边的结果赋值给左边的变量\n\n案例：\n\n```java\npublic class OperatorDemo6 {\n    public static void main(String[] args) {\n        //1.最为简单的赋值运算符用法\n        int a = 10;//就是把10赋值给变量a\n        System.out.println(a);\n\n        //2.如果等号右边需要进行计算。\n        int b = 20;\n        int c = a + b;//先计算等号右边的，把计算的结果赋值给左边的变量\n        System.out.println(c);\n\n        //3.特殊的用法\n        a = a + 10;//先计算等号右边的，把计算的结果赋值给左边的变量\n        System.out.println(a);//20\n    }\n}\n```\n\n# 12.扩展赋值运算符\n\n### 分类：\n\n​\t+=、-=、*=、/=、%=\n\n### 运算规则：\n\n​\t就是把左边跟右边进行运算，把最终的结果赋值给左边，对右边没有任何影响。\n\n### 案例：\n\n```java\npublic class OperatorDemo7 {\n    public static void main(String[] args) {\n        //扩展赋值运算符\n        int a = 10;\n        int b = 20;\n        a += b;//把左边和右边相加，再把最终的结果赋值给左边，对右边没有任何影响\n        // 相当于 a = a + b;\n        System.out.println(a);//30\n        System.out.println(b);//20\n    }\n}\n```\n\n### 注意点：\n\n​\t扩展的赋值运算符中隐层还包含了一个强制转换。\n\n以+=为例。\n\na += b ;实际上相当于 a = (byte)(a + b);\n\n```java\npublic class OperatorDemo8 {\n    public static void main(String[] args) {\n        byte a = 10;\n        byte b = 20;\n        //a += b;\n        a = (byte)(a + b);\n        System.out.println(a);//30\n    }\n}\n```\n\n# 13.关系运算符\n\n又叫比较运算符，其实就是拿着左边跟右边进行了判断而已。\n\n### 分类：\n\n| 符号 | 解释                                                         |\n| ---- | ------------------------------------------------------------ |\n| ==   | 就是判断左边跟右边是否相等，如果成立就是true，如果不成立就是false |\n| !=   | 就是判断左边跟右边是否不相等，如果成立就是true，如果不成立就是false |\n| >    | 就是判断左边是否大于右边，如果成立就是true，如果不成立就是false |\n| >=   | 就是判断左边是否大于等于右边，如果成立就是true，如果不成立就是false |\n| <    | 就是判断左边是否小于右边，如果成立就是true，如果不成立就是false |\n| <=   | 就是判断左边是否小于等于右边，如果成立就是true，如果不成立就是false |\n\n### 注意点：\n\n* 关系运算符最终的结果一定是布尔类型的。要么是true，要么是false\n* 在写==的时候，千万不要写成=\n\n# 14.逻辑运算符\n\n### & 和 | 的使用：\n\n&：逻辑与（而且）\n\n​\t两边都为真，结果才是真，只要有一个为假，那么结果就是假。\n\n|：逻辑或（或者）\n\n​\t两边都为假，结果才是假，只要有一个为真，那么结果就是真。\n\n代码示例：\n\n```java\n// &  //两边都是真，结果才是真。\nSystem.out.println(true & true);//true\nSystem.out.println(false & false);//false\nSystem.out.println(true & false);//false\nSystem.out.println(false & true);//false\n\nSystem.out.println(\"===================================\");\n\n// | 或  //两边都是假，结果才是假，如果有一个为真，那么结果就是真。\nSystem.out.println(true | true);//true\nSystem.out.println(false | false);//false\nSystem.out.println(true | false);//true\nSystem.out.println(false | true);//true\n```\n\n### 使用场景：\n\n​\t根据固定的场景，来选择使用&还是使用|\n\n* 用户登录。\n\n  用户名输入正确  & 密码输入正确\n\n  因为只有用户名和密码同时都正确了，那么才能成功登录，只要有一个失败了都不行。\n\n  使用技巧：\n\n  ​\t当我们需要同时满足左边和右边两种情况时，可以使用且\n\n* 丈母娘选女婿\n\n  丈母娘：女婿啊，你要么买个房子，要么买辆车。就可以把我的小棉袄穿走了。\n\n  买个房子 | 买辆车\n\n  两个条件中，只要满足其中一个，就可以穿走小棉袄了。\n\n  使用技巧：\n\n  ​\t当两种条件只要满足其中一个的时候，可以使用或\n\n### ^（异或）的使用：\n\n​\t在以后用的不多，了解一下即可。\n\n计算规则：如果两边相同，结果为false，如果两边不同，结果为true\n\n代码示例：\n\n```java\n//^   //左右不相同，结果才是true，左右相同结果就是false\nSystem.out.println(true ^ true);//false\nSystem.out.println(false ^ false);//false\nSystem.out.println(true ^ false);//true\nSystem.out.println(false ^ true);//true\n```\n\n### !（取反）的使用：\n\n​\t是取反，也叫做非。\n\n计算规则：false取反就是true，true取反就是false\n\n温馨提示：**取反最多只用一个。**\n\n代码示例：\n\n```java\nSystem.out.println(!false);//true\nSystem.out.println(!true);//false\n\nSystem.out.println(!!false);//注意点：取反最多只用一个。\n```\n\n# 15.短路逻辑运算符\n\n分类：  &&   ||\n\n### &&：\n\n​\t运算结果跟&是一模一样的，只不过具有短路效果。\n\n### ||：\n\n​\t运算结果跟|是一模一样的。只不过具有短路效果。\n\n### 逻辑核心：\n\n​\t当左边不能确定整个表达式的结果，右边才会执行。\n\n​\t当左边能确定整个表达式的结果，那么右边就不会执行了。从而提高了代码的运行效率。\n\n### 举例：\n\n* 用户登录案例\n\n  用户名正确  & 密码正确\n\n  如果使用一个&，不管用户名是否正确都会去验证密码。\n\n思考：\n\n​\t如果用户名输入正确了，那么我们再判断密码是否正确，是符合业务逻辑的。\n\n​\t但是如果用户名输入错误了，那么现在还有必要去比较密码吗？没有不要了。\n\n​\t如果使用一个&，那么左边和右边不管什么情况下，都会执行。\n\n\n\n​\t用户名正确  &&  密码正确\n\n​\t如果用户名输入正确了，那么才会验证密码是否输入正确。\n\n​\t如果用户名输入错误了，那么就不会再去验证密码是否正确，最终的结果直接为false。从而提高了程序运行的效率。\n\n* 丈母娘选女婿\n\n  有房 |  有车\n\n  首先先看看有没有房，发现有，然后再去看看有没有车。\n\n思考：\n\n​\t既然都有房子，干嘛还要去看车呢？多此一举。\n\n​\t有房 ||  有车\n\n​\t首先先看看有没有房，如果有，那么右边就不执行了。最终的结果直接为true。\n\n​\t如果没有房子，才会去看右边有没有车。\n\n### 总结：\n\n​\t&& 和 & 、||和|的运行结果都是一模一样的。\n\n​\t但是短路逻辑运算符可以提高程序的运行效率。\n\n### 建议：\n\n​\t最为常用： &&   ||   ！\n\n# 16.三元运算符\n\n又叫做：三元表达式或者问号冒号表达式。\n\n### 格式：\n\n​\t关系表达式 ？ 表达式1 ：表达式2 ；\n\n### 计算规则：\n\n* 计算关系表达式的值。\n* 如果关系表达式的值为真，那么执行表达式1。\n* 如果关系表达式的值为假，那么执行表达式2。\n\n### 注意点：\n\n​\t三元运算符的最终结果一定要被使用，要么赋值给一个变量，要么直接打印出来。\n\n### 案例：\n\n```java\npublic class OperatorDemo12 {\n    public static void main(String[] args) {\n        //需求：求两个数的较大值\n        int a = 10;\n        int b = 20;\n\n        //格式：关系表达式 ？ 表达式1 ： 表达式2 ；\n        //注意点：\n        //三元运算符的最终结果一定要被使用。\n        //要么赋值给一个变量，要么直接输出。\n       int max =  a > b ? a : b ;\n        System.out.println(max);\n\n\n        System.out.println(a > b ? a : b);\n    }\n}\n```\n\n# 17.练习1-两只老虎\n\n需求：\n\n​\t动物园里有两只老虎，两只老虎的体重分别为通过键盘录入获得，\n\n​\t请用程序实现判断两只老虎的体重是否相同。\n\n代码示例：\n\n```java\n//1.获取两只老虎的体重\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入第一只老虎的体重\");\nint weight1 = sc.nextInt();\nSystem.out.println(\"请输入第二只老虎的体重\");\nint weight2 = sc.nextInt();\n\n//2.利用三元运算符求出最终结果\nString result = weight1 == weight2 ? \"相同\" : \"不相同\";\nSystem.out.println(result);\n```\n\n# 18.练习2-求三个数的最大值\n\n需求：\n\n​\t一座寺庙里住着三个和尚，已知他们的身高分别为150cm、210cm、165cm。\n\n​\t请用程序实现获取这三个和尚的最高身高。\n\n代码示例：\n\n```java\n//1.定义三个变量记录和尚的身高\nint height1 = 150;\nint height2 = 210;\nint height3 = 165;\n\n//2.利用三元运算符求出两个数中的较大值。\nint temp = height1 > height2 ? height1 : height2;\n\n//3.求出最终的结果\nint max = temp > height3 ? temp : height3;\n\nSystem.out.println(max);\n```\n\n# 19.运算符的优先级\n\n在Java中涉及了很多的运算符，每一种运算符都有各自的优先级。但是这些优先级不需要记忆。\n\n咱们只要知道其中一点：\n\n​\t小括号优先于所有。\n\n\n\n\n\n\n\n\n\n","slug":"day03笔记","published":1,"updated":"2024-12-12T08:49:02.270Z","comments":1,"layout":"post","_id":"cm4ld1o860007qsto7s2p8vtk","content":"<h1 id=\"1-运算符和表达式\"><a href=\"#1-运算符和表达式\" class=\"headerlink\" title=\"1.运算符和表达式\"></a>1.运算符和表达式</h1><h3 id=\"运算符：\"><a href=\"#运算符：\" class=\"headerlink\" title=\"运算符：\"></a>运算符：</h3><p>​\t就是对常量或者变量进行操作的符号。</p>\n<p>​\t比如： +  -  *  &#x2F; </p>\n<h3 id=\"表达式：\"><a href=\"#表达式：\" class=\"headerlink\" title=\"表达式：\"></a>表达式：</h3><p>​\t用运算符把常量或者变量连接起来的，符合Java语法的式子就是表达式。</p>\n<p>​\t比如：a + b 这个整体就是表达式。</p>\n<p>​\t而其中+是算术运算符的一种，所以这个表达式也称之为算术表达式。</p>\n<h1 id=\"2-算术运算符\"><a href=\"#2-算术运算符\" class=\"headerlink\" title=\"2.算术运算符\"></a>2.算术运算符</h1><p>分类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ - * / %</span><br></pre></td></tr></table></figure>\n\n<p>运算特点：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ - * :跟小学数学中一模一样没有任何区别.</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/：</span><br><span class=\"line\"><span class=\"number\">1.</span>整数相除结果只能得到整除，如果结果想要是小数，必须要有小数参数。</span><br><span class=\"line\"><span class=\"number\">2.</span>小数直接参与运算，得到的结果有可能是不精确的。</span><br><span class=\"line\">案例：</span><br><span class=\"line\">System.out.println( <span class=\"number\">10</span> / <span class=\"number\">3</span>);<span class=\"comment\">//3</span></span><br><span class=\"line\">System.out.println(<span class=\"number\">10.0</span> / <span class=\"number\">3</span>);<span class=\"comment\">//3.3333333333333335</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%：取模、取余。</span><br><span class=\"line\">   他做的也是除法运算，只不过获取的是余数而已。</span><br><span class=\"line\">案例：</span><br><span class=\"line\">System.out.println(<span class=\"number\">10</span> % <span class=\"number\">2</span>);<span class=\"comment\">//0</span></span><br><span class=\"line\">System.out.println(<span class=\"number\">10</span> % <span class=\"number\">3</span>);<span class=\"comment\">//1</span></span><br><span class=\"line\">应用场景：</span><br><span class=\"line\"><span class=\"comment\">//可以利用取模来判断一个数是奇数还是偶数</span></span><br><span class=\"line\">System.out.println(<span class=\"number\">15</span> % <span class=\"number\">2</span>);<span class=\"comment\">//1  奇数</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"练习：数值拆分\"><a href=\"#练习：数值拆分\" class=\"headerlink\" title=\"练习：数值拆分\"></a>练习：数值拆分</h3><p>需求：键盘录入一个三位数，将其拆分为个位、十位、百位后，打印在控制台</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.键盘录入一个三位数</span></span><br><span class=\"line\"><span class=\"comment\">//导包 --- 创建对象 --- 接收数据</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入一个三位数&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> sc.nextInt();<span class=\"comment\">//123</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.获取这个三位数的个位、十位、百位并打印出来</span></span><br><span class=\"line\"><span class=\"comment\">//公式：</span></span><br><span class=\"line\"><span class=\"comment\">//针对于任意的一个数而言</span></span><br><span class=\"line\"><span class=\"comment\">//个位： 数字 % 10</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">ones</span> <span class=\"operator\">=</span> number % <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"comment\">//十位： 数字 / 10 % 10</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">tens</span> <span class=\"operator\">=</span> number / <span class=\"number\">10</span> % <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"comment\">//百位： 数字 / 100 % 10</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">hundreds</span> <span class=\"operator\">=</span> number / <span class=\"number\">100</span>  % <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//输出结果</span></span><br><span class=\"line\">System.out.println(ones);</span><br><span class=\"line\">System.out.println(tens);</span><br><span class=\"line\">System.out.println(hundreds);</span><br></pre></td></tr></table></figure>\n\n<p>公式：</p>\n<p>​\t获取任意一个数上每一位数。</p>\n<p>个位：数字 % 10</p>\n<p>十位：数字 &#x2F; 10 % 10</p>\n<p>百位：数字 &#x2F; 100 % 10</p>\n<p>千位：数字 &#x2F; 1000 % 10</p>\n<p>。。。以此类推。。。</p>\n<h1 id=\"3-隐式转换\"><a href=\"#3-隐式转换\" class=\"headerlink\" title=\"3.隐式转换\"></a>3.隐式转换</h1><h3 id=\"概念：\"><a href=\"#概念：\" class=\"headerlink\" title=\"概念：\"></a>概念：</h3><p>​\t也叫自动类型提升。</p>\n<p>​\t就是把一个取值范围小的数据或者变量，赋值给另一个取值范围大的变量。此时不需要我们额外写代码单独实现，是程序自动帮我们完成的。</p>\n<h3 id=\"简单记忆：\"><a href=\"#简单记忆：\" class=\"headerlink\" title=\"简单记忆：\"></a>简单记忆：</h3><p>​\t就是小的给大的，可以直接给。</p>\n<h3 id=\"两种提升规则：\"><a href=\"#两种提升规则：\" class=\"headerlink\" title=\"两种提升规则：\"></a>两种提升规则：</h3><ul>\n<li>取值范围小的，和取值范围大的进行运算，小的会先提升为大的，再进行运算。</li>\n<li>byte、short、char三种类型的数据在运算的时候，都会直接先提升为int，然后再进行运算。</li>\n</ul>\n<h3 id=\"取值范围从小到大的关系：\"><a href=\"#取值范围从小到大的关系：\" class=\"headerlink\" title=\"取值范围从小到大的关系：\"></a>取值范围从小到大的关系：</h3><p>​\tbyte short int long float double</p>\n<h1 id=\"4-隐式转换的练习\"><a href=\"#4-隐式转换的练习\" class=\"headerlink\" title=\"4.隐式转换的练习\"></a>4.隐式转换的练习</h1><p>请看下面案例是否有误，如果有问题，请说出原因，如果没有问题，请说出运算过程和运算结果</p>\n<h3 id=\"案例一：\"><a href=\"#案例一：\" class=\"headerlink\" title=\"案例一：\"></a>案例一：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">double</span> <span class=\"variable\">d</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">System.out.println(d);<span class=\"comment\">//10.0</span></span><br></pre></td></tr></table></figure>\n\n<p>解释：</p>\n<p>​\t10是整数，整数默认是int类型的。</p>\n<p>​\t而在取值范围的顺序中：byte short int long float double</p>\n<p>​\t在赋值的时候把一个int类型的赋值给了一个double类型的。把一个小的赋值给一个大的是可以直接给的。</p>\n<h3 id=\"案例二：\"><a href=\"#案例二：\" class=\"headerlink\" title=\"案例二：\"></a>案例二：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> b;<span class=\"comment\">//可以成功赋值</span></span><br></pre></td></tr></table></figure>\n\n<p>解释：</p>\n<p>​\t因为byte的取值范围是小的，int的取值范围是大的，在底层进行了隐式转换，不需要我们额外写代码单独实现，是可以直接赋值。</p>\n<h3 id=\"案例三：\"><a href=\"#案例三：\" class=\"headerlink\" title=\"案例三：\"></a>案例三：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span> <span class=\"number\">20L</span>;</span><br><span class=\"line\">??? result = i + n;</span><br><span class=\"line\">问变量result是什么类型的？</span><br></pre></td></tr></table></figure>\n\n<p>解释：</p>\n<p>​\t变量i是int类型的，变量n是long类型的。</p>\n<p>​\t而在取值范围的顺序中：byte short int long float double</p>\n<p>​\t变量i里面的值会自动提升为long类型的，最终的结果其实就是两个long相加，那么最终的result是long类型的。</p>\n<h3 id=\"案例四：\"><a href=\"#案例四：\" class=\"headerlink\" title=\"案例四：\"></a>案例四：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span> <span class=\"number\">100L</span>;</span><br><span class=\"line\"><span class=\"type\">double</span> <span class=\"variable\">d</span> <span class=\"operator\">=</span> <span class=\"number\">20.0</span>;</span><br><span class=\"line\">??? result = i + n + d;</span><br><span class=\"line\">问变量result是什么类型的？</span><br></pre></td></tr></table></figure>\n\n<p>解释：</p>\n<p>​\t变量i是int类型，变量n是long类型，变量d是double类型。</p>\n<p>​\t而在取值范围的顺序中：byte short int long float double</p>\n<p>​\t所以变量i和变量n里面的值在参与运算的时候，都会进行类型提升，变成double。</p>\n<p>​\t最终其实就是三个double进行相加，那么最终的结果就是double类型的。</p>\n<h3 id=\"案例五：\"><a href=\"#案例五：\" class=\"headerlink\" title=\"案例五：\"></a>案例五：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b1</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b2</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">??? result = b1 + b2;<span class=\"comment\">//int</span></span><br><span class=\"line\">问变量result是什么类型的？</span><br></pre></td></tr></table></figure>\n\n<p>解释：</p>\n<p>​\t因为b1和b2都是byte类型的。所以在参与计算的时候，变量b1和变量b2里面的值都会自动提升为int类型的。最终其实就是两个int类型的相加，最终结果也是int类型的。</p>\n<h3 id=\"案例六：\"><a href=\"#案例六：\" class=\"headerlink\" title=\"案例六：\"></a>案例六：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">short</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span> <span class=\"number\">100L</span>;</span><br><span class=\"line\">??? result = b + s + n;</span><br><span class=\"line\">问变量result是什么类型的？<span class=\"type\">long</span></span><br></pre></td></tr></table></figure>\n\n<p>解释：</p>\n<p>​\t变量b是byte类型的，变量s是short类型的，变量n是long类型的。</p>\n<p>​\tbyte，short，char类型的变量在参与运算的时候，变量里面的值会直接先提升为int。</p>\n<p>第一步：变量b和变量s里面的值会先提升为int参与运算。</p>\n<p>​\t\tint + int + long</p>\n<p>第二步：而long类型的取值范围是大于int的取值范围的。</p>\n<p>​\t\t所以变量b和变量s里面的值会再次提升为long。</p>\n<p>​\t\tlong + long + long。</p>\n<p>所以最终结果是long类型的。</p>\n<h1 id=\"5-强制转换\"><a href=\"#5-强制转换\" class=\"headerlink\" title=\"5.强制转换\"></a>5.强制转换</h1><h3 id=\"概念：-1\"><a href=\"#概念：-1\" class=\"headerlink\" title=\"概念：\"></a>概念：</h3><p>​\t如果要把一个取值范围大的数据或者变量赋值给另一个取值范围小的变量。是不允许直接操作。</p>\n<p>​\t如果一定要这么干，就需要加入强制转换。</p>\n<h3 id=\"书写格式：\"><a href=\"#书写格式：\" class=\"headerlink\" title=\"书写格式：\"></a>书写格式：</h3><p>​\t目标数据类型 变量名 &#x3D; （目标数据类型）被强转的数据；</p>\n<p>简单理解：</p>\n<p>​\t要转成什么类型的，那么就在小括号中写什么类型就可以了。</p>\n<p>案例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OperatorDemo2</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">12.3</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> (<span class=\"type\">int</span>) a;</span><br><span class=\"line\">        System.out.println(b);<span class=\"comment\">//12</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意点：</p>\n<p>​\t强制转换有可能会导致数据发生错误。（数据的精度丢失）</p>\n<h1 id=\"6-字符串的-操作\"><a href=\"#6-字符串的-操作\" class=\"headerlink\" title=\"6.字符串的+操作\"></a>6.字符串的+操作</h1><h3 id=\"核心技巧：\"><a href=\"#核心技巧：\" class=\"headerlink\" title=\"核心技巧：\"></a>核心技巧：</h3><ul>\n<li>当+操作中出现字符串时，此时就是字符串的连接符，会将前后的数据进行拼接，并产生一个新的字符串。</li>\n<li>当连续进行+操作时，从左到右逐个执行的。</li>\n</ul>\n<h1 id=\"7-字符串相加的练习：\"><a href=\"#7-字符串相加的练习：\" class=\"headerlink\" title=\"7.字符串相加的练习：\"></a>7.字符串相加的练习：</h1><p>案例1：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> + <span class=\"string\">&quot;abc&quot;</span> + <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p>结果：”1abc1”</p>\n<p>解释：</p>\n<p>​\t第一步： 1 + “abc”。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串”1abc”</p>\n<p>​\t第二步：  “1abc” + 1。这个过程中，有字符串参与的，所以做的也是拼接操作，产生一个新的字符串”1abc1”</p>\n<p>案例2：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> + <span class=\"number\">2</span> + <span class=\"string\">&quot;abc&quot;</span> + <span class=\"number\">2</span> + <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p>结果：“3abc21”</p>\n<p>解释：</p>\n<p>​\t第一步：1 + 2 。在这个过程中，没有字符串参与的，所以做的是加法运算，结果为3。</p>\n<p>​\t第二步：3 + “abc”。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串”3abc”。</p>\n<p>​\t第三步：”3abc” + 2。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串”3abc2”。</p>\n<p>​\t第四步：”3abc2” + 1。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串“3abc21”</p>\n<p>案例3：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;黑默丁格&quot;</span>;</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;我的名字是&quot;</span> + name);</span><br></pre></td></tr></table></figure>\n\n<p>结果： 我的名字是黑默丁格</p>\n<p>解释：当字符串跟变量相加的时候，实际上是跟变量里面的值进行拼接。</p>\n<h1 id=\"8-字符的-操作\"><a href=\"#8-字符的-操作\" class=\"headerlink\" title=\"8.字符的+操作\"></a>8.字符的+操作</h1><h3 id=\"规则：\"><a href=\"#规则：\" class=\"headerlink\" title=\"规则：\"></a>规则：</h3><p>​\t当+操作中出现了字符，会拿着字符到计算机内置的ASCII码表中去查对应的数字，然后再进行计算。</p>\n<h3 id=\"案例：\"><a href=\"#案例：\" class=\"headerlink\" title=\"案例：\"></a>案例：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">char</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> c + <span class=\"number\">0</span>;</span><br><span class=\"line\">System.out.println(result);<span class=\"comment\">//97</span></span><br></pre></td></tr></table></figure>\n\n<p>ASCII码表中：</p>\n<p>​\t‘a’   —–    97</p>\n<p>​\t‘A’   —–    65</p>\n<h1 id=\"9-算术运算符的总结\"><a href=\"#9-算术运算符的总结\" class=\"headerlink\" title=\"9.算术运算符的总结\"></a>9.算术运算符的总结</h1><p>分类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ - * / %  这些操作跟小学数学几乎是一模一样的。</span><br></pre></td></tr></table></figure>\n\n<p>注意点：</p>\n<ul>\n<li>&#x2F; 和 % 的区别：他们两个都是做除法运算，&#x2F;取结果的商。% 取结果的余数。</li>\n<li>整数操作只能得到整数，如果想要得到小数，必须有浮点数参与运算。</li>\n</ul>\n<p>算术运算符的高级用法：</p>\n<p>是以+为例进行的讲解，其余减法，乘法，除法的运算规则也是一样的。</p>\n<p>特例：字符串只有+操作，没有其他操作。</p>\n<h1 id=\"10-自增自减运算符\"><a href=\"#10-自增自减运算符\" class=\"headerlink\" title=\"10.自增自减运算符\"></a>10.自增自减运算符</h1><h3 id=\"分类：\"><a href=\"#分类：\" class=\"headerlink\" title=\"分类：\"></a>分类：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">++  自增运算符</span><br><span class=\"line\">--  自减运算符</span><br></pre></td></tr></table></figure>\n\n<p>++：就是把变量里面的值+1</p>\n<p>–：就是把变量里面的值-1</p>\n<h3 id=\"使用方式：\"><a href=\"#使用方式：\" class=\"headerlink\" title=\"使用方式：\"></a>使用方式：</h3><ul>\n<li>放在变量的前面，我们叫做先++。 比如：++a</li>\n<li>放在变量的后面，我们叫做后++。 比如：a++</li>\n</ul>\n<h3 id=\"注意点：\"><a href=\"#注意点：\" class=\"headerlink\" title=\"注意点：\"></a>注意点：</h3><p>​\t不管是先++，还是后++。单独写在一行的时候，运算结果是一模一样的。</p>\n<h3 id=\"案例：-1\"><a href=\"#案例：-1\" class=\"headerlink\" title=\"案例：\"></a>案例：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//++</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">a++;<span class=\"comment\">//就是让变量a里面的值 + 1</span></span><br><span class=\"line\">System.out.println(a);<span class=\"comment\">//11</span></span><br><span class=\"line\">++a;<span class=\"comment\">//就是让变量a里面的值 + 1</span></span><br><span class=\"line\">System.out.println(a);<span class=\"comment\">//12</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自增自减运算符的应用场景：\"><a href=\"#自增自减运算符的应用场景：\" class=\"headerlink\" title=\"自增自减运算符的应用场景：\"></a>自增自减运算符的应用场景：</h3><p>某些情况下，变量需要进行加1或者减1的时候使用。</p>\n<p>比如：过生日多一岁，就用到了自增运算符。</p>\n<p>比如：购物商场中，选择商品数量，也用到了自增或者自减运算符。</p>\n<p>比如：统计很多数据中，有多少个数据满足要求，也用到了自增运算符。</p>\n<h1 id=\"11-赋值运算符\"><a href=\"#11-赋值运算符\" class=\"headerlink\" title=\"11.赋值运算符\"></a>11.赋值运算符</h1><p>最为常用的：\t&#x3D;</p>\n<p>运算过程：就是把等号右边的结果赋值给左边的变量</p>\n<p>案例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OperatorDemo6</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.最为简单的赋值运算符用法</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;<span class=\"comment\">//就是把10赋值给变量a</span></span><br><span class=\"line\">        System.out.println(a);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.如果等号右边需要进行计算。</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> a + b;<span class=\"comment\">//先计算等号右边的，把计算的结果赋值给左边的变量</span></span><br><span class=\"line\">        System.out.println(c);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.特殊的用法</span></span><br><span class=\"line\">        a = a + <span class=\"number\">10</span>;<span class=\"comment\">//先计算等号右边的，把计算的结果赋值给左边的变量</span></span><br><span class=\"line\">        System.out.println(a);<span class=\"comment\">//20</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"12-扩展赋值运算符\"><a href=\"#12-扩展赋值运算符\" class=\"headerlink\" title=\"12.扩展赋值运算符\"></a>12.扩展赋值运算符</h1><h3 id=\"分类：-1\"><a href=\"#分类：-1\" class=\"headerlink\" title=\"分类：\"></a>分类：</h3><p>​\t+&#x3D;、-&#x3D;、*&#x3D;、&#x2F;&#x3D;、%&#x3D;</p>\n<h3 id=\"运算规则：\"><a href=\"#运算规则：\" class=\"headerlink\" title=\"运算规则：\"></a>运算规则：</h3><p>​\t就是把左边跟右边进行运算，把最终的结果赋值给左边，对右边没有任何影响。</p>\n<h3 id=\"案例：-2\"><a href=\"#案例：-2\" class=\"headerlink\" title=\"案例：\"></a>案例：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OperatorDemo7</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//扩展赋值运算符</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">        a += b;<span class=\"comment\">//把左边和右边相加，再把最终的结果赋值给左边，对右边没有任何影响</span></span><br><span class=\"line\">        <span class=\"comment\">// 相当于 a = a + b;</span></span><br><span class=\"line\">        System.out.println(a);<span class=\"comment\">//30</span></span><br><span class=\"line\">        System.out.println(b);<span class=\"comment\">//20</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注意点：-1\"><a href=\"#注意点：-1\" class=\"headerlink\" title=\"注意点：\"></a>注意点：</h3><p>​\t扩展的赋值运算符中隐层还包含了一个强制转换。</p>\n<p>以+&#x3D;为例。</p>\n<p>a +&#x3D; b ;实际上相当于 a &#x3D; (byte)(a + b);</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OperatorDemo8</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">byte</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">        <span class=\"type\">byte</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">        <span class=\"comment\">//a += b;</span></span><br><span class=\"line\">        a = (<span class=\"type\">byte</span>)(a + b);</span><br><span class=\"line\">        System.out.println(a);<span class=\"comment\">//30</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"13-关系运算符\"><a href=\"#13-关系运算符\" class=\"headerlink\" title=\"13.关系运算符\"></a>13.关系运算符</h1><p>又叫比较运算符，其实就是拿着左边跟右边进行了判断而已。</p>\n<h3 id=\"分类：-2\"><a href=\"#分类：-2\" class=\"headerlink\" title=\"分类：\"></a>分类：</h3><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x3D;&#x3D;</td>\n<td>就是判断左边跟右边是否相等，如果成立就是true，如果不成立就是false</td>\n</tr>\n<tr>\n<td>!&#x3D;</td>\n<td>就是判断左边跟右边是否不相等，如果成立就是true，如果不成立就是false</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>就是判断左边是否大于右边，如果成立就是true，如果不成立就是false</td>\n</tr>\n<tr>\n<td>&gt;&#x3D;</td>\n<td>就是判断左边是否大于等于右边，如果成立就是true，如果不成立就是false</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>就是判断左边是否小于右边，如果成立就是true，如果不成立就是false</td>\n</tr>\n<tr>\n<td>&lt;&#x3D;</td>\n<td>就是判断左边是否小于等于右边，如果成立就是true，如果不成立就是false</td>\n</tr>\n</tbody></table>\n<h3 id=\"注意点：-2\"><a href=\"#注意点：-2\" class=\"headerlink\" title=\"注意点：\"></a>注意点：</h3><ul>\n<li>关系运算符最终的结果一定是布尔类型的。要么是true，要么是false</li>\n<li>在写&#x3D;&#x3D;的时候，千万不要写成&#x3D;</li>\n</ul>\n<h1 id=\"14-逻辑运算符\"><a href=\"#14-逻辑运算符\" class=\"headerlink\" title=\"14.逻辑运算符\"></a>14.逻辑运算符</h1><h3 id=\"和-的使用：\"><a href=\"#和-的使用：\" class=\"headerlink\" title=\"&amp; 和 | 的使用：\"></a>&amp; 和 | 的使用：</h3><p>&amp;：逻辑与（而且）</p>\n<p>​\t两边都为真，结果才是真，只要有一个为假，那么结果就是假。</p>\n<p>|：逻辑或（或者）</p>\n<p>​\t两边都为假，结果才是假，只要有一个为真，那么结果就是真。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// &amp;  //两边都是真，结果才是真。</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">true</span> &amp; <span class=\"literal\">true</span>);<span class=\"comment\">//true</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">false</span> &amp; <span class=\"literal\">false</span>);<span class=\"comment\">//false</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">true</span> &amp; <span class=\"literal\">false</span>);<span class=\"comment\">//false</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">false</span> &amp; <span class=\"literal\">true</span>);<span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;===================================&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// | 或  //两边都是假，结果才是假，如果有一个为真，那么结果就是真。</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">true</span> | <span class=\"literal\">true</span>);<span class=\"comment\">//true</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">false</span> | <span class=\"literal\">false</span>);<span class=\"comment\">//false</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">true</span> | <span class=\"literal\">false</span>);<span class=\"comment\">//true</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">false</span> | <span class=\"literal\">true</span>);<span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用场景：\"><a href=\"#使用场景：\" class=\"headerlink\" title=\"使用场景：\"></a>使用场景：</h3><p>​\t根据固定的场景，来选择使用&amp;还是使用|</p>\n<ul>\n<li><p>用户登录。</p>\n<p>用户名输入正确  &amp; 密码输入正确</p>\n<p>因为只有用户名和密码同时都正确了，那么才能成功登录，只要有一个失败了都不行。</p>\n<p>使用技巧：</p>\n<p>​\t当我们需要同时满足左边和右边两种情况时，可以使用且</p>\n</li>\n<li><p>丈母娘选女婿</p>\n<p>丈母娘：女婿啊，你要么买个房子，要么买辆车。就可以把我的小棉袄穿走了。</p>\n<p>买个房子 | 买辆车</p>\n<p>两个条件中，只要满足其中一个，就可以穿走小棉袄了。</p>\n<p>使用技巧：</p>\n<p>​\t当两种条件只要满足其中一个的时候，可以使用或</p>\n</li>\n</ul>\n<h3 id=\"（异或）的使用：\"><a href=\"#（异或）的使用：\" class=\"headerlink\" title=\"^（异或）的使用：\"></a>^（异或）的使用：</h3><p>​\t在以后用的不多，了解一下即可。</p>\n<p>计算规则：如果两边相同，结果为false，如果两边不同，结果为true</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//^   //左右不相同，结果才是true，左右相同结果就是false</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">true</span> ^ <span class=\"literal\">true</span>);<span class=\"comment\">//false</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">false</span> ^ <span class=\"literal\">false</span>);<span class=\"comment\">//false</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">true</span> ^ <span class=\"literal\">false</span>);<span class=\"comment\">//true</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">false</span> ^ <span class=\"literal\">true</span>);<span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"（取反）的使用：\"><a href=\"#（取反）的使用：\" class=\"headerlink\" title=\"!（取反）的使用：\"></a>!（取反）的使用：</h3><p>​\t是取反，也叫做非。</p>\n<p>计算规则：false取反就是true，true取反就是false</p>\n<p>温馨提示：<strong>取反最多只用一个。</strong></p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.out.println(!<span class=\"literal\">false</span>);<span class=\"comment\">//true</span></span><br><span class=\"line\">System.out.println(!<span class=\"literal\">true</span>);<span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(!!<span class=\"literal\">false</span>);<span class=\"comment\">//注意点：取反最多只用一个。</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"15-短路逻辑运算符\"><a href=\"#15-短路逻辑运算符\" class=\"headerlink\" title=\"15.短路逻辑运算符\"></a>15.短路逻辑运算符</h1><p>分类：  &amp;&amp;   ||</p>\n<h3 id=\"：\"><a href=\"#：\" class=\"headerlink\" title=\"&amp;&amp;：\"></a>&amp;&amp;：</h3><p>​\t运算结果跟&amp;是一模一样的，只不过具有短路效果。</p>\n<h3 id=\"：-1\"><a href=\"#：-1\" class=\"headerlink\" title=\"||：\"></a>||：</h3><p>​\t运算结果跟|是一模一样的。只不过具有短路效果。</p>\n<h3 id=\"逻辑核心：\"><a href=\"#逻辑核心：\" class=\"headerlink\" title=\"逻辑核心：\"></a>逻辑核心：</h3><p>​\t当左边不能确定整个表达式的结果，右边才会执行。</p>\n<p>​\t当左边能确定整个表达式的结果，那么右边就不会执行了。从而提高了代码的运行效率。</p>\n<h3 id=\"举例：\"><a href=\"#举例：\" class=\"headerlink\" title=\"举例：\"></a>举例：</h3><ul>\n<li><p>用户登录案例</p>\n<p>用户名正确  &amp; 密码正确</p>\n<p>如果使用一个&amp;，不管用户名是否正确都会去验证密码。</p>\n</li>\n</ul>\n<p>思考：</p>\n<p>​\t如果用户名输入正确了，那么我们再判断密码是否正确，是符合业务逻辑的。</p>\n<p>​\t但是如果用户名输入错误了，那么现在还有必要去比较密码吗？没有不要了。</p>\n<p>​\t如果使用一个&amp;，那么左边和右边不管什么情况下，都会执行。</p>\n<p>​\t用户名正确  &amp;&amp;  密码正确</p>\n<p>​\t如果用户名输入正确了，那么才会验证密码是否输入正确。</p>\n<p>​\t如果用户名输入错误了，那么就不会再去验证密码是否正确，最终的结果直接为false。从而提高了程序运行的效率。</p>\n<ul>\n<li><p>丈母娘选女婿</p>\n<p>有房 |  有车</p>\n<p>首先先看看有没有房，发现有，然后再去看看有没有车。</p>\n</li>\n</ul>\n<p>思考：</p>\n<p>​\t既然都有房子，干嘛还要去看车呢？多此一举。</p>\n<p>​\t有房 ||  有车</p>\n<p>​\t首先先看看有没有房，如果有，那么右边就不执行了。最终的结果直接为true。</p>\n<p>​\t如果没有房子，才会去看右边有没有车。</p>\n<h3 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h3><p>​\t&amp;&amp; 和 &amp; 、||和|的运行结果都是一模一样的。</p>\n<p>​\t但是短路逻辑运算符可以提高程序的运行效率。</p>\n<h3 id=\"建议：\"><a href=\"#建议：\" class=\"headerlink\" title=\"建议：\"></a>建议：</h3><p>​\t最为常用： &amp;&amp;   ||   ！</p>\n<h1 id=\"16-三元运算符\"><a href=\"#16-三元运算符\" class=\"headerlink\" title=\"16.三元运算符\"></a>16.三元运算符</h1><p>又叫做：三元表达式或者问号冒号表达式。</p>\n<h3 id=\"格式：\"><a href=\"#格式：\" class=\"headerlink\" title=\"格式：\"></a>格式：</h3><p>​\t关系表达式 ？ 表达式1 ：表达式2 ；</p>\n<h3 id=\"计算规则：\"><a href=\"#计算规则：\" class=\"headerlink\" title=\"计算规则：\"></a>计算规则：</h3><ul>\n<li>计算关系表达式的值。</li>\n<li>如果关系表达式的值为真，那么执行表达式1。</li>\n<li>如果关系表达式的值为假，那么执行表达式2。</li>\n</ul>\n<h3 id=\"注意点：-3\"><a href=\"#注意点：-3\" class=\"headerlink\" title=\"注意点：\"></a>注意点：</h3><p>​\t三元运算符的最终结果一定要被使用，要么赋值给一个变量，要么直接打印出来。</p>\n<h3 id=\"案例：-3\"><a href=\"#案例：-3\" class=\"headerlink\" title=\"案例：\"></a>案例：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OperatorDemo12</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//需求：求两个数的较大值</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//格式：关系表达式 ？ 表达式1 ： 表达式2 ；</span></span><br><span class=\"line\">        <span class=\"comment\">//注意点：</span></span><br><span class=\"line\">        <span class=\"comment\">//三元运算符的最终结果一定要被使用。</span></span><br><span class=\"line\">        <span class=\"comment\">//要么赋值给一个变量，要么直接输出。</span></span><br><span class=\"line\">       <span class=\"type\">int</span> <span class=\"variable\">max</span> <span class=\"operator\">=</span>  a &gt; b ? a : b ;</span><br><span class=\"line\">        System.out.println(max);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(a &gt; b ? a : b);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"17-练习1-两只老虎\"><a href=\"#17-练习1-两只老虎\" class=\"headerlink\" title=\"17.练习1-两只老虎\"></a>17.练习1-两只老虎</h1><p>需求：</p>\n<p>​\t动物园里有两只老虎，两只老虎的体重分别为通过键盘录入获得，</p>\n<p>​\t请用程序实现判断两只老虎的体重是否相同。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.获取两只老虎的体重</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入第一只老虎的体重&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">weight1</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入第二只老虎的体重&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">weight2</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.利用三元运算符求出最终结果</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> weight1 == weight2 ? <span class=\"string\">&quot;相同&quot;</span> : <span class=\"string\">&quot;不相同&quot;</span>;</span><br><span class=\"line\">System.out.println(result);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"18-练习2-求三个数的最大值\"><a href=\"#18-练习2-求三个数的最大值\" class=\"headerlink\" title=\"18.练习2-求三个数的最大值\"></a>18.练习2-求三个数的最大值</h1><p>需求：</p>\n<p>​\t一座寺庙里住着三个和尚，已知他们的身高分别为150cm、210cm、165cm。</p>\n<p>​\t请用程序实现获取这三个和尚的最高身高。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.定义三个变量记录和尚的身高</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">height1</span> <span class=\"operator\">=</span> <span class=\"number\">150</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">height2</span> <span class=\"operator\">=</span> <span class=\"number\">210</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">height3</span> <span class=\"operator\">=</span> <span class=\"number\">165</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.利用三元运算符求出两个数中的较大值。</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> height1 &gt; height2 ? height1 : height2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3.求出最终的结果</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">max</span> <span class=\"operator\">=</span> temp &gt; height3 ? temp : height3;</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(max);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"19-运算符的优先级\"><a href=\"#19-运算符的优先级\" class=\"headerlink\" title=\"19.运算符的优先级\"></a>19.运算符的优先级</h1><p>在Java中涉及了很多的运算符，每一种运算符都有各自的优先级。但是这些优先级不需要记忆。</p>\n<p>咱们只要知道其中一点：</p>\n<p>​\t小括号优先于所有。</p>\n","length":8317,"excerpt":"","more":"<h1 id=\"1-运算符和表达式\"><a href=\"#1-运算符和表达式\" class=\"headerlink\" title=\"1.运算符和表达式\"></a>1.运算符和表达式</h1><h3 id=\"运算符：\"><a href=\"#运算符：\" class=\"headerlink\" title=\"运算符：\"></a>运算符：</h3><p>​\t就是对常量或者变量进行操作的符号。</p>\n<p>​\t比如： +  -  *  &#x2F; </p>\n<h3 id=\"表达式：\"><a href=\"#表达式：\" class=\"headerlink\" title=\"表达式：\"></a>表达式：</h3><p>​\t用运算符把常量或者变量连接起来的，符合Java语法的式子就是表达式。</p>\n<p>​\t比如：a + b 这个整体就是表达式。</p>\n<p>​\t而其中+是算术运算符的一种，所以这个表达式也称之为算术表达式。</p>\n<h1 id=\"2-算术运算符\"><a href=\"#2-算术运算符\" class=\"headerlink\" title=\"2.算术运算符\"></a>2.算术运算符</h1><p>分类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ - * / %</span><br></pre></td></tr></table></figure>\n\n<p>运算特点：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ - * :跟小学数学中一模一样没有任何区别.</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/：</span><br><span class=\"line\"><span class=\"number\">1.</span>整数相除结果只能得到整除，如果结果想要是小数，必须要有小数参数。</span><br><span class=\"line\"><span class=\"number\">2.</span>小数直接参与运算，得到的结果有可能是不精确的。</span><br><span class=\"line\">案例：</span><br><span class=\"line\">System.out.println( <span class=\"number\">10</span> / <span class=\"number\">3</span>);<span class=\"comment\">//3</span></span><br><span class=\"line\">System.out.println(<span class=\"number\">10.0</span> / <span class=\"number\">3</span>);<span class=\"comment\">//3.3333333333333335</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%：取模、取余。</span><br><span class=\"line\">   他做的也是除法运算，只不过获取的是余数而已。</span><br><span class=\"line\">案例：</span><br><span class=\"line\">System.out.println(<span class=\"number\">10</span> % <span class=\"number\">2</span>);<span class=\"comment\">//0</span></span><br><span class=\"line\">System.out.println(<span class=\"number\">10</span> % <span class=\"number\">3</span>);<span class=\"comment\">//1</span></span><br><span class=\"line\">应用场景：</span><br><span class=\"line\"><span class=\"comment\">//可以利用取模来判断一个数是奇数还是偶数</span></span><br><span class=\"line\">System.out.println(<span class=\"number\">15</span> % <span class=\"number\">2</span>);<span class=\"comment\">//1  奇数</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"练习：数值拆分\"><a href=\"#练习：数值拆分\" class=\"headerlink\" title=\"练习：数值拆分\"></a>练习：数值拆分</h3><p>需求：键盘录入一个三位数，将其拆分为个位、十位、百位后，打印在控制台</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.键盘录入一个三位数</span></span><br><span class=\"line\"><span class=\"comment\">//导包 --- 创建对象 --- 接收数据</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入一个三位数&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> sc.nextInt();<span class=\"comment\">//123</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.获取这个三位数的个位、十位、百位并打印出来</span></span><br><span class=\"line\"><span class=\"comment\">//公式：</span></span><br><span class=\"line\"><span class=\"comment\">//针对于任意的一个数而言</span></span><br><span class=\"line\"><span class=\"comment\">//个位： 数字 % 10</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">ones</span> <span class=\"operator\">=</span> number % <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"comment\">//十位： 数字 / 10 % 10</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">tens</span> <span class=\"operator\">=</span> number / <span class=\"number\">10</span> % <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"comment\">//百位： 数字 / 100 % 10</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">hundreds</span> <span class=\"operator\">=</span> number / <span class=\"number\">100</span>  % <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//输出结果</span></span><br><span class=\"line\">System.out.println(ones);</span><br><span class=\"line\">System.out.println(tens);</span><br><span class=\"line\">System.out.println(hundreds);</span><br></pre></td></tr></table></figure>\n\n<p>公式：</p>\n<p>​\t获取任意一个数上每一位数。</p>\n<p>个位：数字 % 10</p>\n<p>十位：数字 &#x2F; 10 % 10</p>\n<p>百位：数字 &#x2F; 100 % 10</p>\n<p>千位：数字 &#x2F; 1000 % 10</p>\n<p>。。。以此类推。。。</p>\n<h1 id=\"3-隐式转换\"><a href=\"#3-隐式转换\" class=\"headerlink\" title=\"3.隐式转换\"></a>3.隐式转换</h1><h3 id=\"概念：\"><a href=\"#概念：\" class=\"headerlink\" title=\"概念：\"></a>概念：</h3><p>​\t也叫自动类型提升。</p>\n<p>​\t就是把一个取值范围小的数据或者变量，赋值给另一个取值范围大的变量。此时不需要我们额外写代码单独实现，是程序自动帮我们完成的。</p>\n<h3 id=\"简单记忆：\"><a href=\"#简单记忆：\" class=\"headerlink\" title=\"简单记忆：\"></a>简单记忆：</h3><p>​\t就是小的给大的，可以直接给。</p>\n<h3 id=\"两种提升规则：\"><a href=\"#两种提升规则：\" class=\"headerlink\" title=\"两种提升规则：\"></a>两种提升规则：</h3><ul>\n<li>取值范围小的，和取值范围大的进行运算，小的会先提升为大的，再进行运算。</li>\n<li>byte、short、char三种类型的数据在运算的时候，都会直接先提升为int，然后再进行运算。</li>\n</ul>\n<h3 id=\"取值范围从小到大的关系：\"><a href=\"#取值范围从小到大的关系：\" class=\"headerlink\" title=\"取值范围从小到大的关系：\"></a>取值范围从小到大的关系：</h3><p>​\tbyte short int long float double</p>\n<h1 id=\"4-隐式转换的练习\"><a href=\"#4-隐式转换的练习\" class=\"headerlink\" title=\"4.隐式转换的练习\"></a>4.隐式转换的练习</h1><p>请看下面案例是否有误，如果有问题，请说出原因，如果没有问题，请说出运算过程和运算结果</p>\n<h3 id=\"案例一：\"><a href=\"#案例一：\" class=\"headerlink\" title=\"案例一：\"></a>案例一：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">double</span> <span class=\"variable\">d</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">System.out.println(d);<span class=\"comment\">//10.0</span></span><br></pre></td></tr></table></figure>\n\n<p>解释：</p>\n<p>​\t10是整数，整数默认是int类型的。</p>\n<p>​\t而在取值范围的顺序中：byte short int long float double</p>\n<p>​\t在赋值的时候把一个int类型的赋值给了一个double类型的。把一个小的赋值给一个大的是可以直接给的。</p>\n<h3 id=\"案例二：\"><a href=\"#案例二：\" class=\"headerlink\" title=\"案例二：\"></a>案例二：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> b;<span class=\"comment\">//可以成功赋值</span></span><br></pre></td></tr></table></figure>\n\n<p>解释：</p>\n<p>​\t因为byte的取值范围是小的，int的取值范围是大的，在底层进行了隐式转换，不需要我们额外写代码单独实现，是可以直接赋值。</p>\n<h3 id=\"案例三：\"><a href=\"#案例三：\" class=\"headerlink\" title=\"案例三：\"></a>案例三：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span> <span class=\"number\">20L</span>;</span><br><span class=\"line\">??? result = i + n;</span><br><span class=\"line\">问变量result是什么类型的？</span><br></pre></td></tr></table></figure>\n\n<p>解释：</p>\n<p>​\t变量i是int类型的，变量n是long类型的。</p>\n<p>​\t而在取值范围的顺序中：byte short int long float double</p>\n<p>​\t变量i里面的值会自动提升为long类型的，最终的结果其实就是两个long相加，那么最终的result是long类型的。</p>\n<h3 id=\"案例四：\"><a href=\"#案例四：\" class=\"headerlink\" title=\"案例四：\"></a>案例四：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span> <span class=\"number\">100L</span>;</span><br><span class=\"line\"><span class=\"type\">double</span> <span class=\"variable\">d</span> <span class=\"operator\">=</span> <span class=\"number\">20.0</span>;</span><br><span class=\"line\">??? result = i + n + d;</span><br><span class=\"line\">问变量result是什么类型的？</span><br></pre></td></tr></table></figure>\n\n<p>解释：</p>\n<p>​\t变量i是int类型，变量n是long类型，变量d是double类型。</p>\n<p>​\t而在取值范围的顺序中：byte short int long float double</p>\n<p>​\t所以变量i和变量n里面的值在参与运算的时候，都会进行类型提升，变成double。</p>\n<p>​\t最终其实就是三个double进行相加，那么最终的结果就是double类型的。</p>\n<h3 id=\"案例五：\"><a href=\"#案例五：\" class=\"headerlink\" title=\"案例五：\"></a>案例五：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b1</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b2</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">??? result = b1 + b2;<span class=\"comment\">//int</span></span><br><span class=\"line\">问变量result是什么类型的？</span><br></pre></td></tr></table></figure>\n\n<p>解释：</p>\n<p>​\t因为b1和b2都是byte类型的。所以在参与计算的时候，变量b1和变量b2里面的值都会自动提升为int类型的。最终其实就是两个int类型的相加，最终结果也是int类型的。</p>\n<h3 id=\"案例六：\"><a href=\"#案例六：\" class=\"headerlink\" title=\"案例六：\"></a>案例六：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">short</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span> <span class=\"number\">100L</span>;</span><br><span class=\"line\">??? result = b + s + n;</span><br><span class=\"line\">问变量result是什么类型的？<span class=\"type\">long</span></span><br></pre></td></tr></table></figure>\n\n<p>解释：</p>\n<p>​\t变量b是byte类型的，变量s是short类型的，变量n是long类型的。</p>\n<p>​\tbyte，short，char类型的变量在参与运算的时候，变量里面的值会直接先提升为int。</p>\n<p>第一步：变量b和变量s里面的值会先提升为int参与运算。</p>\n<p>​\t\tint + int + long</p>\n<p>第二步：而long类型的取值范围是大于int的取值范围的。</p>\n<p>​\t\t所以变量b和变量s里面的值会再次提升为long。</p>\n<p>​\t\tlong + long + long。</p>\n<p>所以最终结果是long类型的。</p>\n<h1 id=\"5-强制转换\"><a href=\"#5-强制转换\" class=\"headerlink\" title=\"5.强制转换\"></a>5.强制转换</h1><h3 id=\"概念：-1\"><a href=\"#概念：-1\" class=\"headerlink\" title=\"概念：\"></a>概念：</h3><p>​\t如果要把一个取值范围大的数据或者变量赋值给另一个取值范围小的变量。是不允许直接操作。</p>\n<p>​\t如果一定要这么干，就需要加入强制转换。</p>\n<h3 id=\"书写格式：\"><a href=\"#书写格式：\" class=\"headerlink\" title=\"书写格式：\"></a>书写格式：</h3><p>​\t目标数据类型 变量名 &#x3D; （目标数据类型）被强转的数据；</p>\n<p>简单理解：</p>\n<p>​\t要转成什么类型的，那么就在小括号中写什么类型就可以了。</p>\n<p>案例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OperatorDemo2</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">12.3</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> (<span class=\"type\">int</span>) a;</span><br><span class=\"line\">        System.out.println(b);<span class=\"comment\">//12</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意点：</p>\n<p>​\t强制转换有可能会导致数据发生错误。（数据的精度丢失）</p>\n<h1 id=\"6-字符串的-操作\"><a href=\"#6-字符串的-操作\" class=\"headerlink\" title=\"6.字符串的+操作\"></a>6.字符串的+操作</h1><h3 id=\"核心技巧：\"><a href=\"#核心技巧：\" class=\"headerlink\" title=\"核心技巧：\"></a>核心技巧：</h3><ul>\n<li>当+操作中出现字符串时，此时就是字符串的连接符，会将前后的数据进行拼接，并产生一个新的字符串。</li>\n<li>当连续进行+操作时，从左到右逐个执行的。</li>\n</ul>\n<h1 id=\"7-字符串相加的练习：\"><a href=\"#7-字符串相加的练习：\" class=\"headerlink\" title=\"7.字符串相加的练习：\"></a>7.字符串相加的练习：</h1><p>案例1：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> + <span class=\"string\">&quot;abc&quot;</span> + <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p>结果：”1abc1”</p>\n<p>解释：</p>\n<p>​\t第一步： 1 + “abc”。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串”1abc”</p>\n<p>​\t第二步：  “1abc” + 1。这个过程中，有字符串参与的，所以做的也是拼接操作，产生一个新的字符串”1abc1”</p>\n<p>案例2：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> + <span class=\"number\">2</span> + <span class=\"string\">&quot;abc&quot;</span> + <span class=\"number\">2</span> + <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p>结果：“3abc21”</p>\n<p>解释：</p>\n<p>​\t第一步：1 + 2 。在这个过程中，没有字符串参与的，所以做的是加法运算，结果为3。</p>\n<p>​\t第二步：3 + “abc”。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串”3abc”。</p>\n<p>​\t第三步：”3abc” + 2。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串”3abc2”。</p>\n<p>​\t第四步：”3abc2” + 1。在这个过程中，有字符串参与的，所以做的是拼接操作，产生一个新的字符串“3abc21”</p>\n<p>案例3：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;黑默丁格&quot;</span>;</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;我的名字是&quot;</span> + name);</span><br></pre></td></tr></table></figure>\n\n<p>结果： 我的名字是黑默丁格</p>\n<p>解释：当字符串跟变量相加的时候，实际上是跟变量里面的值进行拼接。</p>\n<h1 id=\"8-字符的-操作\"><a href=\"#8-字符的-操作\" class=\"headerlink\" title=\"8.字符的+操作\"></a>8.字符的+操作</h1><h3 id=\"规则：\"><a href=\"#规则：\" class=\"headerlink\" title=\"规则：\"></a>规则：</h3><p>​\t当+操作中出现了字符，会拿着字符到计算机内置的ASCII码表中去查对应的数字，然后再进行计算。</p>\n<h3 id=\"案例：\"><a href=\"#案例：\" class=\"headerlink\" title=\"案例：\"></a>案例：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">char</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> c + <span class=\"number\">0</span>;</span><br><span class=\"line\">System.out.println(result);<span class=\"comment\">//97</span></span><br></pre></td></tr></table></figure>\n\n<p>ASCII码表中：</p>\n<p>​\t‘a’   —–    97</p>\n<p>​\t‘A’   —–    65</p>\n<h1 id=\"9-算术运算符的总结\"><a href=\"#9-算术运算符的总结\" class=\"headerlink\" title=\"9.算术运算符的总结\"></a>9.算术运算符的总结</h1><p>分类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ - * / %  这些操作跟小学数学几乎是一模一样的。</span><br></pre></td></tr></table></figure>\n\n<p>注意点：</p>\n<ul>\n<li>&#x2F; 和 % 的区别：他们两个都是做除法运算，&#x2F;取结果的商。% 取结果的余数。</li>\n<li>整数操作只能得到整数，如果想要得到小数，必须有浮点数参与运算。</li>\n</ul>\n<p>算术运算符的高级用法：</p>\n<p>是以+为例进行的讲解，其余减法，乘法，除法的运算规则也是一样的。</p>\n<p>特例：字符串只有+操作，没有其他操作。</p>\n<h1 id=\"10-自增自减运算符\"><a href=\"#10-自增自减运算符\" class=\"headerlink\" title=\"10.自增自减运算符\"></a>10.自增自减运算符</h1><h3 id=\"分类：\"><a href=\"#分类：\" class=\"headerlink\" title=\"分类：\"></a>分类：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">++  自增运算符</span><br><span class=\"line\">--  自减运算符</span><br></pre></td></tr></table></figure>\n\n<p>++：就是把变量里面的值+1</p>\n<p>–：就是把变量里面的值-1</p>\n<h3 id=\"使用方式：\"><a href=\"#使用方式：\" class=\"headerlink\" title=\"使用方式：\"></a>使用方式：</h3><ul>\n<li>放在变量的前面，我们叫做先++。 比如：++a</li>\n<li>放在变量的后面，我们叫做后++。 比如：a++</li>\n</ul>\n<h3 id=\"注意点：\"><a href=\"#注意点：\" class=\"headerlink\" title=\"注意点：\"></a>注意点：</h3><p>​\t不管是先++，还是后++。单独写在一行的时候，运算结果是一模一样的。</p>\n<h3 id=\"案例：-1\"><a href=\"#案例：-1\" class=\"headerlink\" title=\"案例：\"></a>案例：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//++</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">a++;<span class=\"comment\">//就是让变量a里面的值 + 1</span></span><br><span class=\"line\">System.out.println(a);<span class=\"comment\">//11</span></span><br><span class=\"line\">++a;<span class=\"comment\">//就是让变量a里面的值 + 1</span></span><br><span class=\"line\">System.out.println(a);<span class=\"comment\">//12</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自增自减运算符的应用场景：\"><a href=\"#自增自减运算符的应用场景：\" class=\"headerlink\" title=\"自增自减运算符的应用场景：\"></a>自增自减运算符的应用场景：</h3><p>某些情况下，变量需要进行加1或者减1的时候使用。</p>\n<p>比如：过生日多一岁，就用到了自增运算符。</p>\n<p>比如：购物商场中，选择商品数量，也用到了自增或者自减运算符。</p>\n<p>比如：统计很多数据中，有多少个数据满足要求，也用到了自增运算符。</p>\n<h1 id=\"11-赋值运算符\"><a href=\"#11-赋值运算符\" class=\"headerlink\" title=\"11.赋值运算符\"></a>11.赋值运算符</h1><p>最为常用的：\t&#x3D;</p>\n<p>运算过程：就是把等号右边的结果赋值给左边的变量</p>\n<p>案例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OperatorDemo6</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.最为简单的赋值运算符用法</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;<span class=\"comment\">//就是把10赋值给变量a</span></span><br><span class=\"line\">        System.out.println(a);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.如果等号右边需要进行计算。</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> a + b;<span class=\"comment\">//先计算等号右边的，把计算的结果赋值给左边的变量</span></span><br><span class=\"line\">        System.out.println(c);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.特殊的用法</span></span><br><span class=\"line\">        a = a + <span class=\"number\">10</span>;<span class=\"comment\">//先计算等号右边的，把计算的结果赋值给左边的变量</span></span><br><span class=\"line\">        System.out.println(a);<span class=\"comment\">//20</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"12-扩展赋值运算符\"><a href=\"#12-扩展赋值运算符\" class=\"headerlink\" title=\"12.扩展赋值运算符\"></a>12.扩展赋值运算符</h1><h3 id=\"分类：-1\"><a href=\"#分类：-1\" class=\"headerlink\" title=\"分类：\"></a>分类：</h3><p>​\t+&#x3D;、-&#x3D;、*&#x3D;、&#x2F;&#x3D;、%&#x3D;</p>\n<h3 id=\"运算规则：\"><a href=\"#运算规则：\" class=\"headerlink\" title=\"运算规则：\"></a>运算规则：</h3><p>​\t就是把左边跟右边进行运算，把最终的结果赋值给左边，对右边没有任何影响。</p>\n<h3 id=\"案例：-2\"><a href=\"#案例：-2\" class=\"headerlink\" title=\"案例：\"></a>案例：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OperatorDemo7</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//扩展赋值运算符</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">        a += b;<span class=\"comment\">//把左边和右边相加，再把最终的结果赋值给左边，对右边没有任何影响</span></span><br><span class=\"line\">        <span class=\"comment\">// 相当于 a = a + b;</span></span><br><span class=\"line\">        System.out.println(a);<span class=\"comment\">//30</span></span><br><span class=\"line\">        System.out.println(b);<span class=\"comment\">//20</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注意点：-1\"><a href=\"#注意点：-1\" class=\"headerlink\" title=\"注意点：\"></a>注意点：</h3><p>​\t扩展的赋值运算符中隐层还包含了一个强制转换。</p>\n<p>以+&#x3D;为例。</p>\n<p>a +&#x3D; b ;实际上相当于 a &#x3D; (byte)(a + b);</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OperatorDemo8</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">byte</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">        <span class=\"type\">byte</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">        <span class=\"comment\">//a += b;</span></span><br><span class=\"line\">        a = (<span class=\"type\">byte</span>)(a + b);</span><br><span class=\"line\">        System.out.println(a);<span class=\"comment\">//30</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"13-关系运算符\"><a href=\"#13-关系运算符\" class=\"headerlink\" title=\"13.关系运算符\"></a>13.关系运算符</h1><p>又叫比较运算符，其实就是拿着左边跟右边进行了判断而已。</p>\n<h3 id=\"分类：-2\"><a href=\"#分类：-2\" class=\"headerlink\" title=\"分类：\"></a>分类：</h3><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x3D;&#x3D;</td>\n<td>就是判断左边跟右边是否相等，如果成立就是true，如果不成立就是false</td>\n</tr>\n<tr>\n<td>!&#x3D;</td>\n<td>就是判断左边跟右边是否不相等，如果成立就是true，如果不成立就是false</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>就是判断左边是否大于右边，如果成立就是true，如果不成立就是false</td>\n</tr>\n<tr>\n<td>&gt;&#x3D;</td>\n<td>就是判断左边是否大于等于右边，如果成立就是true，如果不成立就是false</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>就是判断左边是否小于右边，如果成立就是true，如果不成立就是false</td>\n</tr>\n<tr>\n<td>&lt;&#x3D;</td>\n<td>就是判断左边是否小于等于右边，如果成立就是true，如果不成立就是false</td>\n</tr>\n</tbody></table>\n<h3 id=\"注意点：-2\"><a href=\"#注意点：-2\" class=\"headerlink\" title=\"注意点：\"></a>注意点：</h3><ul>\n<li>关系运算符最终的结果一定是布尔类型的。要么是true，要么是false</li>\n<li>在写&#x3D;&#x3D;的时候，千万不要写成&#x3D;</li>\n</ul>\n<h1 id=\"14-逻辑运算符\"><a href=\"#14-逻辑运算符\" class=\"headerlink\" title=\"14.逻辑运算符\"></a>14.逻辑运算符</h1><h3 id=\"和-的使用：\"><a href=\"#和-的使用：\" class=\"headerlink\" title=\"&amp; 和 | 的使用：\"></a>&amp; 和 | 的使用：</h3><p>&amp;：逻辑与（而且）</p>\n<p>​\t两边都为真，结果才是真，只要有一个为假，那么结果就是假。</p>\n<p>|：逻辑或（或者）</p>\n<p>​\t两边都为假，结果才是假，只要有一个为真，那么结果就是真。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// &amp;  //两边都是真，结果才是真。</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">true</span> &amp; <span class=\"literal\">true</span>);<span class=\"comment\">//true</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">false</span> &amp; <span class=\"literal\">false</span>);<span class=\"comment\">//false</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">true</span> &amp; <span class=\"literal\">false</span>);<span class=\"comment\">//false</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">false</span> &amp; <span class=\"literal\">true</span>);<span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;===================================&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// | 或  //两边都是假，结果才是假，如果有一个为真，那么结果就是真。</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">true</span> | <span class=\"literal\">true</span>);<span class=\"comment\">//true</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">false</span> | <span class=\"literal\">false</span>);<span class=\"comment\">//false</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">true</span> | <span class=\"literal\">false</span>);<span class=\"comment\">//true</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">false</span> | <span class=\"literal\">true</span>);<span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用场景：\"><a href=\"#使用场景：\" class=\"headerlink\" title=\"使用场景：\"></a>使用场景：</h3><p>​\t根据固定的场景，来选择使用&amp;还是使用|</p>\n<ul>\n<li><p>用户登录。</p>\n<p>用户名输入正确  &amp; 密码输入正确</p>\n<p>因为只有用户名和密码同时都正确了，那么才能成功登录，只要有一个失败了都不行。</p>\n<p>使用技巧：</p>\n<p>​\t当我们需要同时满足左边和右边两种情况时，可以使用且</p>\n</li>\n<li><p>丈母娘选女婿</p>\n<p>丈母娘：女婿啊，你要么买个房子，要么买辆车。就可以把我的小棉袄穿走了。</p>\n<p>买个房子 | 买辆车</p>\n<p>两个条件中，只要满足其中一个，就可以穿走小棉袄了。</p>\n<p>使用技巧：</p>\n<p>​\t当两种条件只要满足其中一个的时候，可以使用或</p>\n</li>\n</ul>\n<h3 id=\"（异或）的使用：\"><a href=\"#（异或）的使用：\" class=\"headerlink\" title=\"^（异或）的使用：\"></a>^（异或）的使用：</h3><p>​\t在以后用的不多，了解一下即可。</p>\n<p>计算规则：如果两边相同，结果为false，如果两边不同，结果为true</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//^   //左右不相同，结果才是true，左右相同结果就是false</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">true</span> ^ <span class=\"literal\">true</span>);<span class=\"comment\">//false</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">false</span> ^ <span class=\"literal\">false</span>);<span class=\"comment\">//false</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">true</span> ^ <span class=\"literal\">false</span>);<span class=\"comment\">//true</span></span><br><span class=\"line\">System.out.println(<span class=\"literal\">false</span> ^ <span class=\"literal\">true</span>);<span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"（取反）的使用：\"><a href=\"#（取反）的使用：\" class=\"headerlink\" title=\"!（取反）的使用：\"></a>!（取反）的使用：</h3><p>​\t是取反，也叫做非。</p>\n<p>计算规则：false取反就是true，true取反就是false</p>\n<p>温馨提示：<strong>取反最多只用一个。</strong></p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.out.println(!<span class=\"literal\">false</span>);<span class=\"comment\">//true</span></span><br><span class=\"line\">System.out.println(!<span class=\"literal\">true</span>);<span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(!!<span class=\"literal\">false</span>);<span class=\"comment\">//注意点：取反最多只用一个。</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"15-短路逻辑运算符\"><a href=\"#15-短路逻辑运算符\" class=\"headerlink\" title=\"15.短路逻辑运算符\"></a>15.短路逻辑运算符</h1><p>分类：  &amp;&amp;   ||</p>\n<h3 id=\"：\"><a href=\"#：\" class=\"headerlink\" title=\"&amp;&amp;：\"></a>&amp;&amp;：</h3><p>​\t运算结果跟&amp;是一模一样的，只不过具有短路效果。</p>\n<h3 id=\"：-1\"><a href=\"#：-1\" class=\"headerlink\" title=\"||：\"></a>||：</h3><p>​\t运算结果跟|是一模一样的。只不过具有短路效果。</p>\n<h3 id=\"逻辑核心：\"><a href=\"#逻辑核心：\" class=\"headerlink\" title=\"逻辑核心：\"></a>逻辑核心：</h3><p>​\t当左边不能确定整个表达式的结果，右边才会执行。</p>\n<p>​\t当左边能确定整个表达式的结果，那么右边就不会执行了。从而提高了代码的运行效率。</p>\n<h3 id=\"举例：\"><a href=\"#举例：\" class=\"headerlink\" title=\"举例：\"></a>举例：</h3><ul>\n<li><p>用户登录案例</p>\n<p>用户名正确  &amp; 密码正确</p>\n<p>如果使用一个&amp;，不管用户名是否正确都会去验证密码。</p>\n</li>\n</ul>\n<p>思考：</p>\n<p>​\t如果用户名输入正确了，那么我们再判断密码是否正确，是符合业务逻辑的。</p>\n<p>​\t但是如果用户名输入错误了，那么现在还有必要去比较密码吗？没有不要了。</p>\n<p>​\t如果使用一个&amp;，那么左边和右边不管什么情况下，都会执行。</p>\n<p>​\t用户名正确  &amp;&amp;  密码正确</p>\n<p>​\t如果用户名输入正确了，那么才会验证密码是否输入正确。</p>\n<p>​\t如果用户名输入错误了，那么就不会再去验证密码是否正确，最终的结果直接为false。从而提高了程序运行的效率。</p>\n<ul>\n<li><p>丈母娘选女婿</p>\n<p>有房 |  有车</p>\n<p>首先先看看有没有房，发现有，然后再去看看有没有车。</p>\n</li>\n</ul>\n<p>思考：</p>\n<p>​\t既然都有房子，干嘛还要去看车呢？多此一举。</p>\n<p>​\t有房 ||  有车</p>\n<p>​\t首先先看看有没有房，如果有，那么右边就不执行了。最终的结果直接为true。</p>\n<p>​\t如果没有房子，才会去看右边有没有车。</p>\n<h3 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h3><p>​\t&amp;&amp; 和 &amp; 、||和|的运行结果都是一模一样的。</p>\n<p>​\t但是短路逻辑运算符可以提高程序的运行效率。</p>\n<h3 id=\"建议：\"><a href=\"#建议：\" class=\"headerlink\" title=\"建议：\"></a>建议：</h3><p>​\t最为常用： &amp;&amp;   ||   ！</p>\n<h1 id=\"16-三元运算符\"><a href=\"#16-三元运算符\" class=\"headerlink\" title=\"16.三元运算符\"></a>16.三元运算符</h1><p>又叫做：三元表达式或者问号冒号表达式。</p>\n<h3 id=\"格式：\"><a href=\"#格式：\" class=\"headerlink\" title=\"格式：\"></a>格式：</h3><p>​\t关系表达式 ？ 表达式1 ：表达式2 ；</p>\n<h3 id=\"计算规则：\"><a href=\"#计算规则：\" class=\"headerlink\" title=\"计算规则：\"></a>计算规则：</h3><ul>\n<li>计算关系表达式的值。</li>\n<li>如果关系表达式的值为真，那么执行表达式1。</li>\n<li>如果关系表达式的值为假，那么执行表达式2。</li>\n</ul>\n<h3 id=\"注意点：-3\"><a href=\"#注意点：-3\" class=\"headerlink\" title=\"注意点：\"></a>注意点：</h3><p>​\t三元运算符的最终结果一定要被使用，要么赋值给一个变量，要么直接打印出来。</p>\n<h3 id=\"案例：-3\"><a href=\"#案例：-3\" class=\"headerlink\" title=\"案例：\"></a>案例：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OperatorDemo12</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//需求：求两个数的较大值</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//格式：关系表达式 ？ 表达式1 ： 表达式2 ；</span></span><br><span class=\"line\">        <span class=\"comment\">//注意点：</span></span><br><span class=\"line\">        <span class=\"comment\">//三元运算符的最终结果一定要被使用。</span></span><br><span class=\"line\">        <span class=\"comment\">//要么赋值给一个变量，要么直接输出。</span></span><br><span class=\"line\">       <span class=\"type\">int</span> <span class=\"variable\">max</span> <span class=\"operator\">=</span>  a &gt; b ? a : b ;</span><br><span class=\"line\">        System.out.println(max);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(a &gt; b ? a : b);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"17-练习1-两只老虎\"><a href=\"#17-练习1-两只老虎\" class=\"headerlink\" title=\"17.练习1-两只老虎\"></a>17.练习1-两只老虎</h1><p>需求：</p>\n<p>​\t动物园里有两只老虎，两只老虎的体重分别为通过键盘录入获得，</p>\n<p>​\t请用程序实现判断两只老虎的体重是否相同。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.获取两只老虎的体重</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入第一只老虎的体重&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">weight1</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入第二只老虎的体重&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">weight2</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.利用三元运算符求出最终结果</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> weight1 == weight2 ? <span class=\"string\">&quot;相同&quot;</span> : <span class=\"string\">&quot;不相同&quot;</span>;</span><br><span class=\"line\">System.out.println(result);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"18-练习2-求三个数的最大值\"><a href=\"#18-练习2-求三个数的最大值\" class=\"headerlink\" title=\"18.练习2-求三个数的最大值\"></a>18.练习2-求三个数的最大值</h1><p>需求：</p>\n<p>​\t一座寺庙里住着三个和尚，已知他们的身高分别为150cm、210cm、165cm。</p>\n<p>​\t请用程序实现获取这三个和尚的最高身高。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.定义三个变量记录和尚的身高</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">height1</span> <span class=\"operator\">=</span> <span class=\"number\">150</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">height2</span> <span class=\"operator\">=</span> <span class=\"number\">210</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">height3</span> <span class=\"operator\">=</span> <span class=\"number\">165</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.利用三元运算符求出两个数中的较大值。</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> height1 &gt; height2 ? height1 : height2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3.求出最终的结果</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">max</span> <span class=\"operator\">=</span> temp &gt; height3 ? temp : height3;</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(max);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"19-运算符的优先级\"><a href=\"#19-运算符的优先级\" class=\"headerlink\" title=\"19.运算符的优先级\"></a>19.运算符的优先级</h1><p>在Java中涉及了很多的运算符，每一种运算符都有各自的优先级。但是这些优先级不需要记忆。</p>\n<p>咱们只要知道其中一点：</p>\n<p>​\t小括号优先于所有。</p>\n"},{"title":"day02-Java基础语法","date":"2024-12-12T08:29:00.000Z","photos":["/tupian/j02.jpg"],"_content":"\n\n\n# day02 - Java基础语法\n\n## 1. 注释\n\n​\t注释是对代码的解释和说明文字。\n\nJava中的注释分为三种：\n\n* 单行注释：\n\n~~~java\n// 这是单行注释文字\n~~~\n\n* 多行注释：\n\n~~~java\n/*\n这是多行注释文字\n这是多行注释文字\n这是多行注释文字\n*/\n注意：多行注释不能嵌套使用。\n~~~\n\n* 文档注释（暂时用不到）：\n\n```java\n/**\n这是多行注释文字\n这是多行注释文字\n这是多行注释文字\n*/\n```\n\n### 使用的技巧\n\n​\t如果我们要对代码进行解释，那么就可以使用注释。\n\n​\t当注释的内容比较少，一行就写完了，可以用单行注释。\n\n​\t如果注释的内容比较多，需要写在多行，那么可以使用多行注释。\n\n### 注意点\n\n​\t注释的内容不会参与编译和运行的，仅仅是对代码的解释说明而已。\n\n​\t所以，不管在注释当中写什么内容，都不会影响代码运行的结果。\n\n## 2. 关键字\n\n### 2.1 概念\n\n​\t被Java赋予了特定含义的英文单词。\n\n​\t当我们在代码中写了关键字之后，程序在运行的时候，就知道要做什么事情了。\n\n注意：关键字很多，不用刻意去记。\n\n| **abstract**   | **assert**       | **boolean**   | **break**      | **byte**   |\n| -------------- | ---------------- | ------------- | -------------- | ---------- |\n| **case**       | **catch**        | **char**      | **class**      | **const**  |\n| **continue**   | **default**      | **do**        | **double**     | **else**   |\n| **enum**       | **extends**      | **final**     | **finally**    | **float**  |\n| **for**        | **goto**         | **if**        | **implements** | **import** |\n| **instanceof** | **int**          | **interface** | **long**       | **native** |\n| **new**        | **package**      | **private**   | **protected**  | **public** |\n| **return**     | **strictfp**     | **short**     | **static**     | **super**  |\n| **switch**     | **synchronized** | **this**      | **throw**      | **throws** |\n| **transient**  | **try**          | **void**      | **volatile**   | **while**  |\n\n### 2.2 第一个关键字class\n\n​\t表示定义一个类。创建一个类。\n\n类：Java项目最基本的组成单元，一个完整的Java项目有可能会有成千上万个类来组成的。\n\nclass后面跟随的就是这个类的名字，简称：类名。\n\n在类名后面会有一对大括号，表示这个类的内容。\n\n举例：\n\n```java\npublic class HelloWorld{\n    \n   \n}\n```\n\n解释：class表示定义类。\n\n​\t类名：HelloWorld\n\n​\tHelloWorld后面的大括号表示这个类的范围。\n\n## 3. 字面量\n\n作用：告诉程序员，数据在程序中的书写格式。\n\n| **字面量类型** | **说明**                                  | **程序中的写法**           |\n| -------------- | ----------------------------------------- | -------------------------- |\n| 整数           | 不带小数的数字                            | 666，-88                   |\n| 小数           | 带小数的数字                              | 13.14，-5.21               |\n| 字符           | 必须使用单引号，有且仅能一个字符          | ‘A’，‘0’，   ‘我’          |\n| 字符串         | 必须使用双引号，内容可有可无              | “HelloWorld”，“黑马程序员” |\n| 布尔值         | 布尔值，表示真假，只有两个值：true，false | true 、false               |\n| 空值           | 一个特殊的值，空值                        | 值是：null                 |\n\n~~~java\npublic class Demo {\n    public static void main(String[] args) {\n        System.out.println(10); // 输出一个整数\n        System.out.println(5.5); // 输出一个小数\n        System.out.println('a'); // 输出一个字符\n        System.out.println(true); // 输出boolean值true\n        System.out.println(\"欢迎来到黑马程序员\"); // 输出字符串\n    }\n}\n~~~\n\n### 区分技巧\n\n1. 不带小数点的数字都是整数类型的字面量。\n2. 只要带了小数点，那么就是小数类型的字面量。\n3. 只要用双引号引起来的，不管里面的内容是什么，不管里面有没有内容，都是字符串类型的字面量。\n4. 字符类型的字面量必须用单引号引起来，不管内容是什么，但是个数有且只能有一个。\n5. 字符类型的字面量只有两个值，true、false。\n6. 空类型的字面量只有一个值，null。\n\n## 4. 变量\n\n### 4.1 什么是变量？\n\n​\t变量就在程序中临时存储数据的容器。但是这个容器中只能存一个值。\n\n### 4.2 变量的定义格式\n\n​\t数据类型 变量名 = 数据值；\n\n#### 4.2.1 格式详解\n\n​\t数据类型：限定了变量当中能存储什么类型的数据。\n\n​\t\t\t   如果要存10，那么数据类型就需要写整数类型。\n\n​\t\t\t   如果要存10.0，那么数据类型就需要写小数类型。\n\n​\t变量名：其实就是这个容器的名字。\n\n​\t\t\t当以后想要使用变量里面的数据时，直接使用变量名就可以了。\n\n​\t数据值：真正存储在容器中的数据。\n\n​\t分号：表示语句的结束，就跟以前写作文时候的句号是一样的。\n\n#### 4.2.2 常用的数据类型\n\n​\t整数：int\n\n​\t小数：（浮点数）double\n\n​\t其他数据类型稍后讲解\n\n举例：\n\n```java\npublic class VariableDemo{\n\tpublic static void main(String[] args){\n\t\t//定义一个整数类型的变量\n\t\t//数据类型 变量名 = 数据值;\n\t\tint a = 16;\n\t\tSystem.out.println(a);//16\n\t\t\n\t\t//定义一个小数类型的变量\n\t\tdouble b = 10.1;\n\t\tSystem.out.println(b);//10.1\n\t}\n}\n```\n\n#### 4.2.3 变量的注意事项\n\n- 变量名不能重复\n- 在一条语句中，可以定义多个变量。但是这种方式影响代码的阅读，所以了解一下即可。\n- 变量在使用之前必须要赋值。\n\n案例：\n\n```java\npublic class VariableDemo2{\n\tpublic static void main(String[] args){\n\t\t//1.变量名不允许重复\n\t\t//int a = 10;\n\t\t//int a = 20;\n\t\t//System.out.println(a);\n\t\t\n\t\t//2.一条语句可以定义多个变量\n\t\t//了解。\n\t\t//int a = 10, b = 20, c = 20,d = 20;\n\t\t//System.out.println(a);//?\n\t\t//System.out.println(b);//?\n\t\t\n\t\t\n\t\t//3.变量在使用之前必须要赋值\n\t\tint a = 30;\n\t\tSystem.out.println(a);\n\t}\n}\n```\n\n### 4.3 变量的练习\n\n​\t需求：说出公交车到终点站之后，车上一共有多少乘客？\n\n​\t\t    一开始没有乘客。\n\n​\t\t   第一站：上去一位乘客，没有下来乘客。\n\n​\t\t   第二站：上去两位乘客，下来一位乘客。\n\n​\t\t   第三站：上去两位乘客，下来一位乘客。\n\n​\t\t   第四站：没有上去乘客，下来一位乘客。\n\n​\t\t   第五站：上去一位乘客，没有下来乘客。\n\n​\t\t   问：到了终点站之后，车上一共多少乘客？\n\n​\t代码解析：\n\n```java\npublic class VariableTest1{\n\t//主入口\n\tpublic static void main(String[] args){\n\t\t//一开始没有乘客。\n\t\tint count = 0;\n\t\t//第一站：上去一位乘客\n\t\t//在原有的基础上 + 1\n\t\tcount = count + 1;\n\t\t//System.out.println(count);\n\t\t//第二站：上去两位乘客，下来一位乘客\n\t\tcount = count + 2 - 1; \n\t\t//第三站：上去两位乘客，下来一位乘客\n\t\tcount = count + 2 - 1;\n\t\t//第四站：下来一位乘客\n\t\tcount = count - 1;\n\t\t//第五站：上去一位乘客\n\t\tcount = count + 1;\n\t\t//请问：到了终点站，车上一共几位乘客。\n\t\tSystem.out.println(count);//3\n\t}\n}\n```\n\n## 5. 数据类型\n\n### 5.1 Java语言数据类型的分类\n\n- 基本数据类型\n- 引用数据类型（面向对象的时候再深入学习）\n\n### 5.2 基本数据类型的四类八种\n\n| 数据类型 | 关键字  | 内存占用 |                 取值范围                  |\n| :------: | :-----: | :------: | :---------------------------------------: |\n|   整数   |  byte   |    1     |    负的2的7次方 ~ 2的7次方-1(-128~127)    |\n|          |  short  |    2     | 负的2的15次方 ~ 2的15次方-1(-32768~32767) |\n|          |   int   |    4     |        负的2的31次方 ~ 2的31次方-1        |\n|          |  long   |    8     |        负的2的63次方 ~ 2的63次方-1        |\n|  浮点数  |  float  |    4     |        1.401298e-45 ~ 3.402823e+38        |\n|          | double  |    8     |      4.9000000e-324 ~ 1.797693e+308       |\n|   字符   |  char   |    2     |                  0-65535                  |\n|   布尔   | boolean |    1     |                true，false                |\n\n#### 说明\n\n​\te+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。\n\n​\t在java中整数默认是int类型，浮点数默认是double类型。\n\n#### 需要记忆以下几点\n\nbyte类型的取值范围：\n\n​\t-128 ~ 127\n\nint类型的大概取值范围：\n\n​\t-21亿多  ~ 21亿多\n\n整数类型和小数类型的取值范围大小关系：\n\n​\tdouble > float > long > int > short > byte\n\n最为常用的数据类型选择：\n\n- 在定义变量的时候，要根据实际的情况来选择不同类型的变量。\n\n  比如：人的年龄，可以选择byte类型。\n\n  比如：地球的年龄，可以选择long类型。\n\n- 如果整数类型中，不太确定范围，那么默认使用int类型。\n\n- 如果小数类型中，不太确定范围，那么默认使用double类型。\n\n- 如果要定义字符类型的变量，那么使用char\n\n- 如果要定义布尔类型的变量，那么使用boolean\n\n### 5.3 定义8种基本数据类型变量\n\n```java\npublic class VariableDemo3{\n    public static void main(String[] args){\n        //1.定义byte类型的变量\n        //数据类型 变量名 = 数据值;\n        byte a = 10;\n        System.out.println(a);\n\n        //2.定义short类型的变量\n        short b = 20;\n        System.out.println(b);\n\n        //3.定义int类型的变量\n        int c = 30;\n        System.out.println(c);\n\n        //4.定义long类型的变量\n        long d = 123456789123456789L;\n        System.out.println(d);\n\n        //5.定义float类型的变量\n        float e = 10.1F;\n        System.out.println(e);\n\n        //6.定义double类型的变量\n        double f = 20.3;\n        System.out.println(f);\n\n        //7.定义char类型的变量\n        char g = 'a';\n        System.out.println(g);\n\n        //8.定义boolean类型的变量\n        boolean h = true;\n        System.out.println(h);\n\n    }\n}\n```\n\n#### **注意点**\n\n- 如果要定义 一个整数类型的变量，不知道选择哪种数据类型了，默认使用int。\n- 如果要定义 一个小数类型的变量，不知道选择哪种数据类型了，默认使用double。\n- 如果要定义一个long类型的变量，那么在数据值的后面需要加上L后缀。（大小写都可以，建议大写。）\n- 如果要定义一个float类型的变量，那么在数据值的后面需要加上F后缀。（大小写都可以）\n\n### 5.4 练习1\n\n需求：定义5个变量记录老师的信息并打印\n\n代码示例：\n\n```java\npublic class VariableTest1{\n\tpublic static void main(String[] args){\n\t\t//1.定义字符串类型的变量记录老师的姓名\n\t\tString name = \"黑马谢广坤\";\n\t\t//2.定义整数类型的变量记录老师的年龄\n\t\tint age = 18;\n\t\t//3.定义字符类型的变量记录老师的性别\n\t\tchar gender = '男';\n\t\t//4.定义小数类型的变量记录老师的身高\n\t\tdouble height = 180.1;\n\t\t//5.定义布尔类型的变量记录老师的婚姻状况\n\t\tboolean flag = true;\n\t\t\n\t\t//输出5个变量的值\n\t\tSystem.out.println(name);\n\t\tSystem.out.println(age);\n\t\tSystem.out.println(gender);\n\t\tSystem.out.println(height);\n\t\tSystem.out.println(flag);\n\t\t\n\t}\n}\n```\n\n### 5.5 练习2\n\n需求：将（电影名称，主演，年份，评分）四个信息选择不同类型的变量，随后打印出来。\n\n 代码示例：\n\n```java\npublic class VariableTest2{\n\tpublic static void main(String[] args){\n\t\t//1.定义字符串变量记录电影的名称\n\t\tString movie = \"送初恋回家\";\n\t\t//2.定义三个变量记录主演的名字\n\t\tString name1 = \"刘鑫\";\n\t\tString name2 = \"张雨提\";\n\t\tString name3 = \"高媛\";\n\t\t//3. 定义整数类型的变量记录年龄的年份\n\t\tint year = 2020;\n\t\t//4.定义小数类型的变量记录电影的评分\n\t\tdouble score = 9.0;\n\t\t\n\t\t//打印变量的信息\n\t\tSystem.out.println(movie);\n\t\tSystem.out.println(name1);\n\t\tSystem.out.println(name2);\n\t\tSystem.out.println(name3);\n\t\tSystem.out.println(year);\n\t\tSystem.out.println(score);\n\t\t\n\t}\n}\n```\n\n### 5.6 练习3\n\n需求：选择其中一部手机，将（手机价格，手机品牌）两个信息选择不同类型的变量，随后打印出来。 \n\n 代码示例：\n\n```java\npublic class VariableTest3{\n\tpublic static void main(String[] args){\n\t\t//1.定义小数类型的变量记录手机的价格\n\t\tdouble price = 5299.0;\n\t\t\n\t\t//2.定义字符串类型的变量记录手机的品牌\n\t\tString brand = \"华为\";\n\t\t\n\t\t//输出变量记录的值\n\t\tSystem.out.println(price);\n\t\tSystem.out.println(brand);\n\t}\n}\n```\n\n## 6. 标识符\n\n业内大多数程序员都在遵守阿里巴巴的命名规则。\n\n在day02的资料文件夹中有。\n\n### 6.1 硬性要求：\n\n​\t必须要这么做，否则代码会报错。\n\n- 必须由数字、字母、下划线_、美元符号$组成。\n- 数字不能开头\n- 不能是关键字\n- 区分大小写的。\n\n### 6.2 软件建议：\n\n​\t如果不这么做，代码不会报错，但是会让代码显得比较low。\n\n### 6.2.1 小驼峰命名法\n\n适用于变量名和方法名\n\n* 如果是一个单词，那么全部小写，比如：name\n\n* 如果是多个单词，那么从第二个单词开始，首字母大写，比如：firstName、maxAge\n\n### 6.2.2 大驼峰命名法\n\n适用于类名\n\n* 如果是一个单词，那么首字母大写。比如：Demo、Test。\n\n* 如果是多个单词，那么每一个单词首字母都需要大写。比如：HelloWorld\n\n不管起什么名字，都要做到见名知意。\n\n### 阿里巴巴命名规范细节：\n\n1. 尽量不要用拼音。但是一些国际通用的拼音可视为英文单词。\n\n   正确：alibaba、hangzhou、nanjing\n\n   错误：jiage、dazhe\n\n2. 平时在给变量名、方法名、类名起名字的时候，不要使用下划线或美元符号。\n\n   错误：_name\n\n   正确：name\n\n## 7. 键盘录入\n\n​\t键盘录入的实际功能Java已经帮我们写好了，不需要我们自己再实现了，而Java写好的功能都放在了Scanner这个类中，所以，我们只要直接使用Scanner这个类就可以了。\n\n使用步骤：\n\n第一步：\n\n​\t导包：其实就是表示先找到Scanner这个类在哪。\n\n第二步：\n\n​\t创建对象：其实就表示申明一下，我准备开始用Scanner这个类了。\n\n第三步：\n\n​\t接收数据：也是真正干活的代码。\n\n代码示例：\n\n```java\n//导包，其实就是先找到Scanner这个类在哪\nimport java.util.Scanner;\npublic class ScannerDemo1{\n\tpublic static void main(String[] args){\n\t\t//2.创建对象，其实就是申明一下，我准备开始用Scanner这个类了。\n\t\tScanner sc = new Scanner(System.in);\n\t\t//3.接收数据\n\t\t//当程序运行之后，我们在键盘输入的数据就会被变量i给接收了\n\t\tSystem.out.println(\"请输入一个数字\");\n\t\tint i = sc.nextInt();\n\t\tSystem.out.println(i);\n\t}\n}\n```\n\n## 8. IDEA\n\n### 8.1 IDEA概述\n\n​\tIDEA全称IntelliJ IDEA，是用于Java语言开发的集成环境，它是业界公认的目前用于Java程序开发最好的工具。\n\n**集成环境：**\n\n​\t把代码编写，编译，执行，调试等多种功能综合到一起的开发工具。\n\n### 8.2 IDEA的下载和安装\n\n#### 8.2.1 下载\n\n​\t可以到官方网站自行下载，网址为：https://www.jetbrains.com/idea\n\n​\t今天的资料中，对应的安装包也提高给大家了。\n\n#### 8.2.2 安装\n\n- 到资料文件夹中，双击安装包。\n- 点击next，准备安装\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%851.png)\n\n- 点击Browse修改安装路径。\n\n  修改完毕点击next\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%852.png)\n\n- 勾选64-bit launcher。表示在桌面新建一个64位的快捷方式。\n\n  其他的不要勾选。\n\n  点击next。\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%854.png)\n\n- 点击Install，准备安装。\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%855.png)\n\n- 等进度条读取完毕之后，会有最终界面提示。\n\n  点击finish即可。\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%856.png)\n\n- 第一次启动会询问，是否导入一些设置。\n\n  选择第二个不导入，保持默认设置，再点击OK。\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%857.png)\n\n- 选择背景主题\n\n  左边是黑色背景。右边是白色背景。\n\n  这个可以根据自己的喜好来选择。\n\n  选择完毕点击右下角的next\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%858.png)\n\n- 在本界面让我们购买idea。\n\n  因为我们是学习阶段，所以可以使用免费使用30天。\n\n  点击第一排第二个。Evaluate for free\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%859.png)\n\n- 点击蓝色的Evaluate，就可以开始免费试用30天了。\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%8510.png)\n\n- 当看到这个界面，就表示idea已经成功安装完毕\n\n  可以点击右上角关闭。\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%8511.png)\n\n### 8.3 IDEA中层级结构介绍\n\n#### 8.3.1 结构分类\n\n- project（项目、工程）\n- module（模块）\n- package（包）\n- class（类）\n\n#### 8.3.2 结构介绍\n\n​\t为了让大家更好的吸收，package这一层级，我们后面再学习，先学习最基础的project、module、class。\n\n##### project（项目、工程）\n\n​\t淘宝、京东、黑马程序员网站都属于一个个项目，IDEA中就是一个个的Project。\n\n##### module（模块）\n\n​\t在一个项目中，可以存放多个模块，不同的模块可以存放项目中不同的业务功能代码。在黑马程序员的官方网站中，至少包含了以下模块：\n\n- 论坛模块\n- 报名、咨询模块\n\n为了更好的管理代码，我们会把代码分别放在两个模块中存放。\n\n##### package（包）\n\n​\t一个模块中又有很多的业务，以黑马程序员官方网站的论坛模块为例，至少包含了以下不同的业务。\n\n- 发帖\n- 评论\n\n为了把这些业务区分的更加清楚，就会用包来管理这些不同的业务。\n\n##### class（类）\n\n​\t就是真正写代码的地方。\n\n#### 8.3.3 小结\n\n- 层级关系\n\n  ​\tproject - module - package - class\n\n- 包含数量\n\n  ​\tproject中可以创建多个module\n  ​\tmodule中可以创建多个package\n  ​\tpackage中可以创建多个class\n\n  ​\t这些结构的划分，是为了方便管理类文件的。\n\n### 8.4 IDEA中的第一个代码\n\n##### 8.4.1 操作步骤\n\n- 创建Project 项目\n- 创建Module 模块\n- 创建class   类\n- 在类中编写代码\n- 完成编译运行\n\n##### 8.4.2 分步图解\n\n- 双击启动图标\n\n  ![计算机发展](/tupian/idea%E4%BD%BF%E7%94%A81.png)\n\n- 首先要新建一个项目\n\n  点击creat new project\n\n  ![计算机发展](/tupian/idea1.png)\n\n- 我们要从0开始写代码，所以新建一个空的什么都没有的项目。\n\n  点击左下方的Empty Project\n\n  再点击右下角的next\n\n![计算机发展](/tupian/idea2.png)\n\n- 输入项目的名称\n\n  输入项目的存放路径\n\n![计算机发展](/tupian/idea3.png)\n\n- 点击ok。idea会帮助我们在本地创建一个项目文件夹\n\n![计算机发展](/tupian/idea4.png)\n\n- 点击Module，准备新建一个模块\n\n![计算机发展](/tupian/idea5.png)\n\n- 点击+\n\n  再点击New Module\n\n![计算机发展](/tupian/idea6.png)\n\n- 我们要编写Java代码，所以要新建一个Java模块。\n\n  点击Java\n\n  再点击右下角的next\n\n![计算机发展](/tupian/idea7.png)\n\n- 输入模块的名称\n\n  再点击右下角的Next\n\n![计算机发展](/tupian/idea8.png)\n\n- 成功新建一个模块之后，中间就会出现刚刚新建的模块\n\n  点击右下角的OK\n\n![计算机发展](/tupian/idea9.png)\n\n- 回到主界面\n\n  展开刚刚新建的模块\n\n  右键点击src，选择New，选择Java Class\n\n![计算机发展](/tupian/idea10.png)\n\n- 输入类名\n\n  再按回车\n\n![计算机发展](/tupian/idea11.png)\n\n- 由于字体比较小\n\n  所以，我们要设置一下字体。\n\n  点击File，选择Setting。\n\n![计算机发展](/tupian/idea12.png)\n\n- 搜索一下font\n\n  在右边可以输入Size的数值来调节代码字体的大小。\n\n  设置完毕后点击右下角的OK\n\n![计算机发展](/tupian/idea13.png)\n\n- 编写代码\n\n![计算机发展](/tupian/idea14.png)\n\n- 运行代码\n\n  右键空白处，点击Run\n\n![计算机发展](/tupian/idea15.png)\n\n\n\n- 最下面会弹出控制台。\n\n  所有输出语句中的内容，都会在控制台上展示。\n\n![计算机发展](/tupian/idea16.png)\n\n### 8.5 IDEA中类的相关操作\n\n#### 8.5.1 类的相关操作\n\n- 新建类文件\n- 删除类文件\n- 修改类文件\n\n#### 8.5.2 新建类文件\n\n- 所有的Java代码都会写在src文件夹当中。\n\n  所以，右键点击src，选择new，点击Java Class\n\n  ![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E7%B1%BB1.png)\n\n- 输入类名，再按回车\n\n  ![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E7%B1%BB2.png)\n\n- 新建完毕\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E7%B1%BB3.png)\n\n#### 8.5.3 修改类名\n\n- 右键点击想要修改的文件\n\n  点击Refactor\n\n  再点击Rename\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E7%B1%BB%E5%90%8D1.png)\n\n- 输入想要修改的名字\n\n  输入完毕点击下面的Refactor\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E7%B1%BB%E5%90%8D2.png)\n\n- 文件名和类名均已修改成功\n\n  ![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E7%B1%BB%E5%90%8D3.png)\n\n#### 8.5.4 删除类文件\n\n- 想要删除哪个文件，就右键点击该文件\n\n  选择Delete即可\n\n![计算机发展](/tupian/%E5%88%A0%E9%99%A4%E7%B1%BB%E6%96%87%E4%BB%B61.png)\n\n- 在弹出的界面中点击OK，确定删除\n\n![计算机发展](/tupian/%E5%88%A0%E9%99%A4%E7%B1%BB%E6%96%87%E4%BB%B62.png)\n\n> 小贴士：\n>\n> 此时删除是不走回收站的，直接从硬盘中删掉了。\n\n### 8.6 IDEA中模块的相关操作\n\n#### 8.6.1 模块的相关操作\n\n- 新建模块\n- 删除模块\n- 修改模块\n- 导入模块\n\n#### 8.6.2 新建模块\n\n- 点击File，选择Project Structure\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%971.png)\n\n- 选择Module\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%972.png)\n\n- 点击+\n\n  选择New Module\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%973.png)\n\n- 要创建一个Java模块，所以选择第一个Java\n\n  点击右下角的Next\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%974.png)\n\n- 输入模块的名称\n\n  点击右下角的Finish\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%975.png)\n\n- 成功新建完毕之后，在中间空白区域就出现了刚刚新建的模块\n\n  点击右下角的OK\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%976.png)\n\n- 在主界面中，也会出现刚刚新建的模块\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%977.png)\n\n#### 8.6.3 删除模块\n\n- 右键点击模块\n\n  选择Remove Module\n\n![计算机发展](/tupian/%E5%88%A0%E9%99%A4%E6%A8%A1%E5%9D%971.png)\n\n- 选择Remove，表示确定删除\n\n![计算机发展](/tupian/%E5%88%A0%E9%99%A4%E6%A8%A1%E5%9D%972.png)\n\n- 此时发现，在IDEA列表页面，删除的模块已经不在了。\n\n![计算机发展](/tupian/%E5%88%A0%E9%99%A4%E6%A8%A1%E5%9D%973.png)\n\n> 小贴士：\n>\n> 此时删除仅仅是从IDEA列表中的删除，在本地硬盘中还是存在的。\n\n#### 8.6.4 修改模块\n\n- 右键点击模块名\n\n  选择Refactor\n\n  再选择Rename\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D1.png)\n\n- 选择第三个修改模块名和本地文件夹名\n\n  点击OK\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D3.png)\n\n- 输入要修改的新的模块名\n\n  输入完毕点击Refactor\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D4.png)\n\n- 回到主界面，就发现模块名和文件夹名都已经修改完毕\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D5.png)\n\n\n\n#### 8.6.5 导入模块\n\n- 点击File，选择Project Structure\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%971.png)\n\n- 选择Module\n\n  点击+\n\n  选择Import Module\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%972.png)\n\n- 从本地硬盘中选择要导入的模块\n\n  再点击OK\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%973.png)\n\n- 不断点击Next\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%974.png)\n\n- 如果中间出现提示框，则点击Overwrite\n\n  然后继续点击右下角的Next\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%975.png)\n\n- 一直点到finish为止\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%976.png)\n\n- 成功导入后，在中间位置就会出现导入的模块信息\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%977.png)\n\n- 在主界面中也会出现导入的模块信息\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%978.png)\n\n\n\n- 展开模块点击模块中的Java文件，会发现代码报错。\n\n  是因为导入模块跟JDK没有关联导致。\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%979.png)\n\n\n\n- 可以点击右上角的Setup SDK\n\n  再选择已经安装的JDK版本即可\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%9710.png)\n\n- 导入完毕之后，代码就恢复正常不会报错了\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%9711.png)\n\n### 8.7 IDEA中项目的相关操作\n\n#### 8.7.1 项目的相关操作\n\n- 关闭项目\n- 打开项目\n- 修改项目\n- 新建项目\n\n#### 8.7.2 关闭项目\n\n- 点击File，选择Close Project即可\n\n![计算机发展](/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE1.png)\n\n- 刚刚操作的项目就已经关闭了\n\n  左侧是项目列表，如果要再次打开该项目，直接点击即可。\n\n  右侧有create new project，可以再建一个新的项目\n\n![计算机发展](/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE2.png)\n\n- 鼠标放在项目上，后面会出现一个叉。\n\n  如果点击了这里的叉，会在IDEA的列表中删除。不会删除本地硬盘上的项目。\n\n![计算机发展](/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE3.png)\n\n#### 8.7.3 打开项目\n\n- 在本界面还可以打开本地已经存在的项目\n\n  点击Open or Import\n\n![计算机发展](/tupian/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE1.png)\n\n- 选择要打开的项目\n\n  点击OK\n\n![计算机发展](/tupian/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE2.png)\n\n- 项目就被打开了。\n\n![计算机发展](/tupian/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE3.png)\n\n#### 8.7.4 修改项目\n\n- 点击File，选择Project Structure\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE1.png)\n\n- 在这个界面，默认是Module\n\n  所以，要先点击Project\n\n  在右侧页面中，输入新的项目名称\n\n  修改JDK版本和编译版本都变成JDK14\n\n  再点击OK\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE2.png)\n\n- 此时发现，项目名称已经修改完毕\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE3.png)\n\n- 但是本地文件夹的名字还没有修改\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE4.png)\n\n- 需要先关闭当前项目\n\n![计算机发展](/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE1.png)\n\n- 点击项目后面的叉，从列表中移除项目\n\n![计算机发展](/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE3.png)\n\n- 到本地硬盘中手动修改文件夹的名称\n\n ![计算机发展](F:/JavaSE%E6%9C%80%E6%96%B0%E7%89%88/day02-Java%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/%E7%AC%94%E8%AE%B0//tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE5.png)\n\n- 点击Open or Import重新打开项目\n\n![计算机发展](/tupian/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE1.png)\n\n- 选择修改之后的项目\n\n  点击OK\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE6.png)\n\n- 此时会发现，项目名称和本地硬盘文件夹的名称都已经修改完毕了\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE7.png)\n\n#### 8.7.5 新建项目\n\n- 点击File\n\n  选择New\n\n  点击Project\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE1.png)\n\n- 同样还是创建一个什么都没有的空项目\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE2.png)\n\n- 输入项目的名称\n\n  点击右下角的finish\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE3.png)\n\n- IDEA循环是否需要帮我们在本地创建一个新的文件夹\n\n  点击OK\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE4.png)\n\n- 询问是在本窗口打开还是在一个新的窗口打开。\n\n  可以点击New Window，在一个新的窗口打开。\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE5.png)\n\n- 此时就出现了两个窗口，在一个新的窗口打开了新的项目\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE6.png)\n\n\n\n\n\n\n\n","source":"_posts/day02-Java基础语法.md","raw":"---\ntitle: day02-Java基础语法\ndate: 2024-12-12 16:29:00\ntags:\n    - idea安装及使用\ncategories: java\nphotos: /tupian/j02.jpg\n---\n\n\n\n# day02 - Java基础语法\n\n## 1. 注释\n\n​\t注释是对代码的解释和说明文字。\n\nJava中的注释分为三种：\n\n* 单行注释：\n\n~~~java\n// 这是单行注释文字\n~~~\n\n* 多行注释：\n\n~~~java\n/*\n这是多行注释文字\n这是多行注释文字\n这是多行注释文字\n*/\n注意：多行注释不能嵌套使用。\n~~~\n\n* 文档注释（暂时用不到）：\n\n```java\n/**\n这是多行注释文字\n这是多行注释文字\n这是多行注释文字\n*/\n```\n\n### 使用的技巧\n\n​\t如果我们要对代码进行解释，那么就可以使用注释。\n\n​\t当注释的内容比较少，一行就写完了，可以用单行注释。\n\n​\t如果注释的内容比较多，需要写在多行，那么可以使用多行注释。\n\n### 注意点\n\n​\t注释的内容不会参与编译和运行的，仅仅是对代码的解释说明而已。\n\n​\t所以，不管在注释当中写什么内容，都不会影响代码运行的结果。\n\n## 2. 关键字\n\n### 2.1 概念\n\n​\t被Java赋予了特定含义的英文单词。\n\n​\t当我们在代码中写了关键字之后，程序在运行的时候，就知道要做什么事情了。\n\n注意：关键字很多，不用刻意去记。\n\n| **abstract**   | **assert**       | **boolean**   | **break**      | **byte**   |\n| -------------- | ---------------- | ------------- | -------------- | ---------- |\n| **case**       | **catch**        | **char**      | **class**      | **const**  |\n| **continue**   | **default**      | **do**        | **double**     | **else**   |\n| **enum**       | **extends**      | **final**     | **finally**    | **float**  |\n| **for**        | **goto**         | **if**        | **implements** | **import** |\n| **instanceof** | **int**          | **interface** | **long**       | **native** |\n| **new**        | **package**      | **private**   | **protected**  | **public** |\n| **return**     | **strictfp**     | **short**     | **static**     | **super**  |\n| **switch**     | **synchronized** | **this**      | **throw**      | **throws** |\n| **transient**  | **try**          | **void**      | **volatile**   | **while**  |\n\n### 2.2 第一个关键字class\n\n​\t表示定义一个类。创建一个类。\n\n类：Java项目最基本的组成单元，一个完整的Java项目有可能会有成千上万个类来组成的。\n\nclass后面跟随的就是这个类的名字，简称：类名。\n\n在类名后面会有一对大括号，表示这个类的内容。\n\n举例：\n\n```java\npublic class HelloWorld{\n    \n   \n}\n```\n\n解释：class表示定义类。\n\n​\t类名：HelloWorld\n\n​\tHelloWorld后面的大括号表示这个类的范围。\n\n## 3. 字面量\n\n作用：告诉程序员，数据在程序中的书写格式。\n\n| **字面量类型** | **说明**                                  | **程序中的写法**           |\n| -------------- | ----------------------------------------- | -------------------------- |\n| 整数           | 不带小数的数字                            | 666，-88                   |\n| 小数           | 带小数的数字                              | 13.14，-5.21               |\n| 字符           | 必须使用单引号，有且仅能一个字符          | ‘A’，‘0’，   ‘我’          |\n| 字符串         | 必须使用双引号，内容可有可无              | “HelloWorld”，“黑马程序员” |\n| 布尔值         | 布尔值，表示真假，只有两个值：true，false | true 、false               |\n| 空值           | 一个特殊的值，空值                        | 值是：null                 |\n\n~~~java\npublic class Demo {\n    public static void main(String[] args) {\n        System.out.println(10); // 输出一个整数\n        System.out.println(5.5); // 输出一个小数\n        System.out.println('a'); // 输出一个字符\n        System.out.println(true); // 输出boolean值true\n        System.out.println(\"欢迎来到黑马程序员\"); // 输出字符串\n    }\n}\n~~~\n\n### 区分技巧\n\n1. 不带小数点的数字都是整数类型的字面量。\n2. 只要带了小数点，那么就是小数类型的字面量。\n3. 只要用双引号引起来的，不管里面的内容是什么，不管里面有没有内容，都是字符串类型的字面量。\n4. 字符类型的字面量必须用单引号引起来，不管内容是什么，但是个数有且只能有一个。\n5. 字符类型的字面量只有两个值，true、false。\n6. 空类型的字面量只有一个值，null。\n\n## 4. 变量\n\n### 4.1 什么是变量？\n\n​\t变量就在程序中临时存储数据的容器。但是这个容器中只能存一个值。\n\n### 4.2 变量的定义格式\n\n​\t数据类型 变量名 = 数据值；\n\n#### 4.2.1 格式详解\n\n​\t数据类型：限定了变量当中能存储什么类型的数据。\n\n​\t\t\t   如果要存10，那么数据类型就需要写整数类型。\n\n​\t\t\t   如果要存10.0，那么数据类型就需要写小数类型。\n\n​\t变量名：其实就是这个容器的名字。\n\n​\t\t\t当以后想要使用变量里面的数据时，直接使用变量名就可以了。\n\n​\t数据值：真正存储在容器中的数据。\n\n​\t分号：表示语句的结束，就跟以前写作文时候的句号是一样的。\n\n#### 4.2.2 常用的数据类型\n\n​\t整数：int\n\n​\t小数：（浮点数）double\n\n​\t其他数据类型稍后讲解\n\n举例：\n\n```java\npublic class VariableDemo{\n\tpublic static void main(String[] args){\n\t\t//定义一个整数类型的变量\n\t\t//数据类型 变量名 = 数据值;\n\t\tint a = 16;\n\t\tSystem.out.println(a);//16\n\t\t\n\t\t//定义一个小数类型的变量\n\t\tdouble b = 10.1;\n\t\tSystem.out.println(b);//10.1\n\t}\n}\n```\n\n#### 4.2.3 变量的注意事项\n\n- 变量名不能重复\n- 在一条语句中，可以定义多个变量。但是这种方式影响代码的阅读，所以了解一下即可。\n- 变量在使用之前必须要赋值。\n\n案例：\n\n```java\npublic class VariableDemo2{\n\tpublic static void main(String[] args){\n\t\t//1.变量名不允许重复\n\t\t//int a = 10;\n\t\t//int a = 20;\n\t\t//System.out.println(a);\n\t\t\n\t\t//2.一条语句可以定义多个变量\n\t\t//了解。\n\t\t//int a = 10, b = 20, c = 20,d = 20;\n\t\t//System.out.println(a);//?\n\t\t//System.out.println(b);//?\n\t\t\n\t\t\n\t\t//3.变量在使用之前必须要赋值\n\t\tint a = 30;\n\t\tSystem.out.println(a);\n\t}\n}\n```\n\n### 4.3 变量的练习\n\n​\t需求：说出公交车到终点站之后，车上一共有多少乘客？\n\n​\t\t    一开始没有乘客。\n\n​\t\t   第一站：上去一位乘客，没有下来乘客。\n\n​\t\t   第二站：上去两位乘客，下来一位乘客。\n\n​\t\t   第三站：上去两位乘客，下来一位乘客。\n\n​\t\t   第四站：没有上去乘客，下来一位乘客。\n\n​\t\t   第五站：上去一位乘客，没有下来乘客。\n\n​\t\t   问：到了终点站之后，车上一共多少乘客？\n\n​\t代码解析：\n\n```java\npublic class VariableTest1{\n\t//主入口\n\tpublic static void main(String[] args){\n\t\t//一开始没有乘客。\n\t\tint count = 0;\n\t\t//第一站：上去一位乘客\n\t\t//在原有的基础上 + 1\n\t\tcount = count + 1;\n\t\t//System.out.println(count);\n\t\t//第二站：上去两位乘客，下来一位乘客\n\t\tcount = count + 2 - 1; \n\t\t//第三站：上去两位乘客，下来一位乘客\n\t\tcount = count + 2 - 1;\n\t\t//第四站：下来一位乘客\n\t\tcount = count - 1;\n\t\t//第五站：上去一位乘客\n\t\tcount = count + 1;\n\t\t//请问：到了终点站，车上一共几位乘客。\n\t\tSystem.out.println(count);//3\n\t}\n}\n```\n\n## 5. 数据类型\n\n### 5.1 Java语言数据类型的分类\n\n- 基本数据类型\n- 引用数据类型（面向对象的时候再深入学习）\n\n### 5.2 基本数据类型的四类八种\n\n| 数据类型 | 关键字  | 内存占用 |                 取值范围                  |\n| :------: | :-----: | :------: | :---------------------------------------: |\n|   整数   |  byte   |    1     |    负的2的7次方 ~ 2的7次方-1(-128~127)    |\n|          |  short  |    2     | 负的2的15次方 ~ 2的15次方-1(-32768~32767) |\n|          |   int   |    4     |        负的2的31次方 ~ 2的31次方-1        |\n|          |  long   |    8     |        负的2的63次方 ~ 2的63次方-1        |\n|  浮点数  |  float  |    4     |        1.401298e-45 ~ 3.402823e+38        |\n|          | double  |    8     |      4.9000000e-324 ~ 1.797693e+308       |\n|   字符   |  char   |    2     |                  0-65535                  |\n|   布尔   | boolean |    1     |                true，false                |\n\n#### 说明\n\n​\te+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。\n\n​\t在java中整数默认是int类型，浮点数默认是double类型。\n\n#### 需要记忆以下几点\n\nbyte类型的取值范围：\n\n​\t-128 ~ 127\n\nint类型的大概取值范围：\n\n​\t-21亿多  ~ 21亿多\n\n整数类型和小数类型的取值范围大小关系：\n\n​\tdouble > float > long > int > short > byte\n\n最为常用的数据类型选择：\n\n- 在定义变量的时候，要根据实际的情况来选择不同类型的变量。\n\n  比如：人的年龄，可以选择byte类型。\n\n  比如：地球的年龄，可以选择long类型。\n\n- 如果整数类型中，不太确定范围，那么默认使用int类型。\n\n- 如果小数类型中，不太确定范围，那么默认使用double类型。\n\n- 如果要定义字符类型的变量，那么使用char\n\n- 如果要定义布尔类型的变量，那么使用boolean\n\n### 5.3 定义8种基本数据类型变量\n\n```java\npublic class VariableDemo3{\n    public static void main(String[] args){\n        //1.定义byte类型的变量\n        //数据类型 变量名 = 数据值;\n        byte a = 10;\n        System.out.println(a);\n\n        //2.定义short类型的变量\n        short b = 20;\n        System.out.println(b);\n\n        //3.定义int类型的变量\n        int c = 30;\n        System.out.println(c);\n\n        //4.定义long类型的变量\n        long d = 123456789123456789L;\n        System.out.println(d);\n\n        //5.定义float类型的变量\n        float e = 10.1F;\n        System.out.println(e);\n\n        //6.定义double类型的变量\n        double f = 20.3;\n        System.out.println(f);\n\n        //7.定义char类型的变量\n        char g = 'a';\n        System.out.println(g);\n\n        //8.定义boolean类型的变量\n        boolean h = true;\n        System.out.println(h);\n\n    }\n}\n```\n\n#### **注意点**\n\n- 如果要定义 一个整数类型的变量，不知道选择哪种数据类型了，默认使用int。\n- 如果要定义 一个小数类型的变量，不知道选择哪种数据类型了，默认使用double。\n- 如果要定义一个long类型的变量，那么在数据值的后面需要加上L后缀。（大小写都可以，建议大写。）\n- 如果要定义一个float类型的变量，那么在数据值的后面需要加上F后缀。（大小写都可以）\n\n### 5.4 练习1\n\n需求：定义5个变量记录老师的信息并打印\n\n代码示例：\n\n```java\npublic class VariableTest1{\n\tpublic static void main(String[] args){\n\t\t//1.定义字符串类型的变量记录老师的姓名\n\t\tString name = \"黑马谢广坤\";\n\t\t//2.定义整数类型的变量记录老师的年龄\n\t\tint age = 18;\n\t\t//3.定义字符类型的变量记录老师的性别\n\t\tchar gender = '男';\n\t\t//4.定义小数类型的变量记录老师的身高\n\t\tdouble height = 180.1;\n\t\t//5.定义布尔类型的变量记录老师的婚姻状况\n\t\tboolean flag = true;\n\t\t\n\t\t//输出5个变量的值\n\t\tSystem.out.println(name);\n\t\tSystem.out.println(age);\n\t\tSystem.out.println(gender);\n\t\tSystem.out.println(height);\n\t\tSystem.out.println(flag);\n\t\t\n\t}\n}\n```\n\n### 5.5 练习2\n\n需求：将（电影名称，主演，年份，评分）四个信息选择不同类型的变量，随后打印出来。\n\n 代码示例：\n\n```java\npublic class VariableTest2{\n\tpublic static void main(String[] args){\n\t\t//1.定义字符串变量记录电影的名称\n\t\tString movie = \"送初恋回家\";\n\t\t//2.定义三个变量记录主演的名字\n\t\tString name1 = \"刘鑫\";\n\t\tString name2 = \"张雨提\";\n\t\tString name3 = \"高媛\";\n\t\t//3. 定义整数类型的变量记录年龄的年份\n\t\tint year = 2020;\n\t\t//4.定义小数类型的变量记录电影的评分\n\t\tdouble score = 9.0;\n\t\t\n\t\t//打印变量的信息\n\t\tSystem.out.println(movie);\n\t\tSystem.out.println(name1);\n\t\tSystem.out.println(name2);\n\t\tSystem.out.println(name3);\n\t\tSystem.out.println(year);\n\t\tSystem.out.println(score);\n\t\t\n\t}\n}\n```\n\n### 5.6 练习3\n\n需求：选择其中一部手机，将（手机价格，手机品牌）两个信息选择不同类型的变量，随后打印出来。 \n\n 代码示例：\n\n```java\npublic class VariableTest3{\n\tpublic static void main(String[] args){\n\t\t//1.定义小数类型的变量记录手机的价格\n\t\tdouble price = 5299.0;\n\t\t\n\t\t//2.定义字符串类型的变量记录手机的品牌\n\t\tString brand = \"华为\";\n\t\t\n\t\t//输出变量记录的值\n\t\tSystem.out.println(price);\n\t\tSystem.out.println(brand);\n\t}\n}\n```\n\n## 6. 标识符\n\n业内大多数程序员都在遵守阿里巴巴的命名规则。\n\n在day02的资料文件夹中有。\n\n### 6.1 硬性要求：\n\n​\t必须要这么做，否则代码会报错。\n\n- 必须由数字、字母、下划线_、美元符号$组成。\n- 数字不能开头\n- 不能是关键字\n- 区分大小写的。\n\n### 6.2 软件建议：\n\n​\t如果不这么做，代码不会报错，但是会让代码显得比较low。\n\n### 6.2.1 小驼峰命名法\n\n适用于变量名和方法名\n\n* 如果是一个单词，那么全部小写，比如：name\n\n* 如果是多个单词，那么从第二个单词开始，首字母大写，比如：firstName、maxAge\n\n### 6.2.2 大驼峰命名法\n\n适用于类名\n\n* 如果是一个单词，那么首字母大写。比如：Demo、Test。\n\n* 如果是多个单词，那么每一个单词首字母都需要大写。比如：HelloWorld\n\n不管起什么名字，都要做到见名知意。\n\n### 阿里巴巴命名规范细节：\n\n1. 尽量不要用拼音。但是一些国际通用的拼音可视为英文单词。\n\n   正确：alibaba、hangzhou、nanjing\n\n   错误：jiage、dazhe\n\n2. 平时在给变量名、方法名、类名起名字的时候，不要使用下划线或美元符号。\n\n   错误：_name\n\n   正确：name\n\n## 7. 键盘录入\n\n​\t键盘录入的实际功能Java已经帮我们写好了，不需要我们自己再实现了，而Java写好的功能都放在了Scanner这个类中，所以，我们只要直接使用Scanner这个类就可以了。\n\n使用步骤：\n\n第一步：\n\n​\t导包：其实就是表示先找到Scanner这个类在哪。\n\n第二步：\n\n​\t创建对象：其实就表示申明一下，我准备开始用Scanner这个类了。\n\n第三步：\n\n​\t接收数据：也是真正干活的代码。\n\n代码示例：\n\n```java\n//导包，其实就是先找到Scanner这个类在哪\nimport java.util.Scanner;\npublic class ScannerDemo1{\n\tpublic static void main(String[] args){\n\t\t//2.创建对象，其实就是申明一下，我准备开始用Scanner这个类了。\n\t\tScanner sc = new Scanner(System.in);\n\t\t//3.接收数据\n\t\t//当程序运行之后，我们在键盘输入的数据就会被变量i给接收了\n\t\tSystem.out.println(\"请输入一个数字\");\n\t\tint i = sc.nextInt();\n\t\tSystem.out.println(i);\n\t}\n}\n```\n\n## 8. IDEA\n\n### 8.1 IDEA概述\n\n​\tIDEA全称IntelliJ IDEA，是用于Java语言开发的集成环境，它是业界公认的目前用于Java程序开发最好的工具。\n\n**集成环境：**\n\n​\t把代码编写，编译，执行，调试等多种功能综合到一起的开发工具。\n\n### 8.2 IDEA的下载和安装\n\n#### 8.2.1 下载\n\n​\t可以到官方网站自行下载，网址为：https://www.jetbrains.com/idea\n\n​\t今天的资料中，对应的安装包也提高给大家了。\n\n#### 8.2.2 安装\n\n- 到资料文件夹中，双击安装包。\n- 点击next，准备安装\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%851.png)\n\n- 点击Browse修改安装路径。\n\n  修改完毕点击next\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%852.png)\n\n- 勾选64-bit launcher。表示在桌面新建一个64位的快捷方式。\n\n  其他的不要勾选。\n\n  点击next。\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%854.png)\n\n- 点击Install，准备安装。\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%855.png)\n\n- 等进度条读取完毕之后，会有最终界面提示。\n\n  点击finish即可。\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%856.png)\n\n- 第一次启动会询问，是否导入一些设置。\n\n  选择第二个不导入，保持默认设置，再点击OK。\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%857.png)\n\n- 选择背景主题\n\n  左边是黑色背景。右边是白色背景。\n\n  这个可以根据自己的喜好来选择。\n\n  选择完毕点击右下角的next\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%858.png)\n\n- 在本界面让我们购买idea。\n\n  因为我们是学习阶段，所以可以使用免费使用30天。\n\n  点击第一排第二个。Evaluate for free\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%859.png)\n\n- 点击蓝色的Evaluate，就可以开始免费试用30天了。\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%8510.png)\n\n- 当看到这个界面，就表示idea已经成功安装完毕\n\n  可以点击右上角关闭。\n\n![计算机发展](/tupian/idea%E5%AE%89%E8%A3%8511.png)\n\n### 8.3 IDEA中层级结构介绍\n\n#### 8.3.1 结构分类\n\n- project（项目、工程）\n- module（模块）\n- package（包）\n- class（类）\n\n#### 8.3.2 结构介绍\n\n​\t为了让大家更好的吸收，package这一层级，我们后面再学习，先学习最基础的project、module、class。\n\n##### project（项目、工程）\n\n​\t淘宝、京东、黑马程序员网站都属于一个个项目，IDEA中就是一个个的Project。\n\n##### module（模块）\n\n​\t在一个项目中，可以存放多个模块，不同的模块可以存放项目中不同的业务功能代码。在黑马程序员的官方网站中，至少包含了以下模块：\n\n- 论坛模块\n- 报名、咨询模块\n\n为了更好的管理代码，我们会把代码分别放在两个模块中存放。\n\n##### package（包）\n\n​\t一个模块中又有很多的业务，以黑马程序员官方网站的论坛模块为例，至少包含了以下不同的业务。\n\n- 发帖\n- 评论\n\n为了把这些业务区分的更加清楚，就会用包来管理这些不同的业务。\n\n##### class（类）\n\n​\t就是真正写代码的地方。\n\n#### 8.3.3 小结\n\n- 层级关系\n\n  ​\tproject - module - package - class\n\n- 包含数量\n\n  ​\tproject中可以创建多个module\n  ​\tmodule中可以创建多个package\n  ​\tpackage中可以创建多个class\n\n  ​\t这些结构的划分，是为了方便管理类文件的。\n\n### 8.4 IDEA中的第一个代码\n\n##### 8.4.1 操作步骤\n\n- 创建Project 项目\n- 创建Module 模块\n- 创建class   类\n- 在类中编写代码\n- 完成编译运行\n\n##### 8.4.2 分步图解\n\n- 双击启动图标\n\n  ![计算机发展](/tupian/idea%E4%BD%BF%E7%94%A81.png)\n\n- 首先要新建一个项目\n\n  点击creat new project\n\n  ![计算机发展](/tupian/idea1.png)\n\n- 我们要从0开始写代码，所以新建一个空的什么都没有的项目。\n\n  点击左下方的Empty Project\n\n  再点击右下角的next\n\n![计算机发展](/tupian/idea2.png)\n\n- 输入项目的名称\n\n  输入项目的存放路径\n\n![计算机发展](/tupian/idea3.png)\n\n- 点击ok。idea会帮助我们在本地创建一个项目文件夹\n\n![计算机发展](/tupian/idea4.png)\n\n- 点击Module，准备新建一个模块\n\n![计算机发展](/tupian/idea5.png)\n\n- 点击+\n\n  再点击New Module\n\n![计算机发展](/tupian/idea6.png)\n\n- 我们要编写Java代码，所以要新建一个Java模块。\n\n  点击Java\n\n  再点击右下角的next\n\n![计算机发展](/tupian/idea7.png)\n\n- 输入模块的名称\n\n  再点击右下角的Next\n\n![计算机发展](/tupian/idea8.png)\n\n- 成功新建一个模块之后，中间就会出现刚刚新建的模块\n\n  点击右下角的OK\n\n![计算机发展](/tupian/idea9.png)\n\n- 回到主界面\n\n  展开刚刚新建的模块\n\n  右键点击src，选择New，选择Java Class\n\n![计算机发展](/tupian/idea10.png)\n\n- 输入类名\n\n  再按回车\n\n![计算机发展](/tupian/idea11.png)\n\n- 由于字体比较小\n\n  所以，我们要设置一下字体。\n\n  点击File，选择Setting。\n\n![计算机发展](/tupian/idea12.png)\n\n- 搜索一下font\n\n  在右边可以输入Size的数值来调节代码字体的大小。\n\n  设置完毕后点击右下角的OK\n\n![计算机发展](/tupian/idea13.png)\n\n- 编写代码\n\n![计算机发展](/tupian/idea14.png)\n\n- 运行代码\n\n  右键空白处，点击Run\n\n![计算机发展](/tupian/idea15.png)\n\n\n\n- 最下面会弹出控制台。\n\n  所有输出语句中的内容，都会在控制台上展示。\n\n![计算机发展](/tupian/idea16.png)\n\n### 8.5 IDEA中类的相关操作\n\n#### 8.5.1 类的相关操作\n\n- 新建类文件\n- 删除类文件\n- 修改类文件\n\n#### 8.5.2 新建类文件\n\n- 所有的Java代码都会写在src文件夹当中。\n\n  所以，右键点击src，选择new，点击Java Class\n\n  ![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E7%B1%BB1.png)\n\n- 输入类名，再按回车\n\n  ![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E7%B1%BB2.png)\n\n- 新建完毕\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E7%B1%BB3.png)\n\n#### 8.5.3 修改类名\n\n- 右键点击想要修改的文件\n\n  点击Refactor\n\n  再点击Rename\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E7%B1%BB%E5%90%8D1.png)\n\n- 输入想要修改的名字\n\n  输入完毕点击下面的Refactor\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E7%B1%BB%E5%90%8D2.png)\n\n- 文件名和类名均已修改成功\n\n  ![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E7%B1%BB%E5%90%8D3.png)\n\n#### 8.5.4 删除类文件\n\n- 想要删除哪个文件，就右键点击该文件\n\n  选择Delete即可\n\n![计算机发展](/tupian/%E5%88%A0%E9%99%A4%E7%B1%BB%E6%96%87%E4%BB%B61.png)\n\n- 在弹出的界面中点击OK，确定删除\n\n![计算机发展](/tupian/%E5%88%A0%E9%99%A4%E7%B1%BB%E6%96%87%E4%BB%B62.png)\n\n> 小贴士：\n>\n> 此时删除是不走回收站的，直接从硬盘中删掉了。\n\n### 8.6 IDEA中模块的相关操作\n\n#### 8.6.1 模块的相关操作\n\n- 新建模块\n- 删除模块\n- 修改模块\n- 导入模块\n\n#### 8.6.2 新建模块\n\n- 点击File，选择Project Structure\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%971.png)\n\n- 选择Module\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%972.png)\n\n- 点击+\n\n  选择New Module\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%973.png)\n\n- 要创建一个Java模块，所以选择第一个Java\n\n  点击右下角的Next\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%974.png)\n\n- 输入模块的名称\n\n  点击右下角的Finish\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%975.png)\n\n- 成功新建完毕之后，在中间空白区域就出现了刚刚新建的模块\n\n  点击右下角的OK\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%976.png)\n\n- 在主界面中，也会出现刚刚新建的模块\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%977.png)\n\n#### 8.6.3 删除模块\n\n- 右键点击模块\n\n  选择Remove Module\n\n![计算机发展](/tupian/%E5%88%A0%E9%99%A4%E6%A8%A1%E5%9D%971.png)\n\n- 选择Remove，表示确定删除\n\n![计算机发展](/tupian/%E5%88%A0%E9%99%A4%E6%A8%A1%E5%9D%972.png)\n\n- 此时发现，在IDEA列表页面，删除的模块已经不在了。\n\n![计算机发展](/tupian/%E5%88%A0%E9%99%A4%E6%A8%A1%E5%9D%973.png)\n\n> 小贴士：\n>\n> 此时删除仅仅是从IDEA列表中的删除，在本地硬盘中还是存在的。\n\n#### 8.6.4 修改模块\n\n- 右键点击模块名\n\n  选择Refactor\n\n  再选择Rename\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D1.png)\n\n- 选择第三个修改模块名和本地文件夹名\n\n  点击OK\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D3.png)\n\n- 输入要修改的新的模块名\n\n  输入完毕点击Refactor\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D4.png)\n\n- 回到主界面，就发现模块名和文件夹名都已经修改完毕\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D5.png)\n\n\n\n#### 8.6.5 导入模块\n\n- 点击File，选择Project Structure\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%971.png)\n\n- 选择Module\n\n  点击+\n\n  选择Import Module\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%972.png)\n\n- 从本地硬盘中选择要导入的模块\n\n  再点击OK\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%973.png)\n\n- 不断点击Next\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%974.png)\n\n- 如果中间出现提示框，则点击Overwrite\n\n  然后继续点击右下角的Next\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%975.png)\n\n- 一直点到finish为止\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%976.png)\n\n- 成功导入后，在中间位置就会出现导入的模块信息\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%977.png)\n\n- 在主界面中也会出现导入的模块信息\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%978.png)\n\n\n\n- 展开模块点击模块中的Java文件，会发现代码报错。\n\n  是因为导入模块跟JDK没有关联导致。\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%979.png)\n\n\n\n- 可以点击右上角的Setup SDK\n\n  再选择已经安装的JDK版本即可\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%9710.png)\n\n- 导入完毕之后，代码就恢复正常不会报错了\n\n![计算机发展](/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%9711.png)\n\n### 8.7 IDEA中项目的相关操作\n\n#### 8.7.1 项目的相关操作\n\n- 关闭项目\n- 打开项目\n- 修改项目\n- 新建项目\n\n#### 8.7.2 关闭项目\n\n- 点击File，选择Close Project即可\n\n![计算机发展](/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE1.png)\n\n- 刚刚操作的项目就已经关闭了\n\n  左侧是项目列表，如果要再次打开该项目，直接点击即可。\n\n  右侧有create new project，可以再建一个新的项目\n\n![计算机发展](/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE2.png)\n\n- 鼠标放在项目上，后面会出现一个叉。\n\n  如果点击了这里的叉，会在IDEA的列表中删除。不会删除本地硬盘上的项目。\n\n![计算机发展](/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE3.png)\n\n#### 8.7.3 打开项目\n\n- 在本界面还可以打开本地已经存在的项目\n\n  点击Open or Import\n\n![计算机发展](/tupian/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE1.png)\n\n- 选择要打开的项目\n\n  点击OK\n\n![计算机发展](/tupian/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE2.png)\n\n- 项目就被打开了。\n\n![计算机发展](/tupian/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE3.png)\n\n#### 8.7.4 修改项目\n\n- 点击File，选择Project Structure\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE1.png)\n\n- 在这个界面，默认是Module\n\n  所以，要先点击Project\n\n  在右侧页面中，输入新的项目名称\n\n  修改JDK版本和编译版本都变成JDK14\n\n  再点击OK\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE2.png)\n\n- 此时发现，项目名称已经修改完毕\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE3.png)\n\n- 但是本地文件夹的名字还没有修改\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE4.png)\n\n- 需要先关闭当前项目\n\n![计算机发展](/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE1.png)\n\n- 点击项目后面的叉，从列表中移除项目\n\n![计算机发展](/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE3.png)\n\n- 到本地硬盘中手动修改文件夹的名称\n\n ![计算机发展](F:/JavaSE%E6%9C%80%E6%96%B0%E7%89%88/day02-Java%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/%E7%AC%94%E8%AE%B0//tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE5.png)\n\n- 点击Open or Import重新打开项目\n\n![计算机发展](/tupian/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE1.png)\n\n- 选择修改之后的项目\n\n  点击OK\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE6.png)\n\n- 此时会发现，项目名称和本地硬盘文件夹的名称都已经修改完毕了\n\n![计算机发展](/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE7.png)\n\n#### 8.7.5 新建项目\n\n- 点击File\n\n  选择New\n\n  点击Project\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE1.png)\n\n- 同样还是创建一个什么都没有的空项目\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE2.png)\n\n- 输入项目的名称\n\n  点击右下角的finish\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE3.png)\n\n- IDEA循环是否需要帮我们在本地创建一个新的文件夹\n\n  点击OK\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE4.png)\n\n- 询问是在本窗口打开还是在一个新的窗口打开。\n\n  可以点击New Window，在一个新的窗口打开。\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE5.png)\n\n- 此时就出现了两个窗口，在一个新的窗口打开了新的项目\n\n![计算机发展](/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE6.png)\n\n\n\n\n\n\n\n","slug":"day02-Java基础语法","published":1,"updated":"2024-12-12T08:49:02.270Z","comments":1,"layout":"post","_id":"cm4ld1o86000aqsto9n7uggca","content":"<h1 id=\"day02-Java基础语法\"><a href=\"#day02-Java基础语法\" class=\"headerlink\" title=\"day02 - Java基础语法\"></a>day02 - Java基础语法</h1><h2 id=\"1-注释\"><a href=\"#1-注释\" class=\"headerlink\" title=\"1. 注释\"></a>1. 注释</h2><p>​\t注释是对代码的解释和说明文字。</p>\n<p>Java中的注释分为三种：</p>\n<ul>\n<li>单行注释：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这是单行注释文字</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>多行注释：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">这是多行注释文字</span></span><br><span class=\"line\"><span class=\"comment\">这是多行注释文字</span></span><br><span class=\"line\"><span class=\"comment\">这是多行注释文字</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">注意：多行注释不能嵌套使用。</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>文档注释（暂时用不到）：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">这是多行注释文字</span></span><br><span class=\"line\"><span class=\"comment\">这是多行注释文字</span></span><br><span class=\"line\"><span class=\"comment\">这是多行注释文字</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用的技巧\"><a href=\"#使用的技巧\" class=\"headerlink\" title=\"使用的技巧\"></a>使用的技巧</h3><p>​\t如果我们要对代码进行解释，那么就可以使用注释。</p>\n<p>​\t当注释的内容比较少，一行就写完了，可以用单行注释。</p>\n<p>​\t如果注释的内容比较多，需要写在多行，那么可以使用多行注释。</p>\n<h3 id=\"注意点\"><a href=\"#注意点\" class=\"headerlink\" title=\"注意点\"></a>注意点</h3><p>​\t注释的内容不会参与编译和运行的，仅仅是对代码的解释说明而已。</p>\n<p>​\t所以，不管在注释当中写什么内容，都不会影响代码运行的结果。</p>\n<h2 id=\"2-关键字\"><a href=\"#2-关键字\" class=\"headerlink\" title=\"2. 关键字\"></a>2. 关键字</h2><h3 id=\"2-1-概念\"><a href=\"#2-1-概念\" class=\"headerlink\" title=\"2.1 概念\"></a>2.1 概念</h3><p>​\t被Java赋予了特定含义的英文单词。</p>\n<p>​\t当我们在代码中写了关键字之后，程序在运行的时候，就知道要做什么事情了。</p>\n<p>注意：关键字很多，不用刻意去记。</p>\n<table>\n<thead>\n<tr>\n<th><strong>abstract</strong></th>\n<th><strong>assert</strong></th>\n<th><strong>boolean</strong></th>\n<th><strong>break</strong></th>\n<th><strong>byte</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>case</strong></td>\n<td><strong>catch</strong></td>\n<td><strong>char</strong></td>\n<td><strong>class</strong></td>\n<td><strong>const</strong></td>\n</tr>\n<tr>\n<td><strong>continue</strong></td>\n<td><strong>default</strong></td>\n<td><strong>do</strong></td>\n<td><strong>double</strong></td>\n<td><strong>else</strong></td>\n</tr>\n<tr>\n<td><strong>enum</strong></td>\n<td><strong>extends</strong></td>\n<td><strong>final</strong></td>\n<td><strong>finally</strong></td>\n<td><strong>float</strong></td>\n</tr>\n<tr>\n<td><strong>for</strong></td>\n<td><strong>goto</strong></td>\n<td><strong>if</strong></td>\n<td><strong>implements</strong></td>\n<td><strong>import</strong></td>\n</tr>\n<tr>\n<td><strong>instanceof</strong></td>\n<td><strong>int</strong></td>\n<td><strong>interface</strong></td>\n<td><strong>long</strong></td>\n<td><strong>native</strong></td>\n</tr>\n<tr>\n<td><strong>new</strong></td>\n<td><strong>package</strong></td>\n<td><strong>private</strong></td>\n<td><strong>protected</strong></td>\n<td><strong>public</strong></td>\n</tr>\n<tr>\n<td><strong>return</strong></td>\n<td><strong>strictfp</strong></td>\n<td><strong>short</strong></td>\n<td><strong>static</strong></td>\n<td><strong>super</strong></td>\n</tr>\n<tr>\n<td><strong>switch</strong></td>\n<td><strong>synchronized</strong></td>\n<td><strong>this</strong></td>\n<td><strong>throw</strong></td>\n<td><strong>throws</strong></td>\n</tr>\n<tr>\n<td><strong>transient</strong></td>\n<td><strong>try</strong></td>\n<td><strong>void</strong></td>\n<td><strong>volatile</strong></td>\n<td><strong>while</strong></td>\n</tr>\n</tbody></table>\n<h3 id=\"2-2-第一个关键字class\"><a href=\"#2-2-第一个关键字class\" class=\"headerlink\" title=\"2.2 第一个关键字class\"></a>2.2 第一个关键字class</h3><p>​\t表示定义一个类。创建一个类。</p>\n<p>类：Java项目最基本的组成单元，一个完整的Java项目有可能会有成千上万个类来组成的。</p>\n<p>class后面跟随的就是这个类的名字，简称：类名。</p>\n<p>在类名后面会有一对大括号，表示这个类的内容。</p>\n<p>举例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloWorld</span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>解释：class表示定义类。</p>\n<p>​\t类名：HelloWorld</p>\n<p>​\tHelloWorld后面的大括号表示这个类的范围。</p>\n<h2 id=\"3-字面量\"><a href=\"#3-字面量\" class=\"headerlink\" title=\"3. 字面量\"></a>3. 字面量</h2><p>作用：告诉程序员，数据在程序中的书写格式。</p>\n<table>\n<thead>\n<tr>\n<th><strong>字面量类型</strong></th>\n<th><strong>说明</strong></th>\n<th><strong>程序中的写法</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>整数</td>\n<td>不带小数的数字</td>\n<td>666，-88</td>\n</tr>\n<tr>\n<td>小数</td>\n<td>带小数的数字</td>\n<td>13.14，-5.21</td>\n</tr>\n<tr>\n<td>字符</td>\n<td>必须使用单引号，有且仅能一个字符</td>\n<td>‘A’，‘0’，   ‘我’</td>\n</tr>\n<tr>\n<td>字符串</td>\n<td>必须使用双引号，内容可有可无</td>\n<td>“HelloWorld”，“黑马程序员”</td>\n</tr>\n<tr>\n<td>布尔值</td>\n<td>布尔值，表示真假，只有两个值：true，false</td>\n<td>true 、false</td>\n</tr>\n<tr>\n<td>空值</td>\n<td>一个特殊的值，空值</td>\n<td>值是：null</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"number\">10</span>); <span class=\"comment\">// 输出一个整数</span></span><br><span class=\"line\">        System.out.println(<span class=\"number\">5.5</span>); <span class=\"comment\">// 输出一个小数</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&#x27;a&#x27;</span>); <span class=\"comment\">// 输出一个字符</span></span><br><span class=\"line\">        System.out.println(<span class=\"literal\">true</span>); <span class=\"comment\">// 输出boolean值true</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;欢迎来到黑马程序员&quot;</span>); <span class=\"comment\">// 输出字符串</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"区分技巧\"><a href=\"#区分技巧\" class=\"headerlink\" title=\"区分技巧\"></a>区分技巧</h3><ol>\n<li>不带小数点的数字都是整数类型的字面量。</li>\n<li>只要带了小数点，那么就是小数类型的字面量。</li>\n<li>只要用双引号引起来的，不管里面的内容是什么，不管里面有没有内容，都是字符串类型的字面量。</li>\n<li>字符类型的字面量必须用单引号引起来，不管内容是什么，但是个数有且只能有一个。</li>\n<li>字符类型的字面量只有两个值，true、false。</li>\n<li>空类型的字面量只有一个值，null。</li>\n</ol>\n<h2 id=\"4-变量\"><a href=\"#4-变量\" class=\"headerlink\" title=\"4. 变量\"></a>4. 变量</h2><h3 id=\"4-1-什么是变量？\"><a href=\"#4-1-什么是变量？\" class=\"headerlink\" title=\"4.1 什么是变量？\"></a>4.1 什么是变量？</h3><p>​\t变量就在程序中临时存储数据的容器。但是这个容器中只能存一个值。</p>\n<h3 id=\"4-2-变量的定义格式\"><a href=\"#4-2-变量的定义格式\" class=\"headerlink\" title=\"4.2 变量的定义格式\"></a>4.2 变量的定义格式</h3><p>​\t数据类型 变量名 &#x3D; 数据值；</p>\n<h4 id=\"4-2-1-格式详解\"><a href=\"#4-2-1-格式详解\" class=\"headerlink\" title=\"4.2.1 格式详解\"></a>4.2.1 格式详解</h4><p>​\t数据类型：限定了变量当中能存储什么类型的数据。</p>\n<p>​\t\t\t   如果要存10，那么数据类型就需要写整数类型。</p>\n<p>​\t\t\t   如果要存10.0，那么数据类型就需要写小数类型。</p>\n<p>​\t变量名：其实就是这个容器的名字。</p>\n<p>​\t\t\t当以后想要使用变量里面的数据时，直接使用变量名就可以了。</p>\n<p>​\t数据值：真正存储在容器中的数据。</p>\n<p>​\t分号：表示语句的结束，就跟以前写作文时候的句号是一样的。</p>\n<h4 id=\"4-2-2-常用的数据类型\"><a href=\"#4-2-2-常用的数据类型\" class=\"headerlink\" title=\"4.2.2 常用的数据类型\"></a>4.2.2 常用的数据类型</h4><p>​\t整数：int</p>\n<p>​\t小数：（浮点数）double</p>\n<p>​\t其他数据类型稍后讲解</p>\n<p>举例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">VariableDemo</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//定义一个整数类型的变量</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//数据类型 变量名 = 数据值;</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">16</span>;</span><br><span class=\"line\">\t\tSystem.out.println(a);<span class=\"comment\">//16</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//定义一个小数类型的变量</span></span><br><span class=\"line\">\t\t<span class=\"type\">double</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">10.1</span>;</span><br><span class=\"line\">\t\tSystem.out.println(b);<span class=\"comment\">//10.1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-3-变量的注意事项\"><a href=\"#4-2-3-变量的注意事项\" class=\"headerlink\" title=\"4.2.3 变量的注意事项\"></a>4.2.3 变量的注意事项</h4><ul>\n<li>变量名不能重复</li>\n<li>在一条语句中，可以定义多个变量。但是这种方式影响代码的阅读，所以了解一下即可。</li>\n<li>变量在使用之前必须要赋值。</li>\n</ul>\n<p>案例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">VariableDemo2</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//1.变量名不允许重复</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//int a = 10;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//int a = 20;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//System.out.println(a);</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//2.一条语句可以定义多个变量</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//了解。</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//int a = 10, b = 20, c = 20,d = 20;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//System.out.println(a);//?</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//System.out.println(b);//?</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//3.变量在使用之前必须要赋值</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">30</span>;</span><br><span class=\"line\">\t\tSystem.out.println(a);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-变量的练习\"><a href=\"#4-3-变量的练习\" class=\"headerlink\" title=\"4.3 变量的练习\"></a>4.3 变量的练习</h3><p>​\t需求：说出公交车到终点站之后，车上一共有多少乘客？</p>\n<p>​\t\t    一开始没有乘客。</p>\n<p>​\t\t   第一站：上去一位乘客，没有下来乘客。</p>\n<p>​\t\t   第二站：上去两位乘客，下来一位乘客。</p>\n<p>​\t\t   第三站：上去两位乘客，下来一位乘客。</p>\n<p>​\t\t   第四站：没有上去乘客，下来一位乘客。</p>\n<p>​\t\t   第五站：上去一位乘客，没有下来乘客。</p>\n<p>​\t\t   问：到了终点站之后，车上一共多少乘客？</p>\n<p>​\t代码解析：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">VariableTest1</span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//主入口</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//一开始没有乘客。</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//第一站：上去一位乘客</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//在原有的基础上 + 1</span></span><br><span class=\"line\">\t\tcount = count + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//System.out.println(count);</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//第二站：上去两位乘客，下来一位乘客</span></span><br><span class=\"line\">\t\tcount = count + <span class=\"number\">2</span> - <span class=\"number\">1</span>; </span><br><span class=\"line\">\t\t<span class=\"comment\">//第三站：上去两位乘客，下来一位乘客</span></span><br><span class=\"line\">\t\tcount = count + <span class=\"number\">2</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//第四站：下来一位乘客</span></span><br><span class=\"line\">\t\tcount = count - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//第五站：上去一位乘客</span></span><br><span class=\"line\">\t\tcount = count + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//请问：到了终点站，车上一共几位乘客。</span></span><br><span class=\"line\">\t\tSystem.out.println(count);<span class=\"comment\">//3</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-数据类型\"><a href=\"#5-数据类型\" class=\"headerlink\" title=\"5. 数据类型\"></a>5. 数据类型</h2><h3 id=\"5-1-Java语言数据类型的分类\"><a href=\"#5-1-Java语言数据类型的分类\" class=\"headerlink\" title=\"5.1 Java语言数据类型的分类\"></a>5.1 Java语言数据类型的分类</h3><ul>\n<li>基本数据类型</li>\n<li>引用数据类型（面向对象的时候再深入学习）</li>\n</ul>\n<h3 id=\"5-2-基本数据类型的四类八种\"><a href=\"#5-2-基本数据类型的四类八种\" class=\"headerlink\" title=\"5.2 基本数据类型的四类八种\"></a>5.2 基本数据类型的四类八种</h3><table>\n<thead>\n<tr>\n<th align=\"center\">数据类型</th>\n<th align=\"center\">关键字</th>\n<th align=\"center\">内存占用</th>\n<th align=\"center\">取值范围</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">整数</td>\n<td align=\"center\">byte</td>\n<td align=\"center\">1</td>\n<td align=\"center\">负的2的7次方 ~ 2的7次方-1(-128~127)</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">short</td>\n<td align=\"center\">2</td>\n<td align=\"center\">负的2的15次方 ~ 2的15次方-1(-32768~32767)</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">int</td>\n<td align=\"center\">4</td>\n<td align=\"center\">负的2的31次方 ~ 2的31次方-1</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">long</td>\n<td align=\"center\">8</td>\n<td align=\"center\">负的2的63次方 ~ 2的63次方-1</td>\n</tr>\n<tr>\n<td align=\"center\">浮点数</td>\n<td align=\"center\">float</td>\n<td align=\"center\">4</td>\n<td align=\"center\">1.401298e-45 ~ 3.402823e+38</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">double</td>\n<td align=\"center\">8</td>\n<td align=\"center\">4.9000000e-324 ~ 1.797693e+308</td>\n</tr>\n<tr>\n<td align=\"center\">字符</td>\n<td align=\"center\">char</td>\n<td align=\"center\">2</td>\n<td align=\"center\">0-65535</td>\n</tr>\n<tr>\n<td align=\"center\">布尔</td>\n<td align=\"center\">boolean</td>\n<td align=\"center\">1</td>\n<td align=\"center\">true，false</td>\n</tr>\n</tbody></table>\n<h4 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h4><p>​\te+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。</p>\n<p>​\t在java中整数默认是int类型，浮点数默认是double类型。</p>\n<h4 id=\"需要记忆以下几点\"><a href=\"#需要记忆以下几点\" class=\"headerlink\" title=\"需要记忆以下几点\"></a>需要记忆以下几点</h4><p>byte类型的取值范围：</p>\n<p>​\t-128 ~ 127</p>\n<p>int类型的大概取值范围：</p>\n<p>​\t-21亿多  ~ 21亿多</p>\n<p>整数类型和小数类型的取值范围大小关系：</p>\n<p>​\tdouble &gt; float &gt; long &gt; int &gt; short &gt; byte</p>\n<p>最为常用的数据类型选择：</p>\n<ul>\n<li><p>在定义变量的时候，要根据实际的情况来选择不同类型的变量。</p>\n<p>比如：人的年龄，可以选择byte类型。</p>\n<p>比如：地球的年龄，可以选择long类型。</p>\n</li>\n<li><p>如果整数类型中，不太确定范围，那么默认使用int类型。</p>\n</li>\n<li><p>如果小数类型中，不太确定范围，那么默认使用double类型。</p>\n</li>\n<li><p>如果要定义字符类型的变量，那么使用char</p>\n</li>\n<li><p>如果要定义布尔类型的变量，那么使用boolean</p>\n</li>\n</ul>\n<h3 id=\"5-3-定义8种基本数据类型变量\"><a href=\"#5-3-定义8种基本数据类型变量\" class=\"headerlink\" title=\"5.3 定义8种基本数据类型变量\"></a>5.3 定义8种基本数据类型变量</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">VariableDemo3</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.定义byte类型的变量</span></span><br><span class=\"line\">        <span class=\"comment\">//数据类型 变量名 = 数据值;</span></span><br><span class=\"line\">        <span class=\"type\">byte</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">        System.out.println(a);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.定义short类型的变量</span></span><br><span class=\"line\">        <span class=\"type\">short</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">        System.out.println(b);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.定义int类型的变量</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"number\">30</span>;</span><br><span class=\"line\">        System.out.println(c);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4.定义long类型的变量</span></span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">d</span> <span class=\"operator\">=</span> <span class=\"number\">123456789123456789L</span>;</span><br><span class=\"line\">        System.out.println(d);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//5.定义float类型的变量</span></span><br><span class=\"line\">        <span class=\"type\">float</span> <span class=\"variable\">e</span> <span class=\"operator\">=</span> <span class=\"number\">10.1F</span>;</span><br><span class=\"line\">        System.out.println(e);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//6.定义double类型的变量</span></span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">f</span> <span class=\"operator\">=</span> <span class=\"number\">20.3</span>;</span><br><span class=\"line\">        System.out.println(f);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//7.定义char类型的变量</span></span><br><span class=\"line\">        <span class=\"type\">char</span> <span class=\"variable\">g</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">        System.out.println(g);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//8.定义boolean类型的变量</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">h</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        System.out.println(h);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"注意点-1\"><a href=\"#注意点-1\" class=\"headerlink\" title=\"注意点\"></a><strong>注意点</strong></h4><ul>\n<li>如果要定义 一个整数类型的变量，不知道选择哪种数据类型了，默认使用int。</li>\n<li>如果要定义 一个小数类型的变量，不知道选择哪种数据类型了，默认使用double。</li>\n<li>如果要定义一个long类型的变量，那么在数据值的后面需要加上L后缀。（大小写都可以，建议大写。）</li>\n<li>如果要定义一个float类型的变量，那么在数据值的后面需要加上F后缀。（大小写都可以）</li>\n</ul>\n<h3 id=\"5-4-练习1\"><a href=\"#5-4-练习1\" class=\"headerlink\" title=\"5.4 练习1\"></a>5.4 练习1</h3><p>需求：定义5个变量记录老师的信息并打印</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">VariableTest1</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//1.定义字符串类型的变量记录老师的姓名</span></span><br><span class=\"line\">\t\t<span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;黑马谢广坤&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//2.定义整数类型的变量记录老师的年龄</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">age</span> <span class=\"operator\">=</span> <span class=\"number\">18</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//3.定义字符类型的变量记录老师的性别</span></span><br><span class=\"line\">\t\t<span class=\"type\">char</span> <span class=\"variable\">gender</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;男&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//4.定义小数类型的变量记录老师的身高</span></span><br><span class=\"line\">\t\t<span class=\"type\">double</span> <span class=\"variable\">height</span> <span class=\"operator\">=</span> <span class=\"number\">180.1</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//5.定义布尔类型的变量记录老师的婚姻状况</span></span><br><span class=\"line\">\t\t<span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出5个变量的值</span></span><br><span class=\"line\">\t\tSystem.out.println(name);</span><br><span class=\"line\">\t\tSystem.out.println(age);</span><br><span class=\"line\">\t\tSystem.out.println(gender);</span><br><span class=\"line\">\t\tSystem.out.println(height);</span><br><span class=\"line\">\t\tSystem.out.println(flag);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-5-练习2\"><a href=\"#5-5-练习2\" class=\"headerlink\" title=\"5.5 练习2\"></a>5.5 练习2</h3><p>需求：将（电影名称，主演，年份，评分）四个信息选择不同类型的变量，随后打印出来。</p>\n<p> 代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">VariableTest2</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//1.定义字符串变量记录电影的名称</span></span><br><span class=\"line\">\t\t<span class=\"type\">String</span> <span class=\"variable\">movie</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;送初恋回家&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//2.定义三个变量记录主演的名字</span></span><br><span class=\"line\">\t\t<span class=\"type\">String</span> <span class=\"variable\">name1</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;刘鑫&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">String</span> <span class=\"variable\">name2</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;张雨提&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">String</span> <span class=\"variable\">name3</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;高媛&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//3. 定义整数类型的变量记录年龄的年份</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">year</span> <span class=\"operator\">=</span> <span class=\"number\">2020</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//4.定义小数类型的变量记录电影的评分</span></span><br><span class=\"line\">\t\t<span class=\"type\">double</span> <span class=\"variable\">score</span> <span class=\"operator\">=</span> <span class=\"number\">9.0</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//打印变量的信息</span></span><br><span class=\"line\">\t\tSystem.out.println(movie);</span><br><span class=\"line\">\t\tSystem.out.println(name1);</span><br><span class=\"line\">\t\tSystem.out.println(name2);</span><br><span class=\"line\">\t\tSystem.out.println(name3);</span><br><span class=\"line\">\t\tSystem.out.println(year);</span><br><span class=\"line\">\t\tSystem.out.println(score);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-6-练习3\"><a href=\"#5-6-练习3\" class=\"headerlink\" title=\"5.6 练习3\"></a>5.6 练习3</h3><p>需求：选择其中一部手机，将（手机价格，手机品牌）两个信息选择不同类型的变量，随后打印出来。 </p>\n<p> 代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">VariableTest3</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//1.定义小数类型的变量记录手机的价格</span></span><br><span class=\"line\">\t\t<span class=\"type\">double</span> <span class=\"variable\">price</span> <span class=\"operator\">=</span> <span class=\"number\">5299.0</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//2.定义字符串类型的变量记录手机的品牌</span></span><br><span class=\"line\">\t\t<span class=\"type\">String</span> <span class=\"variable\">brand</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;华为&quot;</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出变量记录的值</span></span><br><span class=\"line\">\t\tSystem.out.println(price);</span><br><span class=\"line\">\t\tSystem.out.println(brand);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-标识符\"><a href=\"#6-标识符\" class=\"headerlink\" title=\"6. 标识符\"></a>6. 标识符</h2><p>业内大多数程序员都在遵守阿里巴巴的命名规则。</p>\n<p>在day02的资料文件夹中有。</p>\n<h3 id=\"6-1-硬性要求：\"><a href=\"#6-1-硬性要求：\" class=\"headerlink\" title=\"6.1 硬性要求：\"></a>6.1 硬性要求：</h3><p>​\t必须要这么做，否则代码会报错。</p>\n<ul>\n<li>必须由数字、字母、下划线_、美元符号$组成。</li>\n<li>数字不能开头</li>\n<li>不能是关键字</li>\n<li>区分大小写的。</li>\n</ul>\n<h3 id=\"6-2-软件建议：\"><a href=\"#6-2-软件建议：\" class=\"headerlink\" title=\"6.2 软件建议：\"></a>6.2 软件建议：</h3><p>​\t如果不这么做，代码不会报错，但是会让代码显得比较low。</p>\n<h3 id=\"6-2-1-小驼峰命名法\"><a href=\"#6-2-1-小驼峰命名法\" class=\"headerlink\" title=\"6.2.1 小驼峰命名法\"></a>6.2.1 小驼峰命名法</h3><p>适用于变量名和方法名</p>\n<ul>\n<li><p>如果是一个单词，那么全部小写，比如：name</p>\n</li>\n<li><p>如果是多个单词，那么从第二个单词开始，首字母大写，比如：firstName、maxAge</p>\n</li>\n</ul>\n<h3 id=\"6-2-2-大驼峰命名法\"><a href=\"#6-2-2-大驼峰命名法\" class=\"headerlink\" title=\"6.2.2 大驼峰命名法\"></a>6.2.2 大驼峰命名法</h3><p>适用于类名</p>\n<ul>\n<li><p>如果是一个单词，那么首字母大写。比如：Demo、Test。</p>\n</li>\n<li><p>如果是多个单词，那么每一个单词首字母都需要大写。比如：HelloWorld</p>\n</li>\n</ul>\n<p>不管起什么名字，都要做到见名知意。</p>\n<h3 id=\"阿里巴巴命名规范细节：\"><a href=\"#阿里巴巴命名规范细节：\" class=\"headerlink\" title=\"阿里巴巴命名规范细节：\"></a>阿里巴巴命名规范细节：</h3><ol>\n<li><p>尽量不要用拼音。但是一些国际通用的拼音可视为英文单词。</p>\n<p>正确：alibaba、hangzhou、nanjing</p>\n<p>错误：jiage、dazhe</p>\n</li>\n<li><p>平时在给变量名、方法名、类名起名字的时候，不要使用下划线或美元符号。</p>\n<p>错误：_name</p>\n<p>正确：name</p>\n</li>\n</ol>\n<h2 id=\"7-键盘录入\"><a href=\"#7-键盘录入\" class=\"headerlink\" title=\"7. 键盘录入\"></a>7. 键盘录入</h2><p>​\t键盘录入的实际功能Java已经帮我们写好了，不需要我们自己再实现了，而Java写好的功能都放在了Scanner这个类中，所以，我们只要直接使用Scanner这个类就可以了。</p>\n<p>使用步骤：</p>\n<p>第一步：</p>\n<p>​\t导包：其实就是表示先找到Scanner这个类在哪。</p>\n<p>第二步：</p>\n<p>​\t创建对象：其实就表示申明一下，我准备开始用Scanner这个类了。</p>\n<p>第三步：</p>\n<p>​\t接收数据：也是真正干活的代码。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//导包，其实就是先找到Scanner这个类在哪</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ScannerDemo1</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//2.创建对象，其实就是申明一下，我准备开始用Scanner这个类了。</span></span><br><span class=\"line\">\t\t<span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">\t\t<span class=\"comment\">//3.接收数据</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//当程序运行之后，我们在键盘输入的数据就会被变量i给接收了</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;请输入一个数字&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">\t\tSystem.out.println(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"8-IDEA\"><a href=\"#8-IDEA\" class=\"headerlink\" title=\"8. IDEA\"></a>8. IDEA</h2><h3 id=\"8-1-IDEA概述\"><a href=\"#8-1-IDEA概述\" class=\"headerlink\" title=\"8.1 IDEA概述\"></a>8.1 IDEA概述</h3><p>​\tIDEA全称IntelliJ IDEA，是用于Java语言开发的集成环境，它是业界公认的目前用于Java程序开发最好的工具。</p>\n<p><strong>集成环境：</strong></p>\n<p>​\t把代码编写，编译，执行，调试等多种功能综合到一起的开发工具。</p>\n<h3 id=\"8-2-IDEA的下载和安装\"><a href=\"#8-2-IDEA的下载和安装\" class=\"headerlink\" title=\"8.2 IDEA的下载和安装\"></a>8.2 IDEA的下载和安装</h3><h4 id=\"8-2-1-下载\"><a href=\"#8-2-1-下载\" class=\"headerlink\" title=\"8.2.1 下载\"></a>8.2.1 下载</h4><p>​\t可以到官方网站自行下载，网址为：<a href=\"https://www.jetbrains.com/idea\">https://www.jetbrains.com/idea</a></p>\n<p>​\t今天的资料中，对应的安装包也提高给大家了。</p>\n<h4 id=\"8-2-2-安装\"><a href=\"#8-2-2-安装\" class=\"headerlink\" title=\"8.2.2 安装\"></a>8.2.2 安装</h4><ul>\n<li>到资料文件夹中，双击安装包。</li>\n<li>点击next，准备安装</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%851.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>点击Browse修改安装路径。</p>\n<p>修改完毕点击next</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%852.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>勾选64-bit launcher。表示在桌面新建一个64位的快捷方式。</p>\n<p>其他的不要勾选。</p>\n<p>点击next。</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%854.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>点击Install，准备安装。</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%855.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>等进度条读取完毕之后，会有最终界面提示。</p>\n<p>点击finish即可。</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%856.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>第一次启动会询问，是否导入一些设置。</p>\n<p>选择第二个不导入，保持默认设置，再点击OK。</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%857.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>选择背景主题</p>\n<p>左边是黑色背景。右边是白色背景。</p>\n<p>这个可以根据自己的喜好来选择。</p>\n<p>选择完毕点击右下角的next</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%858.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>在本界面让我们购买idea。</p>\n<p>因为我们是学习阶段，所以可以使用免费使用30天。</p>\n<p>点击第一排第二个。Evaluate for free</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%859.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>点击蓝色的Evaluate，就可以开始免费试用30天了。</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%8510.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>当看到这个界面，就表示idea已经成功安装完毕</p>\n<p>可以点击右上角关闭。</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%8511.png\" alt=\"计算机发展\"></p>\n<h3 id=\"8-3-IDEA中层级结构介绍\"><a href=\"#8-3-IDEA中层级结构介绍\" class=\"headerlink\" title=\"8.3 IDEA中层级结构介绍\"></a>8.3 IDEA中层级结构介绍</h3><h4 id=\"8-3-1-结构分类\"><a href=\"#8-3-1-结构分类\" class=\"headerlink\" title=\"8.3.1 结构分类\"></a>8.3.1 结构分类</h4><ul>\n<li>project（项目、工程）</li>\n<li>module（模块）</li>\n<li>package（包）</li>\n<li>class（类）</li>\n</ul>\n<h4 id=\"8-3-2-结构介绍\"><a href=\"#8-3-2-结构介绍\" class=\"headerlink\" title=\"8.3.2 结构介绍\"></a>8.3.2 结构介绍</h4><p>​\t为了让大家更好的吸收，package这一层级，我们后面再学习，先学习最基础的project、module、class。</p>\n<h5 id=\"project（项目、工程）\"><a href=\"#project（项目、工程）\" class=\"headerlink\" title=\"project（项目、工程）\"></a>project（项目、工程）</h5><p>​\t淘宝、京东、黑马程序员网站都属于一个个项目，IDEA中就是一个个的Project。</p>\n<h5 id=\"module（模块）\"><a href=\"#module（模块）\" class=\"headerlink\" title=\"module（模块）\"></a>module（模块）</h5><p>​\t在一个项目中，可以存放多个模块，不同的模块可以存放项目中不同的业务功能代码。在黑马程序员的官方网站中，至少包含了以下模块：</p>\n<ul>\n<li>论坛模块</li>\n<li>报名、咨询模块</li>\n</ul>\n<p>为了更好的管理代码，我们会把代码分别放在两个模块中存放。</p>\n<h5 id=\"package（包）\"><a href=\"#package（包）\" class=\"headerlink\" title=\"package（包）\"></a>package（包）</h5><p>​\t一个模块中又有很多的业务，以黑马程序员官方网站的论坛模块为例，至少包含了以下不同的业务。</p>\n<ul>\n<li>发帖</li>\n<li>评论</li>\n</ul>\n<p>为了把这些业务区分的更加清楚，就会用包来管理这些不同的业务。</p>\n<h5 id=\"class（类）\"><a href=\"#class（类）\" class=\"headerlink\" title=\"class（类）\"></a>class（类）</h5><p>​\t就是真正写代码的地方。</p>\n<h4 id=\"8-3-3-小结\"><a href=\"#8-3-3-小结\" class=\"headerlink\" title=\"8.3.3 小结\"></a>8.3.3 小结</h4><ul>\n<li><p>层级关系</p>\n<p>​\tproject - module - package - class</p>\n</li>\n<li><p>包含数量</p>\n<p>​\tproject中可以创建多个module<br>​\tmodule中可以创建多个package<br>​\tpackage中可以创建多个class</p>\n<p>​\t这些结构的划分，是为了方便管理类文件的。</p>\n</li>\n</ul>\n<h3 id=\"8-4-IDEA中的第一个代码\"><a href=\"#8-4-IDEA中的第一个代码\" class=\"headerlink\" title=\"8.4 IDEA中的第一个代码\"></a>8.4 IDEA中的第一个代码</h3><h5 id=\"8-4-1-操作步骤\"><a href=\"#8-4-1-操作步骤\" class=\"headerlink\" title=\"8.4.1 操作步骤\"></a>8.4.1 操作步骤</h5><ul>\n<li>创建Project 项目</li>\n<li>创建Module 模块</li>\n<li>创建class   类</li>\n<li>在类中编写代码</li>\n<li>完成编译运行</li>\n</ul>\n<h5 id=\"8-4-2-分步图解\"><a href=\"#8-4-2-分步图解\" class=\"headerlink\" title=\"8.4.2 分步图解\"></a>8.4.2 分步图解</h5><ul>\n<li><p>双击启动图标</p>\n<p><img src=\"/tupian/idea%E4%BD%BF%E7%94%A81.png\" alt=\"计算机发展\"></p>\n</li>\n<li><p>首先要新建一个项目</p>\n<p>点击creat new project</p>\n<p><img src=\"/tupian/idea1.png\" alt=\"计算机发展\"></p>\n</li>\n<li><p>我们要从0开始写代码，所以新建一个空的什么都没有的项目。</p>\n<p>点击左下方的Empty Project</p>\n<p>再点击右下角的next</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea2.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>输入项目的名称</p>\n<p>输入项目的存放路径</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea3.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>点击ok。idea会帮助我们在本地创建一个项目文件夹</li>\n</ul>\n<p><img src=\"/tupian/idea4.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>点击Module，准备新建一个模块</li>\n</ul>\n<p><img src=\"/tupian/idea5.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>点击+</p>\n<p>再点击New Module</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea6.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>我们要编写Java代码，所以要新建一个Java模块。</p>\n<p>点击Java</p>\n<p>再点击右下角的next</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea7.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>输入模块的名称</p>\n<p>再点击右下角的Next</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea8.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>成功新建一个模块之后，中间就会出现刚刚新建的模块</p>\n<p>点击右下角的OK</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea9.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>回到主界面</p>\n<p>展开刚刚新建的模块</p>\n<p>右键点击src，选择New，选择Java Class</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea10.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>输入类名</p>\n<p>再按回车</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea11.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>由于字体比较小</p>\n<p>所以，我们要设置一下字体。</p>\n<p>点击File，选择Setting。</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea12.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>搜索一下font</p>\n<p>在右边可以输入Size的数值来调节代码字体的大小。</p>\n<p>设置完毕后点击右下角的OK</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea13.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>编写代码</li>\n</ul>\n<p><img src=\"/tupian/idea14.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>运行代码</p>\n<p>右键空白处，点击Run</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea15.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>最下面会弹出控制台。</p>\n<p>所有输出语句中的内容，都会在控制台上展示。</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea16.png\" alt=\"计算机发展\"></p>\n<h3 id=\"8-5-IDEA中类的相关操作\"><a href=\"#8-5-IDEA中类的相关操作\" class=\"headerlink\" title=\"8.5 IDEA中类的相关操作\"></a>8.5 IDEA中类的相关操作</h3><h4 id=\"8-5-1-类的相关操作\"><a href=\"#8-5-1-类的相关操作\" class=\"headerlink\" title=\"8.5.1 类的相关操作\"></a>8.5.1 类的相关操作</h4><ul>\n<li>新建类文件</li>\n<li>删除类文件</li>\n<li>修改类文件</li>\n</ul>\n<h4 id=\"8-5-2-新建类文件\"><a href=\"#8-5-2-新建类文件\" class=\"headerlink\" title=\"8.5.2 新建类文件\"></a>8.5.2 新建类文件</h4><ul>\n<li><p>所有的Java代码都会写在src文件夹当中。</p>\n<p>所以，右键点击src，选择new，点击Java Class</p>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E7%B1%BB1.png\" alt=\"计算机发展\"></p>\n</li>\n<li><p>输入类名，再按回车</p>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E7%B1%BB2.png\" alt=\"计算机发展\"></p>\n</li>\n<li><p>新建完毕</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E7%B1%BB3.png\" alt=\"计算机发展\"></p>\n<h4 id=\"8-5-3-修改类名\"><a href=\"#8-5-3-修改类名\" class=\"headerlink\" title=\"8.5.3 修改类名\"></a>8.5.3 修改类名</h4><ul>\n<li><p>右键点击想要修改的文件</p>\n<p>点击Refactor</p>\n<p>再点击Rename</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E7%B1%BB%E5%90%8D1.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>输入想要修改的名字</p>\n<p>输入完毕点击下面的Refactor</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E7%B1%BB%E5%90%8D2.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>文件名和类名均已修改成功</p>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E7%B1%BB%E5%90%8D3.png\" alt=\"计算机发展\"></p>\n</li>\n</ul>\n<h4 id=\"8-5-4-删除类文件\"><a href=\"#8-5-4-删除类文件\" class=\"headerlink\" title=\"8.5.4 删除类文件\"></a>8.5.4 删除类文件</h4><ul>\n<li><p>想要删除哪个文件，就右键点击该文件</p>\n<p>选择Delete即可</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E5%88%A0%E9%99%A4%E7%B1%BB%E6%96%87%E4%BB%B61.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>在弹出的界面中点击OK，确定删除</li>\n</ul>\n<p><img src=\"/tupian/%E5%88%A0%E9%99%A4%E7%B1%BB%E6%96%87%E4%BB%B62.png\" alt=\"计算机发展\"></p>\n<blockquote>\n<p>小贴士：</p>\n<p>此时删除是不走回收站的，直接从硬盘中删掉了。</p>\n</blockquote>\n<h3 id=\"8-6-IDEA中模块的相关操作\"><a href=\"#8-6-IDEA中模块的相关操作\" class=\"headerlink\" title=\"8.6 IDEA中模块的相关操作\"></a>8.6 IDEA中模块的相关操作</h3><h4 id=\"8-6-1-模块的相关操作\"><a href=\"#8-6-1-模块的相关操作\" class=\"headerlink\" title=\"8.6.1 模块的相关操作\"></a>8.6.1 模块的相关操作</h4><ul>\n<li>新建模块</li>\n<li>删除模块</li>\n<li>修改模块</li>\n<li>导入模块</li>\n</ul>\n<h4 id=\"8-6-2-新建模块\"><a href=\"#8-6-2-新建模块\" class=\"headerlink\" title=\"8.6.2 新建模块\"></a>8.6.2 新建模块</h4><ul>\n<li>点击File，选择Project Structure</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%971.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>选择Module</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%972.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>点击+</p>\n<p>选择New Module</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%973.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>要创建一个Java模块，所以选择第一个Java</p>\n<p>点击右下角的Next</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%974.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>输入模块的名称</p>\n<p>点击右下角的Finish</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%975.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>成功新建完毕之后，在中间空白区域就出现了刚刚新建的模块</p>\n<p>点击右下角的OK</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%976.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>在主界面中，也会出现刚刚新建的模块</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%977.png\" alt=\"计算机发展\"></p>\n<h4 id=\"8-6-3-删除模块\"><a href=\"#8-6-3-删除模块\" class=\"headerlink\" title=\"8.6.3 删除模块\"></a>8.6.3 删除模块</h4><ul>\n<li><p>右键点击模块</p>\n<p>选择Remove Module</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E5%88%A0%E9%99%A4%E6%A8%A1%E5%9D%971.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>选择Remove，表示确定删除</li>\n</ul>\n<p><img src=\"/tupian/%E5%88%A0%E9%99%A4%E6%A8%A1%E5%9D%972.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>此时发现，在IDEA列表页面，删除的模块已经不在了。</li>\n</ul>\n<p><img src=\"/tupian/%E5%88%A0%E9%99%A4%E6%A8%A1%E5%9D%973.png\" alt=\"计算机发展\"></p>\n<blockquote>\n<p>小贴士：</p>\n<p>此时删除仅仅是从IDEA列表中的删除，在本地硬盘中还是存在的。</p>\n</blockquote>\n<h4 id=\"8-6-4-修改模块\"><a href=\"#8-6-4-修改模块\" class=\"headerlink\" title=\"8.6.4 修改模块\"></a>8.6.4 修改模块</h4><ul>\n<li><p>右键点击模块名</p>\n<p>选择Refactor</p>\n<p>再选择Rename</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D1.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>选择第三个修改模块名和本地文件夹名</p>\n<p>点击OK</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D3.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>输入要修改的新的模块名</p>\n<p>输入完毕点击Refactor</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D4.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>回到主界面，就发现模块名和文件夹名都已经修改完毕</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D5.png\" alt=\"计算机发展\"></p>\n<h4 id=\"8-6-5-导入模块\"><a href=\"#8-6-5-导入模块\" class=\"headerlink\" title=\"8.6.5 导入模块\"></a>8.6.5 导入模块</h4><ul>\n<li>点击File，选择Project Structure</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%971.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>选择Module</p>\n<p>点击+</p>\n<p>选择Import Module</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%972.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>从本地硬盘中选择要导入的模块</p>\n<p>再点击OK</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%973.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>不断点击Next</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%974.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>如果中间出现提示框，则点击Overwrite</p>\n<p>然后继续点击右下角的Next</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%975.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>一直点到finish为止</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%976.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>成功导入后，在中间位置就会出现导入的模块信息</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%977.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>在主界面中也会出现导入的模块信息</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%978.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>展开模块点击模块中的Java文件，会发现代码报错。</p>\n<p>是因为导入模块跟JDK没有关联导致。</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%979.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>可以点击右上角的Setup SDK</p>\n<p>再选择已经安装的JDK版本即可</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%9710.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>导入完毕之后，代码就恢复正常不会报错了</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%9711.png\" alt=\"计算机发展\"></p>\n<h3 id=\"8-7-IDEA中项目的相关操作\"><a href=\"#8-7-IDEA中项目的相关操作\" class=\"headerlink\" title=\"8.7 IDEA中项目的相关操作\"></a>8.7 IDEA中项目的相关操作</h3><h4 id=\"8-7-1-项目的相关操作\"><a href=\"#8-7-1-项目的相关操作\" class=\"headerlink\" title=\"8.7.1 项目的相关操作\"></a>8.7.1 项目的相关操作</h4><ul>\n<li>关闭项目</li>\n<li>打开项目</li>\n<li>修改项目</li>\n<li>新建项目</li>\n</ul>\n<h4 id=\"8-7-2-关闭项目\"><a href=\"#8-7-2-关闭项目\" class=\"headerlink\" title=\"8.7.2 关闭项目\"></a>8.7.2 关闭项目</h4><ul>\n<li>点击File，选择Close Project即可</li>\n</ul>\n<p><img src=\"/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE1.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>刚刚操作的项目就已经关闭了</p>\n<p>左侧是项目列表，如果要再次打开该项目，直接点击即可。</p>\n<p>右侧有create new project，可以再建一个新的项目</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE2.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>鼠标放在项目上，后面会出现一个叉。</p>\n<p>如果点击了这里的叉，会在IDEA的列表中删除。不会删除本地硬盘上的项目。</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE3.png\" alt=\"计算机发展\"></p>\n<h4 id=\"8-7-3-打开项目\"><a href=\"#8-7-3-打开项目\" class=\"headerlink\" title=\"8.7.3 打开项目\"></a>8.7.3 打开项目</h4><ul>\n<li><p>在本界面还可以打开本地已经存在的项目</p>\n<p>点击Open or Import</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE1.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>选择要打开的项目</p>\n<p>点击OK</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE2.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>项目就被打开了。</li>\n</ul>\n<p><img src=\"/tupian/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE3.png\" alt=\"计算机发展\"></p>\n<h4 id=\"8-7-4-修改项目\"><a href=\"#8-7-4-修改项目\" class=\"headerlink\" title=\"8.7.4 修改项目\"></a>8.7.4 修改项目</h4><ul>\n<li>点击File，选择Project Structure</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE1.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>在这个界面，默认是Module</p>\n<p>所以，要先点击Project</p>\n<p>在右侧页面中，输入新的项目名称</p>\n<p>修改JDK版本和编译版本都变成JDK14</p>\n<p>再点击OK</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE2.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>此时发现，项目名称已经修改完毕</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE3.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>但是本地文件夹的名字还没有修改</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE4.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>需要先关闭当前项目</li>\n</ul>\n<p><img src=\"/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE1.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>点击项目后面的叉，从列表中移除项目</li>\n</ul>\n<p><img src=\"/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE3.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>到本地硬盘中手动修改文件夹的名称</li>\n</ul>\n<p> <img src=\"F:/JavaSE%E6%9C%80%E6%96%B0%E7%89%88/day02-Java%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/%E7%AC%94%E8%AE%B0//tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE5.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>点击Open or Import重新打开项目</li>\n</ul>\n<p><img src=\"/tupian/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE1.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>选择修改之后的项目</p>\n<p>点击OK</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE6.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>此时会发现，项目名称和本地硬盘文件夹的名称都已经修改完毕了</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE7.png\" alt=\"计算机发展\"></p>\n<h4 id=\"8-7-5-新建项目\"><a href=\"#8-7-5-新建项目\" class=\"headerlink\" title=\"8.7.5 新建项目\"></a>8.7.5 新建项目</h4><ul>\n<li><p>点击File</p>\n<p>选择New</p>\n<p>点击Project</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE1.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>同样还是创建一个什么都没有的空项目</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE2.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>输入项目的名称</p>\n<p>点击右下角的finish</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE3.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>IDEA循环是否需要帮我们在本地创建一个新的文件夹</p>\n<p>点击OK</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE4.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>询问是在本窗口打开还是在一个新的窗口打开。</p>\n<p>可以点击New Window，在一个新的窗口打开。</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE5.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>此时就出现了两个窗口，在一个新的窗口打开了新的项目</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE6.png\" alt=\"计算机发展\"></p>\n","length":9941,"excerpt":"","more":"<h1 id=\"day02-Java基础语法\"><a href=\"#day02-Java基础语法\" class=\"headerlink\" title=\"day02 - Java基础语法\"></a>day02 - Java基础语法</h1><h2 id=\"1-注释\"><a href=\"#1-注释\" class=\"headerlink\" title=\"1. 注释\"></a>1. 注释</h2><p>​\t注释是对代码的解释和说明文字。</p>\n<p>Java中的注释分为三种：</p>\n<ul>\n<li>单行注释：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这是单行注释文字</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>多行注释：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">这是多行注释文字</span></span><br><span class=\"line\"><span class=\"comment\">这是多行注释文字</span></span><br><span class=\"line\"><span class=\"comment\">这是多行注释文字</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">注意：多行注释不能嵌套使用。</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>文档注释（暂时用不到）：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">这是多行注释文字</span></span><br><span class=\"line\"><span class=\"comment\">这是多行注释文字</span></span><br><span class=\"line\"><span class=\"comment\">这是多行注释文字</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用的技巧\"><a href=\"#使用的技巧\" class=\"headerlink\" title=\"使用的技巧\"></a>使用的技巧</h3><p>​\t如果我们要对代码进行解释，那么就可以使用注释。</p>\n<p>​\t当注释的内容比较少，一行就写完了，可以用单行注释。</p>\n<p>​\t如果注释的内容比较多，需要写在多行，那么可以使用多行注释。</p>\n<h3 id=\"注意点\"><a href=\"#注意点\" class=\"headerlink\" title=\"注意点\"></a>注意点</h3><p>​\t注释的内容不会参与编译和运行的，仅仅是对代码的解释说明而已。</p>\n<p>​\t所以，不管在注释当中写什么内容，都不会影响代码运行的结果。</p>\n<h2 id=\"2-关键字\"><a href=\"#2-关键字\" class=\"headerlink\" title=\"2. 关键字\"></a>2. 关键字</h2><h3 id=\"2-1-概念\"><a href=\"#2-1-概念\" class=\"headerlink\" title=\"2.1 概念\"></a>2.1 概念</h3><p>​\t被Java赋予了特定含义的英文单词。</p>\n<p>​\t当我们在代码中写了关键字之后，程序在运行的时候，就知道要做什么事情了。</p>\n<p>注意：关键字很多，不用刻意去记。</p>\n<table>\n<thead>\n<tr>\n<th><strong>abstract</strong></th>\n<th><strong>assert</strong></th>\n<th><strong>boolean</strong></th>\n<th><strong>break</strong></th>\n<th><strong>byte</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>case</strong></td>\n<td><strong>catch</strong></td>\n<td><strong>char</strong></td>\n<td><strong>class</strong></td>\n<td><strong>const</strong></td>\n</tr>\n<tr>\n<td><strong>continue</strong></td>\n<td><strong>default</strong></td>\n<td><strong>do</strong></td>\n<td><strong>double</strong></td>\n<td><strong>else</strong></td>\n</tr>\n<tr>\n<td><strong>enum</strong></td>\n<td><strong>extends</strong></td>\n<td><strong>final</strong></td>\n<td><strong>finally</strong></td>\n<td><strong>float</strong></td>\n</tr>\n<tr>\n<td><strong>for</strong></td>\n<td><strong>goto</strong></td>\n<td><strong>if</strong></td>\n<td><strong>implements</strong></td>\n<td><strong>import</strong></td>\n</tr>\n<tr>\n<td><strong>instanceof</strong></td>\n<td><strong>int</strong></td>\n<td><strong>interface</strong></td>\n<td><strong>long</strong></td>\n<td><strong>native</strong></td>\n</tr>\n<tr>\n<td><strong>new</strong></td>\n<td><strong>package</strong></td>\n<td><strong>private</strong></td>\n<td><strong>protected</strong></td>\n<td><strong>public</strong></td>\n</tr>\n<tr>\n<td><strong>return</strong></td>\n<td><strong>strictfp</strong></td>\n<td><strong>short</strong></td>\n<td><strong>static</strong></td>\n<td><strong>super</strong></td>\n</tr>\n<tr>\n<td><strong>switch</strong></td>\n<td><strong>synchronized</strong></td>\n<td><strong>this</strong></td>\n<td><strong>throw</strong></td>\n<td><strong>throws</strong></td>\n</tr>\n<tr>\n<td><strong>transient</strong></td>\n<td><strong>try</strong></td>\n<td><strong>void</strong></td>\n<td><strong>volatile</strong></td>\n<td><strong>while</strong></td>\n</tr>\n</tbody></table>\n<h3 id=\"2-2-第一个关键字class\"><a href=\"#2-2-第一个关键字class\" class=\"headerlink\" title=\"2.2 第一个关键字class\"></a>2.2 第一个关键字class</h3><p>​\t表示定义一个类。创建一个类。</p>\n<p>类：Java项目最基本的组成单元，一个完整的Java项目有可能会有成千上万个类来组成的。</p>\n<p>class后面跟随的就是这个类的名字，简称：类名。</p>\n<p>在类名后面会有一对大括号，表示这个类的内容。</p>\n<p>举例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloWorld</span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>解释：class表示定义类。</p>\n<p>​\t类名：HelloWorld</p>\n<p>​\tHelloWorld后面的大括号表示这个类的范围。</p>\n<h2 id=\"3-字面量\"><a href=\"#3-字面量\" class=\"headerlink\" title=\"3. 字面量\"></a>3. 字面量</h2><p>作用：告诉程序员，数据在程序中的书写格式。</p>\n<table>\n<thead>\n<tr>\n<th><strong>字面量类型</strong></th>\n<th><strong>说明</strong></th>\n<th><strong>程序中的写法</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>整数</td>\n<td>不带小数的数字</td>\n<td>666，-88</td>\n</tr>\n<tr>\n<td>小数</td>\n<td>带小数的数字</td>\n<td>13.14，-5.21</td>\n</tr>\n<tr>\n<td>字符</td>\n<td>必须使用单引号，有且仅能一个字符</td>\n<td>‘A’，‘0’，   ‘我’</td>\n</tr>\n<tr>\n<td>字符串</td>\n<td>必须使用双引号，内容可有可无</td>\n<td>“HelloWorld”，“黑马程序员”</td>\n</tr>\n<tr>\n<td>布尔值</td>\n<td>布尔值，表示真假，只有两个值：true，false</td>\n<td>true 、false</td>\n</tr>\n<tr>\n<td>空值</td>\n<td>一个特殊的值，空值</td>\n<td>值是：null</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"number\">10</span>); <span class=\"comment\">// 输出一个整数</span></span><br><span class=\"line\">        System.out.println(<span class=\"number\">5.5</span>); <span class=\"comment\">// 输出一个小数</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&#x27;a&#x27;</span>); <span class=\"comment\">// 输出一个字符</span></span><br><span class=\"line\">        System.out.println(<span class=\"literal\">true</span>); <span class=\"comment\">// 输出boolean值true</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;欢迎来到黑马程序员&quot;</span>); <span class=\"comment\">// 输出字符串</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"区分技巧\"><a href=\"#区分技巧\" class=\"headerlink\" title=\"区分技巧\"></a>区分技巧</h3><ol>\n<li>不带小数点的数字都是整数类型的字面量。</li>\n<li>只要带了小数点，那么就是小数类型的字面量。</li>\n<li>只要用双引号引起来的，不管里面的内容是什么，不管里面有没有内容，都是字符串类型的字面量。</li>\n<li>字符类型的字面量必须用单引号引起来，不管内容是什么，但是个数有且只能有一个。</li>\n<li>字符类型的字面量只有两个值，true、false。</li>\n<li>空类型的字面量只有一个值，null。</li>\n</ol>\n<h2 id=\"4-变量\"><a href=\"#4-变量\" class=\"headerlink\" title=\"4. 变量\"></a>4. 变量</h2><h3 id=\"4-1-什么是变量？\"><a href=\"#4-1-什么是变量？\" class=\"headerlink\" title=\"4.1 什么是变量？\"></a>4.1 什么是变量？</h3><p>​\t变量就在程序中临时存储数据的容器。但是这个容器中只能存一个值。</p>\n<h3 id=\"4-2-变量的定义格式\"><a href=\"#4-2-变量的定义格式\" class=\"headerlink\" title=\"4.2 变量的定义格式\"></a>4.2 变量的定义格式</h3><p>​\t数据类型 变量名 &#x3D; 数据值；</p>\n<h4 id=\"4-2-1-格式详解\"><a href=\"#4-2-1-格式详解\" class=\"headerlink\" title=\"4.2.1 格式详解\"></a>4.2.1 格式详解</h4><p>​\t数据类型：限定了变量当中能存储什么类型的数据。</p>\n<p>​\t\t\t   如果要存10，那么数据类型就需要写整数类型。</p>\n<p>​\t\t\t   如果要存10.0，那么数据类型就需要写小数类型。</p>\n<p>​\t变量名：其实就是这个容器的名字。</p>\n<p>​\t\t\t当以后想要使用变量里面的数据时，直接使用变量名就可以了。</p>\n<p>​\t数据值：真正存储在容器中的数据。</p>\n<p>​\t分号：表示语句的结束，就跟以前写作文时候的句号是一样的。</p>\n<h4 id=\"4-2-2-常用的数据类型\"><a href=\"#4-2-2-常用的数据类型\" class=\"headerlink\" title=\"4.2.2 常用的数据类型\"></a>4.2.2 常用的数据类型</h4><p>​\t整数：int</p>\n<p>​\t小数：（浮点数）double</p>\n<p>​\t其他数据类型稍后讲解</p>\n<p>举例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">VariableDemo</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//定义一个整数类型的变量</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//数据类型 变量名 = 数据值;</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">16</span>;</span><br><span class=\"line\">\t\tSystem.out.println(a);<span class=\"comment\">//16</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//定义一个小数类型的变量</span></span><br><span class=\"line\">\t\t<span class=\"type\">double</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">10.1</span>;</span><br><span class=\"line\">\t\tSystem.out.println(b);<span class=\"comment\">//10.1</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-3-变量的注意事项\"><a href=\"#4-2-3-变量的注意事项\" class=\"headerlink\" title=\"4.2.3 变量的注意事项\"></a>4.2.3 变量的注意事项</h4><ul>\n<li>变量名不能重复</li>\n<li>在一条语句中，可以定义多个变量。但是这种方式影响代码的阅读，所以了解一下即可。</li>\n<li>变量在使用之前必须要赋值。</li>\n</ul>\n<p>案例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">VariableDemo2</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//1.变量名不允许重复</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//int a = 10;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//int a = 20;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//System.out.println(a);</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//2.一条语句可以定义多个变量</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//了解。</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//int a = 10, b = 20, c = 20,d = 20;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//System.out.println(a);//?</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//System.out.println(b);//?</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//3.变量在使用之前必须要赋值</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">30</span>;</span><br><span class=\"line\">\t\tSystem.out.println(a);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-变量的练习\"><a href=\"#4-3-变量的练习\" class=\"headerlink\" title=\"4.3 变量的练习\"></a>4.3 变量的练习</h3><p>​\t需求：说出公交车到终点站之后，车上一共有多少乘客？</p>\n<p>​\t\t    一开始没有乘客。</p>\n<p>​\t\t   第一站：上去一位乘客，没有下来乘客。</p>\n<p>​\t\t   第二站：上去两位乘客，下来一位乘客。</p>\n<p>​\t\t   第三站：上去两位乘客，下来一位乘客。</p>\n<p>​\t\t   第四站：没有上去乘客，下来一位乘客。</p>\n<p>​\t\t   第五站：上去一位乘客，没有下来乘客。</p>\n<p>​\t\t   问：到了终点站之后，车上一共多少乘客？</p>\n<p>​\t代码解析：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">VariableTest1</span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//主入口</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//一开始没有乘客。</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//第一站：上去一位乘客</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//在原有的基础上 + 1</span></span><br><span class=\"line\">\t\tcount = count + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//System.out.println(count);</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//第二站：上去两位乘客，下来一位乘客</span></span><br><span class=\"line\">\t\tcount = count + <span class=\"number\">2</span> - <span class=\"number\">1</span>; </span><br><span class=\"line\">\t\t<span class=\"comment\">//第三站：上去两位乘客，下来一位乘客</span></span><br><span class=\"line\">\t\tcount = count + <span class=\"number\">2</span> - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//第四站：下来一位乘客</span></span><br><span class=\"line\">\t\tcount = count - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//第五站：上去一位乘客</span></span><br><span class=\"line\">\t\tcount = count + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//请问：到了终点站，车上一共几位乘客。</span></span><br><span class=\"line\">\t\tSystem.out.println(count);<span class=\"comment\">//3</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-数据类型\"><a href=\"#5-数据类型\" class=\"headerlink\" title=\"5. 数据类型\"></a>5. 数据类型</h2><h3 id=\"5-1-Java语言数据类型的分类\"><a href=\"#5-1-Java语言数据类型的分类\" class=\"headerlink\" title=\"5.1 Java语言数据类型的分类\"></a>5.1 Java语言数据类型的分类</h3><ul>\n<li>基本数据类型</li>\n<li>引用数据类型（面向对象的时候再深入学习）</li>\n</ul>\n<h3 id=\"5-2-基本数据类型的四类八种\"><a href=\"#5-2-基本数据类型的四类八种\" class=\"headerlink\" title=\"5.2 基本数据类型的四类八种\"></a>5.2 基本数据类型的四类八种</h3><table>\n<thead>\n<tr>\n<th align=\"center\">数据类型</th>\n<th align=\"center\">关键字</th>\n<th align=\"center\">内存占用</th>\n<th align=\"center\">取值范围</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">整数</td>\n<td align=\"center\">byte</td>\n<td align=\"center\">1</td>\n<td align=\"center\">负的2的7次方 ~ 2的7次方-1(-128~127)</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">short</td>\n<td align=\"center\">2</td>\n<td align=\"center\">负的2的15次方 ~ 2的15次方-1(-32768~32767)</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">int</td>\n<td align=\"center\">4</td>\n<td align=\"center\">负的2的31次方 ~ 2的31次方-1</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">long</td>\n<td align=\"center\">8</td>\n<td align=\"center\">负的2的63次方 ~ 2的63次方-1</td>\n</tr>\n<tr>\n<td align=\"center\">浮点数</td>\n<td align=\"center\">float</td>\n<td align=\"center\">4</td>\n<td align=\"center\">1.401298e-45 ~ 3.402823e+38</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">double</td>\n<td align=\"center\">8</td>\n<td align=\"center\">4.9000000e-324 ~ 1.797693e+308</td>\n</tr>\n<tr>\n<td align=\"center\">字符</td>\n<td align=\"center\">char</td>\n<td align=\"center\">2</td>\n<td align=\"center\">0-65535</td>\n</tr>\n<tr>\n<td align=\"center\">布尔</td>\n<td align=\"center\">boolean</td>\n<td align=\"center\">1</td>\n<td align=\"center\">true，false</td>\n</tr>\n</tbody></table>\n<h4 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h4><p>​\te+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。</p>\n<p>​\t在java中整数默认是int类型，浮点数默认是double类型。</p>\n<h4 id=\"需要记忆以下几点\"><a href=\"#需要记忆以下几点\" class=\"headerlink\" title=\"需要记忆以下几点\"></a>需要记忆以下几点</h4><p>byte类型的取值范围：</p>\n<p>​\t-128 ~ 127</p>\n<p>int类型的大概取值范围：</p>\n<p>​\t-21亿多  ~ 21亿多</p>\n<p>整数类型和小数类型的取值范围大小关系：</p>\n<p>​\tdouble &gt; float &gt; long &gt; int &gt; short &gt; byte</p>\n<p>最为常用的数据类型选择：</p>\n<ul>\n<li><p>在定义变量的时候，要根据实际的情况来选择不同类型的变量。</p>\n<p>比如：人的年龄，可以选择byte类型。</p>\n<p>比如：地球的年龄，可以选择long类型。</p>\n</li>\n<li><p>如果整数类型中，不太确定范围，那么默认使用int类型。</p>\n</li>\n<li><p>如果小数类型中，不太确定范围，那么默认使用double类型。</p>\n</li>\n<li><p>如果要定义字符类型的变量，那么使用char</p>\n</li>\n<li><p>如果要定义布尔类型的变量，那么使用boolean</p>\n</li>\n</ul>\n<h3 id=\"5-3-定义8种基本数据类型变量\"><a href=\"#5-3-定义8种基本数据类型变量\" class=\"headerlink\" title=\"5.3 定义8种基本数据类型变量\"></a>5.3 定义8种基本数据类型变量</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">VariableDemo3</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.定义byte类型的变量</span></span><br><span class=\"line\">        <span class=\"comment\">//数据类型 变量名 = 数据值;</span></span><br><span class=\"line\">        <span class=\"type\">byte</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">        System.out.println(a);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.定义short类型的变量</span></span><br><span class=\"line\">        <span class=\"type\">short</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">        System.out.println(b);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.定义int类型的变量</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"number\">30</span>;</span><br><span class=\"line\">        System.out.println(c);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4.定义long类型的变量</span></span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">d</span> <span class=\"operator\">=</span> <span class=\"number\">123456789123456789L</span>;</span><br><span class=\"line\">        System.out.println(d);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//5.定义float类型的变量</span></span><br><span class=\"line\">        <span class=\"type\">float</span> <span class=\"variable\">e</span> <span class=\"operator\">=</span> <span class=\"number\">10.1F</span>;</span><br><span class=\"line\">        System.out.println(e);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//6.定义double类型的变量</span></span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">f</span> <span class=\"operator\">=</span> <span class=\"number\">20.3</span>;</span><br><span class=\"line\">        System.out.println(f);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//7.定义char类型的变量</span></span><br><span class=\"line\">        <span class=\"type\">char</span> <span class=\"variable\">g</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">        System.out.println(g);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//8.定义boolean类型的变量</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">h</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        System.out.println(h);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"注意点-1\"><a href=\"#注意点-1\" class=\"headerlink\" title=\"注意点\"></a><strong>注意点</strong></h4><ul>\n<li>如果要定义 一个整数类型的变量，不知道选择哪种数据类型了，默认使用int。</li>\n<li>如果要定义 一个小数类型的变量，不知道选择哪种数据类型了，默认使用double。</li>\n<li>如果要定义一个long类型的变量，那么在数据值的后面需要加上L后缀。（大小写都可以，建议大写。）</li>\n<li>如果要定义一个float类型的变量，那么在数据值的后面需要加上F后缀。（大小写都可以）</li>\n</ul>\n<h3 id=\"5-4-练习1\"><a href=\"#5-4-练习1\" class=\"headerlink\" title=\"5.4 练习1\"></a>5.4 练习1</h3><p>需求：定义5个变量记录老师的信息并打印</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">VariableTest1</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//1.定义字符串类型的变量记录老师的姓名</span></span><br><span class=\"line\">\t\t<span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;黑马谢广坤&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//2.定义整数类型的变量记录老师的年龄</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">age</span> <span class=\"operator\">=</span> <span class=\"number\">18</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//3.定义字符类型的变量记录老师的性别</span></span><br><span class=\"line\">\t\t<span class=\"type\">char</span> <span class=\"variable\">gender</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;男&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//4.定义小数类型的变量记录老师的身高</span></span><br><span class=\"line\">\t\t<span class=\"type\">double</span> <span class=\"variable\">height</span> <span class=\"operator\">=</span> <span class=\"number\">180.1</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//5.定义布尔类型的变量记录老师的婚姻状况</span></span><br><span class=\"line\">\t\t<span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出5个变量的值</span></span><br><span class=\"line\">\t\tSystem.out.println(name);</span><br><span class=\"line\">\t\tSystem.out.println(age);</span><br><span class=\"line\">\t\tSystem.out.println(gender);</span><br><span class=\"line\">\t\tSystem.out.println(height);</span><br><span class=\"line\">\t\tSystem.out.println(flag);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-5-练习2\"><a href=\"#5-5-练习2\" class=\"headerlink\" title=\"5.5 练习2\"></a>5.5 练习2</h3><p>需求：将（电影名称，主演，年份，评分）四个信息选择不同类型的变量，随后打印出来。</p>\n<p> 代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">VariableTest2</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//1.定义字符串变量记录电影的名称</span></span><br><span class=\"line\">\t\t<span class=\"type\">String</span> <span class=\"variable\">movie</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;送初恋回家&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//2.定义三个变量记录主演的名字</span></span><br><span class=\"line\">\t\t<span class=\"type\">String</span> <span class=\"variable\">name1</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;刘鑫&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">String</span> <span class=\"variable\">name2</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;张雨提&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">String</span> <span class=\"variable\">name3</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;高媛&quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//3. 定义整数类型的变量记录年龄的年份</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">year</span> <span class=\"operator\">=</span> <span class=\"number\">2020</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//4.定义小数类型的变量记录电影的评分</span></span><br><span class=\"line\">\t\t<span class=\"type\">double</span> <span class=\"variable\">score</span> <span class=\"operator\">=</span> <span class=\"number\">9.0</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//打印变量的信息</span></span><br><span class=\"line\">\t\tSystem.out.println(movie);</span><br><span class=\"line\">\t\tSystem.out.println(name1);</span><br><span class=\"line\">\t\tSystem.out.println(name2);</span><br><span class=\"line\">\t\tSystem.out.println(name3);</span><br><span class=\"line\">\t\tSystem.out.println(year);</span><br><span class=\"line\">\t\tSystem.out.println(score);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-6-练习3\"><a href=\"#5-6-练习3\" class=\"headerlink\" title=\"5.6 练习3\"></a>5.6 练习3</h3><p>需求：选择其中一部手机，将（手机价格，手机品牌）两个信息选择不同类型的变量，随后打印出来。 </p>\n<p> 代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">VariableTest3</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//1.定义小数类型的变量记录手机的价格</span></span><br><span class=\"line\">\t\t<span class=\"type\">double</span> <span class=\"variable\">price</span> <span class=\"operator\">=</span> <span class=\"number\">5299.0</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//2.定义字符串类型的变量记录手机的品牌</span></span><br><span class=\"line\">\t\t<span class=\"type\">String</span> <span class=\"variable\">brand</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;华为&quot;</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出变量记录的值</span></span><br><span class=\"line\">\t\tSystem.out.println(price);</span><br><span class=\"line\">\t\tSystem.out.println(brand);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-标识符\"><a href=\"#6-标识符\" class=\"headerlink\" title=\"6. 标识符\"></a>6. 标识符</h2><p>业内大多数程序员都在遵守阿里巴巴的命名规则。</p>\n<p>在day02的资料文件夹中有。</p>\n<h3 id=\"6-1-硬性要求：\"><a href=\"#6-1-硬性要求：\" class=\"headerlink\" title=\"6.1 硬性要求：\"></a>6.1 硬性要求：</h3><p>​\t必须要这么做，否则代码会报错。</p>\n<ul>\n<li>必须由数字、字母、下划线_、美元符号$组成。</li>\n<li>数字不能开头</li>\n<li>不能是关键字</li>\n<li>区分大小写的。</li>\n</ul>\n<h3 id=\"6-2-软件建议：\"><a href=\"#6-2-软件建议：\" class=\"headerlink\" title=\"6.2 软件建议：\"></a>6.2 软件建议：</h3><p>​\t如果不这么做，代码不会报错，但是会让代码显得比较low。</p>\n<h3 id=\"6-2-1-小驼峰命名法\"><a href=\"#6-2-1-小驼峰命名法\" class=\"headerlink\" title=\"6.2.1 小驼峰命名法\"></a>6.2.1 小驼峰命名法</h3><p>适用于变量名和方法名</p>\n<ul>\n<li><p>如果是一个单词，那么全部小写，比如：name</p>\n</li>\n<li><p>如果是多个单词，那么从第二个单词开始，首字母大写，比如：firstName、maxAge</p>\n</li>\n</ul>\n<h3 id=\"6-2-2-大驼峰命名法\"><a href=\"#6-2-2-大驼峰命名法\" class=\"headerlink\" title=\"6.2.2 大驼峰命名法\"></a>6.2.2 大驼峰命名法</h3><p>适用于类名</p>\n<ul>\n<li><p>如果是一个单词，那么首字母大写。比如：Demo、Test。</p>\n</li>\n<li><p>如果是多个单词，那么每一个单词首字母都需要大写。比如：HelloWorld</p>\n</li>\n</ul>\n<p>不管起什么名字，都要做到见名知意。</p>\n<h3 id=\"阿里巴巴命名规范细节：\"><a href=\"#阿里巴巴命名规范细节：\" class=\"headerlink\" title=\"阿里巴巴命名规范细节：\"></a>阿里巴巴命名规范细节：</h3><ol>\n<li><p>尽量不要用拼音。但是一些国际通用的拼音可视为英文单词。</p>\n<p>正确：alibaba、hangzhou、nanjing</p>\n<p>错误：jiage、dazhe</p>\n</li>\n<li><p>平时在给变量名、方法名、类名起名字的时候，不要使用下划线或美元符号。</p>\n<p>错误：_name</p>\n<p>正确：name</p>\n</li>\n</ol>\n<h2 id=\"7-键盘录入\"><a href=\"#7-键盘录入\" class=\"headerlink\" title=\"7. 键盘录入\"></a>7. 键盘录入</h2><p>​\t键盘录入的实际功能Java已经帮我们写好了，不需要我们自己再实现了，而Java写好的功能都放在了Scanner这个类中，所以，我们只要直接使用Scanner这个类就可以了。</p>\n<p>使用步骤：</p>\n<p>第一步：</p>\n<p>​\t导包：其实就是表示先找到Scanner这个类在哪。</p>\n<p>第二步：</p>\n<p>​\t创建对象：其实就表示申明一下，我准备开始用Scanner这个类了。</p>\n<p>第三步：</p>\n<p>​\t接收数据：也是真正干活的代码。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//导包，其实就是先找到Scanner这个类在哪</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ScannerDemo1</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//2.创建对象，其实就是申明一下，我准备开始用Scanner这个类了。</span></span><br><span class=\"line\">\t\t<span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">\t\t<span class=\"comment\">//3.接收数据</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//当程序运行之后，我们在键盘输入的数据就会被变量i给接收了</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;请输入一个数字&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">\t\tSystem.out.println(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"8-IDEA\"><a href=\"#8-IDEA\" class=\"headerlink\" title=\"8. IDEA\"></a>8. IDEA</h2><h3 id=\"8-1-IDEA概述\"><a href=\"#8-1-IDEA概述\" class=\"headerlink\" title=\"8.1 IDEA概述\"></a>8.1 IDEA概述</h3><p>​\tIDEA全称IntelliJ IDEA，是用于Java语言开发的集成环境，它是业界公认的目前用于Java程序开发最好的工具。</p>\n<p><strong>集成环境：</strong></p>\n<p>​\t把代码编写，编译，执行，调试等多种功能综合到一起的开发工具。</p>\n<h3 id=\"8-2-IDEA的下载和安装\"><a href=\"#8-2-IDEA的下载和安装\" class=\"headerlink\" title=\"8.2 IDEA的下载和安装\"></a>8.2 IDEA的下载和安装</h3><h4 id=\"8-2-1-下载\"><a href=\"#8-2-1-下载\" class=\"headerlink\" title=\"8.2.1 下载\"></a>8.2.1 下载</h4><p>​\t可以到官方网站自行下载，网址为：<a href=\"https://www.jetbrains.com/idea\">https://www.jetbrains.com/idea</a></p>\n<p>​\t今天的资料中，对应的安装包也提高给大家了。</p>\n<h4 id=\"8-2-2-安装\"><a href=\"#8-2-2-安装\" class=\"headerlink\" title=\"8.2.2 安装\"></a>8.2.2 安装</h4><ul>\n<li>到资料文件夹中，双击安装包。</li>\n<li>点击next，准备安装</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%851.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>点击Browse修改安装路径。</p>\n<p>修改完毕点击next</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%852.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>勾选64-bit launcher。表示在桌面新建一个64位的快捷方式。</p>\n<p>其他的不要勾选。</p>\n<p>点击next。</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%854.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>点击Install，准备安装。</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%855.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>等进度条读取完毕之后，会有最终界面提示。</p>\n<p>点击finish即可。</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%856.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>第一次启动会询问，是否导入一些设置。</p>\n<p>选择第二个不导入，保持默认设置，再点击OK。</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%857.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>选择背景主题</p>\n<p>左边是黑色背景。右边是白色背景。</p>\n<p>这个可以根据自己的喜好来选择。</p>\n<p>选择完毕点击右下角的next</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%858.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>在本界面让我们购买idea。</p>\n<p>因为我们是学习阶段，所以可以使用免费使用30天。</p>\n<p>点击第一排第二个。Evaluate for free</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%859.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>点击蓝色的Evaluate，就可以开始免费试用30天了。</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%8510.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>当看到这个界面，就表示idea已经成功安装完毕</p>\n<p>可以点击右上角关闭。</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea%E5%AE%89%E8%A3%8511.png\" alt=\"计算机发展\"></p>\n<h3 id=\"8-3-IDEA中层级结构介绍\"><a href=\"#8-3-IDEA中层级结构介绍\" class=\"headerlink\" title=\"8.3 IDEA中层级结构介绍\"></a>8.3 IDEA中层级结构介绍</h3><h4 id=\"8-3-1-结构分类\"><a href=\"#8-3-1-结构分类\" class=\"headerlink\" title=\"8.3.1 结构分类\"></a>8.3.1 结构分类</h4><ul>\n<li>project（项目、工程）</li>\n<li>module（模块）</li>\n<li>package（包）</li>\n<li>class（类）</li>\n</ul>\n<h4 id=\"8-3-2-结构介绍\"><a href=\"#8-3-2-结构介绍\" class=\"headerlink\" title=\"8.3.2 结构介绍\"></a>8.3.2 结构介绍</h4><p>​\t为了让大家更好的吸收，package这一层级，我们后面再学习，先学习最基础的project、module、class。</p>\n<h5 id=\"project（项目、工程）\"><a href=\"#project（项目、工程）\" class=\"headerlink\" title=\"project（项目、工程）\"></a>project（项目、工程）</h5><p>​\t淘宝、京东、黑马程序员网站都属于一个个项目，IDEA中就是一个个的Project。</p>\n<h5 id=\"module（模块）\"><a href=\"#module（模块）\" class=\"headerlink\" title=\"module（模块）\"></a>module（模块）</h5><p>​\t在一个项目中，可以存放多个模块，不同的模块可以存放项目中不同的业务功能代码。在黑马程序员的官方网站中，至少包含了以下模块：</p>\n<ul>\n<li>论坛模块</li>\n<li>报名、咨询模块</li>\n</ul>\n<p>为了更好的管理代码，我们会把代码分别放在两个模块中存放。</p>\n<h5 id=\"package（包）\"><a href=\"#package（包）\" class=\"headerlink\" title=\"package（包）\"></a>package（包）</h5><p>​\t一个模块中又有很多的业务，以黑马程序员官方网站的论坛模块为例，至少包含了以下不同的业务。</p>\n<ul>\n<li>发帖</li>\n<li>评论</li>\n</ul>\n<p>为了把这些业务区分的更加清楚，就会用包来管理这些不同的业务。</p>\n<h5 id=\"class（类）\"><a href=\"#class（类）\" class=\"headerlink\" title=\"class（类）\"></a>class（类）</h5><p>​\t就是真正写代码的地方。</p>\n<h4 id=\"8-3-3-小结\"><a href=\"#8-3-3-小结\" class=\"headerlink\" title=\"8.3.3 小结\"></a>8.3.3 小结</h4><ul>\n<li><p>层级关系</p>\n<p>​\tproject - module - package - class</p>\n</li>\n<li><p>包含数量</p>\n<p>​\tproject中可以创建多个module<br>​\tmodule中可以创建多个package<br>​\tpackage中可以创建多个class</p>\n<p>​\t这些结构的划分，是为了方便管理类文件的。</p>\n</li>\n</ul>\n<h3 id=\"8-4-IDEA中的第一个代码\"><a href=\"#8-4-IDEA中的第一个代码\" class=\"headerlink\" title=\"8.4 IDEA中的第一个代码\"></a>8.4 IDEA中的第一个代码</h3><h5 id=\"8-4-1-操作步骤\"><a href=\"#8-4-1-操作步骤\" class=\"headerlink\" title=\"8.4.1 操作步骤\"></a>8.4.1 操作步骤</h5><ul>\n<li>创建Project 项目</li>\n<li>创建Module 模块</li>\n<li>创建class   类</li>\n<li>在类中编写代码</li>\n<li>完成编译运行</li>\n</ul>\n<h5 id=\"8-4-2-分步图解\"><a href=\"#8-4-2-分步图解\" class=\"headerlink\" title=\"8.4.2 分步图解\"></a>8.4.2 分步图解</h5><ul>\n<li><p>双击启动图标</p>\n<p><img src=\"/tupian/idea%E4%BD%BF%E7%94%A81.png\" alt=\"计算机发展\"></p>\n</li>\n<li><p>首先要新建一个项目</p>\n<p>点击creat new project</p>\n<p><img src=\"/tupian/idea1.png\" alt=\"计算机发展\"></p>\n</li>\n<li><p>我们要从0开始写代码，所以新建一个空的什么都没有的项目。</p>\n<p>点击左下方的Empty Project</p>\n<p>再点击右下角的next</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea2.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>输入项目的名称</p>\n<p>输入项目的存放路径</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea3.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>点击ok。idea会帮助我们在本地创建一个项目文件夹</li>\n</ul>\n<p><img src=\"/tupian/idea4.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>点击Module，准备新建一个模块</li>\n</ul>\n<p><img src=\"/tupian/idea5.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>点击+</p>\n<p>再点击New Module</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea6.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>我们要编写Java代码，所以要新建一个Java模块。</p>\n<p>点击Java</p>\n<p>再点击右下角的next</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea7.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>输入模块的名称</p>\n<p>再点击右下角的Next</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea8.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>成功新建一个模块之后，中间就会出现刚刚新建的模块</p>\n<p>点击右下角的OK</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea9.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>回到主界面</p>\n<p>展开刚刚新建的模块</p>\n<p>右键点击src，选择New，选择Java Class</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea10.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>输入类名</p>\n<p>再按回车</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea11.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>由于字体比较小</p>\n<p>所以，我们要设置一下字体。</p>\n<p>点击File，选择Setting。</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea12.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>搜索一下font</p>\n<p>在右边可以输入Size的数值来调节代码字体的大小。</p>\n<p>设置完毕后点击右下角的OK</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea13.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>编写代码</li>\n</ul>\n<p><img src=\"/tupian/idea14.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>运行代码</p>\n<p>右键空白处，点击Run</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea15.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>最下面会弹出控制台。</p>\n<p>所有输出语句中的内容，都会在控制台上展示。</p>\n</li>\n</ul>\n<p><img src=\"/tupian/idea16.png\" alt=\"计算机发展\"></p>\n<h3 id=\"8-5-IDEA中类的相关操作\"><a href=\"#8-5-IDEA中类的相关操作\" class=\"headerlink\" title=\"8.5 IDEA中类的相关操作\"></a>8.5 IDEA中类的相关操作</h3><h4 id=\"8-5-1-类的相关操作\"><a href=\"#8-5-1-类的相关操作\" class=\"headerlink\" title=\"8.5.1 类的相关操作\"></a>8.5.1 类的相关操作</h4><ul>\n<li>新建类文件</li>\n<li>删除类文件</li>\n<li>修改类文件</li>\n</ul>\n<h4 id=\"8-5-2-新建类文件\"><a href=\"#8-5-2-新建类文件\" class=\"headerlink\" title=\"8.5.2 新建类文件\"></a>8.5.2 新建类文件</h4><ul>\n<li><p>所有的Java代码都会写在src文件夹当中。</p>\n<p>所以，右键点击src，选择new，点击Java Class</p>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E7%B1%BB1.png\" alt=\"计算机发展\"></p>\n</li>\n<li><p>输入类名，再按回车</p>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E7%B1%BB2.png\" alt=\"计算机发展\"></p>\n</li>\n<li><p>新建完毕</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E7%B1%BB3.png\" alt=\"计算机发展\"></p>\n<h4 id=\"8-5-3-修改类名\"><a href=\"#8-5-3-修改类名\" class=\"headerlink\" title=\"8.5.3 修改类名\"></a>8.5.3 修改类名</h4><ul>\n<li><p>右键点击想要修改的文件</p>\n<p>点击Refactor</p>\n<p>再点击Rename</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E7%B1%BB%E5%90%8D1.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>输入想要修改的名字</p>\n<p>输入完毕点击下面的Refactor</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E7%B1%BB%E5%90%8D2.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>文件名和类名均已修改成功</p>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E7%B1%BB%E5%90%8D3.png\" alt=\"计算机发展\"></p>\n</li>\n</ul>\n<h4 id=\"8-5-4-删除类文件\"><a href=\"#8-5-4-删除类文件\" class=\"headerlink\" title=\"8.5.4 删除类文件\"></a>8.5.4 删除类文件</h4><ul>\n<li><p>想要删除哪个文件，就右键点击该文件</p>\n<p>选择Delete即可</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E5%88%A0%E9%99%A4%E7%B1%BB%E6%96%87%E4%BB%B61.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>在弹出的界面中点击OK，确定删除</li>\n</ul>\n<p><img src=\"/tupian/%E5%88%A0%E9%99%A4%E7%B1%BB%E6%96%87%E4%BB%B62.png\" alt=\"计算机发展\"></p>\n<blockquote>\n<p>小贴士：</p>\n<p>此时删除是不走回收站的，直接从硬盘中删掉了。</p>\n</blockquote>\n<h3 id=\"8-6-IDEA中模块的相关操作\"><a href=\"#8-6-IDEA中模块的相关操作\" class=\"headerlink\" title=\"8.6 IDEA中模块的相关操作\"></a>8.6 IDEA中模块的相关操作</h3><h4 id=\"8-6-1-模块的相关操作\"><a href=\"#8-6-1-模块的相关操作\" class=\"headerlink\" title=\"8.6.1 模块的相关操作\"></a>8.6.1 模块的相关操作</h4><ul>\n<li>新建模块</li>\n<li>删除模块</li>\n<li>修改模块</li>\n<li>导入模块</li>\n</ul>\n<h4 id=\"8-6-2-新建模块\"><a href=\"#8-6-2-新建模块\" class=\"headerlink\" title=\"8.6.2 新建模块\"></a>8.6.2 新建模块</h4><ul>\n<li>点击File，选择Project Structure</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%971.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>选择Module</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%972.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>点击+</p>\n<p>选择New Module</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%973.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>要创建一个Java模块，所以选择第一个Java</p>\n<p>点击右下角的Next</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%974.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>输入模块的名称</p>\n<p>点击右下角的Finish</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%975.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>成功新建完毕之后，在中间空白区域就出现了刚刚新建的模块</p>\n<p>点击右下角的OK</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%976.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>在主界面中，也会出现刚刚新建的模块</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E6%A8%A1%E5%9D%977.png\" alt=\"计算机发展\"></p>\n<h4 id=\"8-6-3-删除模块\"><a href=\"#8-6-3-删除模块\" class=\"headerlink\" title=\"8.6.3 删除模块\"></a>8.6.3 删除模块</h4><ul>\n<li><p>右键点击模块</p>\n<p>选择Remove Module</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E5%88%A0%E9%99%A4%E6%A8%A1%E5%9D%971.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>选择Remove，表示确定删除</li>\n</ul>\n<p><img src=\"/tupian/%E5%88%A0%E9%99%A4%E6%A8%A1%E5%9D%972.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>此时发现，在IDEA列表页面，删除的模块已经不在了。</li>\n</ul>\n<p><img src=\"/tupian/%E5%88%A0%E9%99%A4%E6%A8%A1%E5%9D%973.png\" alt=\"计算机发展\"></p>\n<blockquote>\n<p>小贴士：</p>\n<p>此时删除仅仅是从IDEA列表中的删除，在本地硬盘中还是存在的。</p>\n</blockquote>\n<h4 id=\"8-6-4-修改模块\"><a href=\"#8-6-4-修改模块\" class=\"headerlink\" title=\"8.6.4 修改模块\"></a>8.6.4 修改模块</h4><ul>\n<li><p>右键点击模块名</p>\n<p>选择Refactor</p>\n<p>再选择Rename</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D1.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>选择第三个修改模块名和本地文件夹名</p>\n<p>点击OK</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D3.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>输入要修改的新的模块名</p>\n<p>输入完毕点击Refactor</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D4.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>回到主界面，就发现模块名和文件夹名都已经修改完毕</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97%E5%90%8D5.png\" alt=\"计算机发展\"></p>\n<h4 id=\"8-6-5-导入模块\"><a href=\"#8-6-5-导入模块\" class=\"headerlink\" title=\"8.6.5 导入模块\"></a>8.6.5 导入模块</h4><ul>\n<li>点击File，选择Project Structure</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%971.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>选择Module</p>\n<p>点击+</p>\n<p>选择Import Module</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%972.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>从本地硬盘中选择要导入的模块</p>\n<p>再点击OK</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%973.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>不断点击Next</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%974.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>如果中间出现提示框，则点击Overwrite</p>\n<p>然后继续点击右下角的Next</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%975.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>一直点到finish为止</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%976.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>成功导入后，在中间位置就会出现导入的模块信息</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%977.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>在主界面中也会出现导入的模块信息</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%978.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>展开模块点击模块中的Java文件，会发现代码报错。</p>\n<p>是因为导入模块跟JDK没有关联导致。</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%979.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>可以点击右上角的Setup SDK</p>\n<p>再选择已经安装的JDK版本即可</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%9710.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>导入完毕之后，代码就恢复正常不会报错了</li>\n</ul>\n<p><img src=\"/tupian/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%9711.png\" alt=\"计算机发展\"></p>\n<h3 id=\"8-7-IDEA中项目的相关操作\"><a href=\"#8-7-IDEA中项目的相关操作\" class=\"headerlink\" title=\"8.7 IDEA中项目的相关操作\"></a>8.7 IDEA中项目的相关操作</h3><h4 id=\"8-7-1-项目的相关操作\"><a href=\"#8-7-1-项目的相关操作\" class=\"headerlink\" title=\"8.7.1 项目的相关操作\"></a>8.7.1 项目的相关操作</h4><ul>\n<li>关闭项目</li>\n<li>打开项目</li>\n<li>修改项目</li>\n<li>新建项目</li>\n</ul>\n<h4 id=\"8-7-2-关闭项目\"><a href=\"#8-7-2-关闭项目\" class=\"headerlink\" title=\"8.7.2 关闭项目\"></a>8.7.2 关闭项目</h4><ul>\n<li>点击File，选择Close Project即可</li>\n</ul>\n<p><img src=\"/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE1.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>刚刚操作的项目就已经关闭了</p>\n<p>左侧是项目列表，如果要再次打开该项目，直接点击即可。</p>\n<p>右侧有create new project，可以再建一个新的项目</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE2.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>鼠标放在项目上，后面会出现一个叉。</p>\n<p>如果点击了这里的叉，会在IDEA的列表中删除。不会删除本地硬盘上的项目。</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE3.png\" alt=\"计算机发展\"></p>\n<h4 id=\"8-7-3-打开项目\"><a href=\"#8-7-3-打开项目\" class=\"headerlink\" title=\"8.7.3 打开项目\"></a>8.7.3 打开项目</h4><ul>\n<li><p>在本界面还可以打开本地已经存在的项目</p>\n<p>点击Open or Import</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE1.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>选择要打开的项目</p>\n<p>点击OK</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE2.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>项目就被打开了。</li>\n</ul>\n<p><img src=\"/tupian/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE3.png\" alt=\"计算机发展\"></p>\n<h4 id=\"8-7-4-修改项目\"><a href=\"#8-7-4-修改项目\" class=\"headerlink\" title=\"8.7.4 修改项目\"></a>8.7.4 修改项目</h4><ul>\n<li>点击File，选择Project Structure</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE1.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>在这个界面，默认是Module</p>\n<p>所以，要先点击Project</p>\n<p>在右侧页面中，输入新的项目名称</p>\n<p>修改JDK版本和编译版本都变成JDK14</p>\n<p>再点击OK</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE2.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>此时发现，项目名称已经修改完毕</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE3.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>但是本地文件夹的名字还没有修改</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE4.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>需要先关闭当前项目</li>\n</ul>\n<p><img src=\"/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE1.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>点击项目后面的叉，从列表中移除项目</li>\n</ul>\n<p><img src=\"/tupian/%E5%85%B3%E9%97%AD%E9%A1%B9%E7%9B%AE3.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>到本地硬盘中手动修改文件夹的名称</li>\n</ul>\n<p> <img src=\"F:/JavaSE%E6%9C%80%E6%96%B0%E7%89%88/day02-Java%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/%E7%AC%94%E8%AE%B0//tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE5.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>点击Open or Import重新打开项目</li>\n</ul>\n<p><img src=\"/tupian/%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE1.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>选择修改之后的项目</p>\n<p>点击OK</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE6.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>此时会发现，项目名称和本地硬盘文件夹的名称都已经修改完毕了</li>\n</ul>\n<p><img src=\"/tupian/%E4%BF%AE%E6%94%B9%E9%A1%B9%E7%9B%AE7.png\" alt=\"计算机发展\"></p>\n<h4 id=\"8-7-5-新建项目\"><a href=\"#8-7-5-新建项目\" class=\"headerlink\" title=\"8.7.5 新建项目\"></a>8.7.5 新建项目</h4><ul>\n<li><p>点击File</p>\n<p>选择New</p>\n<p>点击Project</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE1.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>同样还是创建一个什么都没有的空项目</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE2.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>输入项目的名称</p>\n<p>点击右下角的finish</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE3.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>IDEA循环是否需要帮我们在本地创建一个新的文件夹</p>\n<p>点击OK</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE4.png\" alt=\"计算机发展\"></p>\n<ul>\n<li><p>询问是在本窗口打开还是在一个新的窗口打开。</p>\n<p>可以点击New Window，在一个新的窗口打开。</p>\n</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE5.png\" alt=\"计算机发展\"></p>\n<ul>\n<li>此时就出现了两个窗口，在一个新的窗口打开了新的项目</li>\n</ul>\n<p><img src=\"/tupian/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE6.png\" alt=\"计算机发展\"></p>\n"},{"title":"day05-循环高级","date":"2024-12-12T08:39:00.000Z","photos":["/tupian/j05.jpg"],"_content":"## 1.无限循环\n\n### 概念：\n\n​\t又叫死循环。循环一直停不下来。\n\n### for格式：\n\n```java\nfor(;;){\n    System.out.println(\"循环执行一直在打印内容\");\n}\n```\n\n解释：\n\n初始化语句可以空着不写，表示循环之前不定义任何的控制变量。\n\n条件判断语句可以空着不写，如果不写，默认表示true，循环一直进行。\n\n条件控制语句可以空着不写，表示每次循环体执行完毕后，控制变量不做任何变化。\n\n### while格式：\n\n```java\nwhile(true){\n    System.out.println(\"循环执行一直在打印内容\");\n}\n```\n\n解释：\n\n​\t小括号里面就不能省略了，true一定要写出来，否则代码会报错。\n\n### do...while格式：\n\n```java\ndo{\n    System.out.println(\"循环执行一直在打印内容\");\n}while(true);\n```\n\n解释：\n\n​\t小括号里面就不能省略了，true一定要写出来，否则代码会报错。\n\n### 无限循环的注意事项：\n\n* 最为常用的格式：while\n* 无限循环下面不能再写其他代码了，因为永远执行不到。\n\n## 2.条件控制语句\n\n* break\n* continue\n\n### break:\n\n​\t不能单独存在的。可以用在switch和循环中，表示结束，跳出的意思。\n\n代码示例：\n\n```java\n//1.吃1~5号包子\nfor (int i = 1; i <= 5; i++) {\n    System.out.println(\"在吃第\" + i + \"个包子\");\n    //2.吃完第三个的时候就不吃了\n    if(i == 3){\n        break;//结束整个循环。\n    }\n}\n```\n\n### continue:\n\n​\t不能单独存在的。只能存在于循环当中。\n\n​\t表示：跳过本次循环，继续执行下次循环。\n\n代码示例：\n\n```java\n//1.吃1~5号包子\nfor (int i = 1; i <= 5; i++) {\n    //2.第3个包子有虫子就跳过，继续吃下面的包子\n    if(i == 3){\n        //跳过本次循环（本次循环中，下面的代码就不执行了），继续执行下次循环。\n        continue;\n    }\n    System.out.println(\"在吃第\" + i + \"个包子\");\n}\n```\n\n## 3. Random\n\nRandom跟Scanner一样，也是Java提前写好的类，我们不需要关心是如何实现的，只要直接使用就可以了。\n\n### 使用步骤：\n\n1. 导包\n\n```java\nimport java.util.Random;\n导包的动作必须出现在类定义的上边。\n```\n\n2. 创建对象\n\n```java\nRandom r = new Random ();\n上面这个格式里面，只有r是变量名，可以变，其他的都不允许变。\n```\n\n3. 生成随机数\n\n```java\nint number = r.nextInt(随机数的范围);\n上面这个格式里面，只有number是变量名，可以变，其他的都不允许变。\n随机数范围的特点：从0开始，不包含指定值。比如：参数为10，生成的范围[0,10)\n```\n\n代码示例：\n\n```java\n//1.导包\nimport java.util.Random;\n\npublic class RandomDemo1 {\n    public static void main(String[] args) {\n        //2.创建对象\n        Random r = new Random();\n        //3.生成随机数\n        int number = r.nextInt(100);//包左不包右，包头不包尾\n        //0 ~ 99\n        System.out.println(number);\n\n    }\n}\n```\n\n## 4. 逢七过\n\n需求：\n\n​\t朋友聚会的时候可能会玩一个游戏：逢7过 \n\n​\t游戏规则：从任意一个数字开始报数，当你要报的数字是包含7或者是7的倍数时都要说过：过\n\n​\t使用程序在控制台打印出1-100之间的满足逢七必过规则的数据 \n\n举例：\n\n​\t1 2 3 4 5 6 过 8 9 10 11 12 13 过 15 16 过 18 ...\n\n代码示例：\n\n```java\n/*朋友聚会的时候可能会玩一个游戏：逢7过\n        游戏规则：从任意一个数字开始报数，当你要报的数字是包含7或者是7的倍数时都要说过：过\n        需求：使用程序在控制台打印出1-100之间的满足逢七必过规则的数据*/\n//分析：\n//个位7  十位7   7倍数\n//1 2 3 4 5 6 过 8 9 10 11 12 13 过 15 16 过 18 19 20 过....\n//69 过 过 过 过 过 过... 80\n//1.得到1~100之间的每一个数字\n//开始：1\n//结束：100\nfor (int i = 1; i <= 100; i++) {\n    //2.判断每一个数字，如果符合规则，就打印过，如果不符合规则就打印真实的数字\n    if(i % 10 == 7 || i / 10 % 10 == 7  ||  i % 7 == 0){\n        System.out.println(\"过\");\n        continue;\n    }\n    System.out.println(i);\n}\n```\n\n## 5. 平方根\n\n需求：\n\n​\t键盘录入一个大于等于2的整数 x ，计算并返回 x 的 平方根 。结果只保留整数部分 ，小数部分将被舍去 。\n\n代码示例：\n\n```java\n/*需求：键盘录入一个大于等于2的整数 x ，计算并返回 x 的 平方根 。\n        结果只保留整数部分 ，小数部分将被舍去 。*/\n\n\n//分析：\n//平方根   16的平方根4\n//         4的平方根2\n\n\n// 10\n// 1 * 1 = 1 < 10\n// 2 * 2 = 4 < 10\n// 3 * 3 = 9 < 10\n// 4 * 4 = 16 > 10\n//推断：10的平方根是在3~4之间。\n\n\n// 20\n// 1 * 1 = 1 < 20\n// 2 * 2 = 4 < 20\n// 3 * 3 = 9 < 20\n// 4 * 4 = 16 < 20\n// 5 * 5 = 25 > 20\n//推断：20的平方根是在4~5之间。\n\n\n//在代码当中\n//从1开始循环，拿着数字的平方跟原来的数字进行比较\n//如果小于的，那么继续往后判断\n//如果相等，那么当前数字就是平方根\n//如果大于的，那么前一个数字就是平方跟的整数部分\n\n\n//1.键盘录入一个整数\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入一个整数\");\nint number = sc.nextInt();\n//2.从1开始循环判断\n//开始：1 结束: number\nfor (int i = 1; i <= number; i++) {\n    //用i * i 再跟number进行比较\n    if(i * i == number){\n        System.out.println(i + \"就是\" + number + \"的平方根\");\n        //一旦找到了，循环就可以停止了，后面的数字就不需要再找了，提高代码的运行效率。\n        break;\n    }else if(i * i > number){\n        System.out.println((i - 1) + \"就是\" + number + \"平方根的整数部分\");\n        break;\n    }\n}\n```\n\n## 6.判断是否为质数\n\n需求：\n\n​\t键盘录入一个正整数 x ，判断该整数是否为一个质数。 \n\n代码示例：\n\n```java\n//需求：键盘录入一个正整数 x ，判断该整数是否为一个质数。\n\n//质数：\n//如果一个整数只能被1和本身整除，那么这个数就是质数。否则这个数叫做合数\n//7 = 1 * 7 质数\n//8 = 1 * 8  2 * 4 合数\n\n\n//分析：\n//1.键盘录入一个正整数\n//number\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入一个正整数\");\nint number = sc.nextInt();//9\n\n//定义一个变量，表示标记\n//标记着number是否为一个质数\n//true： 是一个质数\n//false : 不是一个质数\n\n//表示最初就认为number是一个质数\nboolean flag = true;\n\n\n//2.判断\n//写一个循环，从2开始判断，一直判断到number-1为止\n//看这个范围之内，有没有数字可以被number整除\nfor (int i = 2; i < number; i++) {\n    //i 依次表示这个范围之内的每一个数字\n    //看number是否能被i整除就可以了\n    if(number % i == 0){// 9 % 2 = 1\n        flag = false;\n        //System.out.println(number + \"不是一个质数\");\n        break;\n    }/*else{\n                System.out.println(number + \"是一个质数\");\n            }*/\n}\n\n//只有当这个循环结束了，表示这个范围之内所有的数字都判断完毕了\n//此时才能断定number是一个质数\nif(flag){\n    System.out.println(number + \"是一个质数\");\n}else{\n    System.out.println(number + \"不是一个质数\");\n}\n```\n\n## 7. 猜数字小游戏\n\n需求：\n\n​\t程序自动生成一个1-100之间的随机数，在代码中使用键盘录入去猜出这个数字是多少？\n\n要求：\n\n​\t使用循环猜，一直猜中为止。\n\n思路分析：\n\n1. 生成一个1-100之间的随机数\n2. 使用键盘录入去猜出这个数字是多少\n3. 把反复猜的代码写在循环中\n\n代码示例：\n\n```java\n//1.生成一个1-100之间的随机数\nRandom r = new Random();\nint number = r.nextInt(100) + 1;// 0 ~ 99 + 1 --- 1 ~ 100\nSystem.out.println(number);\n\n//2.使用键盘录入去猜出这个数字是多少？\nScanner sc = new Scanner(System.in);\nwhile(true){\n    System.out.println(\"请输入一个整数\");\n    int guessNumber = sc.nextInt();\n    //3.比较\n    if(guessNumber > number){\n        System.out.println(\"您猜的数字大了\");\n    }else if(guessNumber < number){\n        System.out.println(\"您猜的数字小了\");\n    }else{\n        System.out.println(\"恭喜你，猜中了\");\n        break;\n    }\n}\n```\n","source":"_posts/day05-循环高级.md","raw":"---\ntitle: day05-循环高级\ndate: 2024-12-12 16:39:00\ntags:\n    - 循环\ncategories: java\nphotos: /tupian/j05.jpg\n---\n## 1.无限循环\n\n### 概念：\n\n​\t又叫死循环。循环一直停不下来。\n\n### for格式：\n\n```java\nfor(;;){\n    System.out.println(\"循环执行一直在打印内容\");\n}\n```\n\n解释：\n\n初始化语句可以空着不写，表示循环之前不定义任何的控制变量。\n\n条件判断语句可以空着不写，如果不写，默认表示true，循环一直进行。\n\n条件控制语句可以空着不写，表示每次循环体执行完毕后，控制变量不做任何变化。\n\n### while格式：\n\n```java\nwhile(true){\n    System.out.println(\"循环执行一直在打印内容\");\n}\n```\n\n解释：\n\n​\t小括号里面就不能省略了，true一定要写出来，否则代码会报错。\n\n### do...while格式：\n\n```java\ndo{\n    System.out.println(\"循环执行一直在打印内容\");\n}while(true);\n```\n\n解释：\n\n​\t小括号里面就不能省略了，true一定要写出来，否则代码会报错。\n\n### 无限循环的注意事项：\n\n* 最为常用的格式：while\n* 无限循环下面不能再写其他代码了，因为永远执行不到。\n\n## 2.条件控制语句\n\n* break\n* continue\n\n### break:\n\n​\t不能单独存在的。可以用在switch和循环中，表示结束，跳出的意思。\n\n代码示例：\n\n```java\n//1.吃1~5号包子\nfor (int i = 1; i <= 5; i++) {\n    System.out.println(\"在吃第\" + i + \"个包子\");\n    //2.吃完第三个的时候就不吃了\n    if(i == 3){\n        break;//结束整个循环。\n    }\n}\n```\n\n### continue:\n\n​\t不能单独存在的。只能存在于循环当中。\n\n​\t表示：跳过本次循环，继续执行下次循环。\n\n代码示例：\n\n```java\n//1.吃1~5号包子\nfor (int i = 1; i <= 5; i++) {\n    //2.第3个包子有虫子就跳过，继续吃下面的包子\n    if(i == 3){\n        //跳过本次循环（本次循环中，下面的代码就不执行了），继续执行下次循环。\n        continue;\n    }\n    System.out.println(\"在吃第\" + i + \"个包子\");\n}\n```\n\n## 3. Random\n\nRandom跟Scanner一样，也是Java提前写好的类，我们不需要关心是如何实现的，只要直接使用就可以了。\n\n### 使用步骤：\n\n1. 导包\n\n```java\nimport java.util.Random;\n导包的动作必须出现在类定义的上边。\n```\n\n2. 创建对象\n\n```java\nRandom r = new Random ();\n上面这个格式里面，只有r是变量名，可以变，其他的都不允许变。\n```\n\n3. 生成随机数\n\n```java\nint number = r.nextInt(随机数的范围);\n上面这个格式里面，只有number是变量名，可以变，其他的都不允许变。\n随机数范围的特点：从0开始，不包含指定值。比如：参数为10，生成的范围[0,10)\n```\n\n代码示例：\n\n```java\n//1.导包\nimport java.util.Random;\n\npublic class RandomDemo1 {\n    public static void main(String[] args) {\n        //2.创建对象\n        Random r = new Random();\n        //3.生成随机数\n        int number = r.nextInt(100);//包左不包右，包头不包尾\n        //0 ~ 99\n        System.out.println(number);\n\n    }\n}\n```\n\n## 4. 逢七过\n\n需求：\n\n​\t朋友聚会的时候可能会玩一个游戏：逢7过 \n\n​\t游戏规则：从任意一个数字开始报数，当你要报的数字是包含7或者是7的倍数时都要说过：过\n\n​\t使用程序在控制台打印出1-100之间的满足逢七必过规则的数据 \n\n举例：\n\n​\t1 2 3 4 5 6 过 8 9 10 11 12 13 过 15 16 过 18 ...\n\n代码示例：\n\n```java\n/*朋友聚会的时候可能会玩一个游戏：逢7过\n        游戏规则：从任意一个数字开始报数，当你要报的数字是包含7或者是7的倍数时都要说过：过\n        需求：使用程序在控制台打印出1-100之间的满足逢七必过规则的数据*/\n//分析：\n//个位7  十位7   7倍数\n//1 2 3 4 5 6 过 8 9 10 11 12 13 过 15 16 过 18 19 20 过....\n//69 过 过 过 过 过 过... 80\n//1.得到1~100之间的每一个数字\n//开始：1\n//结束：100\nfor (int i = 1; i <= 100; i++) {\n    //2.判断每一个数字，如果符合规则，就打印过，如果不符合规则就打印真实的数字\n    if(i % 10 == 7 || i / 10 % 10 == 7  ||  i % 7 == 0){\n        System.out.println(\"过\");\n        continue;\n    }\n    System.out.println(i);\n}\n```\n\n## 5. 平方根\n\n需求：\n\n​\t键盘录入一个大于等于2的整数 x ，计算并返回 x 的 平方根 。结果只保留整数部分 ，小数部分将被舍去 。\n\n代码示例：\n\n```java\n/*需求：键盘录入一个大于等于2的整数 x ，计算并返回 x 的 平方根 。\n        结果只保留整数部分 ，小数部分将被舍去 。*/\n\n\n//分析：\n//平方根   16的平方根4\n//         4的平方根2\n\n\n// 10\n// 1 * 1 = 1 < 10\n// 2 * 2 = 4 < 10\n// 3 * 3 = 9 < 10\n// 4 * 4 = 16 > 10\n//推断：10的平方根是在3~4之间。\n\n\n// 20\n// 1 * 1 = 1 < 20\n// 2 * 2 = 4 < 20\n// 3 * 3 = 9 < 20\n// 4 * 4 = 16 < 20\n// 5 * 5 = 25 > 20\n//推断：20的平方根是在4~5之间。\n\n\n//在代码当中\n//从1开始循环，拿着数字的平方跟原来的数字进行比较\n//如果小于的，那么继续往后判断\n//如果相等，那么当前数字就是平方根\n//如果大于的，那么前一个数字就是平方跟的整数部分\n\n\n//1.键盘录入一个整数\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入一个整数\");\nint number = sc.nextInt();\n//2.从1开始循环判断\n//开始：1 结束: number\nfor (int i = 1; i <= number; i++) {\n    //用i * i 再跟number进行比较\n    if(i * i == number){\n        System.out.println(i + \"就是\" + number + \"的平方根\");\n        //一旦找到了，循环就可以停止了，后面的数字就不需要再找了，提高代码的运行效率。\n        break;\n    }else if(i * i > number){\n        System.out.println((i - 1) + \"就是\" + number + \"平方根的整数部分\");\n        break;\n    }\n}\n```\n\n## 6.判断是否为质数\n\n需求：\n\n​\t键盘录入一个正整数 x ，判断该整数是否为一个质数。 \n\n代码示例：\n\n```java\n//需求：键盘录入一个正整数 x ，判断该整数是否为一个质数。\n\n//质数：\n//如果一个整数只能被1和本身整除，那么这个数就是质数。否则这个数叫做合数\n//7 = 1 * 7 质数\n//8 = 1 * 8  2 * 4 合数\n\n\n//分析：\n//1.键盘录入一个正整数\n//number\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入一个正整数\");\nint number = sc.nextInt();//9\n\n//定义一个变量，表示标记\n//标记着number是否为一个质数\n//true： 是一个质数\n//false : 不是一个质数\n\n//表示最初就认为number是一个质数\nboolean flag = true;\n\n\n//2.判断\n//写一个循环，从2开始判断，一直判断到number-1为止\n//看这个范围之内，有没有数字可以被number整除\nfor (int i = 2; i < number; i++) {\n    //i 依次表示这个范围之内的每一个数字\n    //看number是否能被i整除就可以了\n    if(number % i == 0){// 9 % 2 = 1\n        flag = false;\n        //System.out.println(number + \"不是一个质数\");\n        break;\n    }/*else{\n                System.out.println(number + \"是一个质数\");\n            }*/\n}\n\n//只有当这个循环结束了，表示这个范围之内所有的数字都判断完毕了\n//此时才能断定number是一个质数\nif(flag){\n    System.out.println(number + \"是一个质数\");\n}else{\n    System.out.println(number + \"不是一个质数\");\n}\n```\n\n## 7. 猜数字小游戏\n\n需求：\n\n​\t程序自动生成一个1-100之间的随机数，在代码中使用键盘录入去猜出这个数字是多少？\n\n要求：\n\n​\t使用循环猜，一直猜中为止。\n\n思路分析：\n\n1. 生成一个1-100之间的随机数\n2. 使用键盘录入去猜出这个数字是多少\n3. 把反复猜的代码写在循环中\n\n代码示例：\n\n```java\n//1.生成一个1-100之间的随机数\nRandom r = new Random();\nint number = r.nextInt(100) + 1;// 0 ~ 99 + 1 --- 1 ~ 100\nSystem.out.println(number);\n\n//2.使用键盘录入去猜出这个数字是多少？\nScanner sc = new Scanner(System.in);\nwhile(true){\n    System.out.println(\"请输入一个整数\");\n    int guessNumber = sc.nextInt();\n    //3.比较\n    if(guessNumber > number){\n        System.out.println(\"您猜的数字大了\");\n    }else if(guessNumber < number){\n        System.out.println(\"您猜的数字小了\");\n    }else{\n        System.out.println(\"恭喜你，猜中了\");\n        break;\n    }\n}\n```\n","slug":"day05-循环高级","published":1,"updated":"2024-12-12T08:49:02.268Z","comments":1,"layout":"post","_id":"cm4ld1o87000bqstogl3i4emc","content":"<h2 id=\"1-无限循环\"><a href=\"#1-无限循环\" class=\"headerlink\" title=\"1.无限循环\"></a>1.无限循环</h2><h3 id=\"概念：\"><a href=\"#概念：\" class=\"headerlink\" title=\"概念：\"></a>概念：</h3><p>​\t又叫死循环。循环一直停不下来。</p>\n<h3 id=\"for格式：\"><a href=\"#for格式：\" class=\"headerlink\" title=\"for格式：\"></a>for格式：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(;;)&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;循环执行一直在打印内容&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>解释：</p>\n<p>初始化语句可以空着不写，表示循环之前不定义任何的控制变量。</p>\n<p>条件判断语句可以空着不写，如果不写，默认表示true，循环一直进行。</p>\n<p>条件控制语句可以空着不写，表示每次循环体执行完毕后，控制变量不做任何变化。</p>\n<h3 id=\"while格式：\"><a href=\"#while格式：\" class=\"headerlink\" title=\"while格式：\"></a>while格式：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;循环执行一直在打印内容&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>解释：</p>\n<p>​\t小括号里面就不能省略了，true一定要写出来，否则代码会报错。</p>\n<h3 id=\"do…while格式：\"><a href=\"#do…while格式：\" class=\"headerlink\" title=\"do…while格式：\"></a>do…while格式：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;循环执行一直在打印内容&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">while</span>(<span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n\n<p>解释：</p>\n<p>​\t小括号里面就不能省略了，true一定要写出来，否则代码会报错。</p>\n<h3 id=\"无限循环的注意事项：\"><a href=\"#无限循环的注意事项：\" class=\"headerlink\" title=\"无限循环的注意事项：\"></a>无限循环的注意事项：</h3><ul>\n<li>最为常用的格式：while</li>\n<li>无限循环下面不能再写其他代码了，因为永远执行不到。</li>\n</ul>\n<h2 id=\"2-条件控制语句\"><a href=\"#2-条件控制语句\" class=\"headerlink\" title=\"2.条件控制语句\"></a>2.条件控制语句</h2><ul>\n<li>break</li>\n<li>continue</li>\n</ul>\n<h3 id=\"break\"><a href=\"#break\" class=\"headerlink\" title=\"break:\"></a>break:</h3><p>​\t不能单独存在的。可以用在switch和循环中，表示结束，跳出的意思。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.吃1~5号包子</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;在吃第&quot;</span> + i + <span class=\"string\">&quot;个包子&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//2.吃完第三个的时候就不吃了</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i == <span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;<span class=\"comment\">//结束整个循环。</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"continue\"><a href=\"#continue\" class=\"headerlink\" title=\"continue:\"></a>continue:</h3><p>​\t不能单独存在的。只能存在于循环当中。</p>\n<p>​\t表示：跳过本次循环，继续执行下次循环。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.吃1~5号包子</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//2.第3个包子有虫子就跳过，继续吃下面的包子</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i == <span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//跳过本次循环（本次循环中，下面的代码就不执行了），继续执行下次循环。</span></span><br><span class=\"line\">        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;在吃第&quot;</span> + i + <span class=\"string\">&quot;个包子&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-Random\"><a href=\"#3-Random\" class=\"headerlink\" title=\"3. Random\"></a>3. Random</h2><p>Random跟Scanner一样，也是Java提前写好的类，我们不需要关心是如何实现的，只要直接使用就可以了。</p>\n<h3 id=\"使用步骤：\"><a href=\"#使用步骤：\" class=\"headerlink\" title=\"使用步骤：\"></a>使用步骤：</h3><ol>\n<li>导包</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\">导包的动作必须出现在类定义的上边。</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>创建对象</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Random</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span> ();</span><br><span class=\"line\">上面这个格式里面，只有r是变量名，可以变，其他的都不允许变。</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>生成随机数</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> r.nextInt(随机数的范围);</span><br><span class=\"line\">上面这个格式里面，只有number是变量名，可以变，其他的都不允许变。</span><br><span class=\"line\">随机数范围的特点：从<span class=\"number\">0</span>开始，不包含指定值。比如：参数为<span class=\"number\">10</span>，生成的范围[<span class=\"number\">0</span>,<span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.导包</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RandomDemo1</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//2.创建对象</span></span><br><span class=\"line\">        <span class=\"type\">Random</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\">        <span class=\"comment\">//3.生成随机数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> r.nextInt(<span class=\"number\">100</span>);<span class=\"comment\">//包左不包右，包头不包尾</span></span><br><span class=\"line\">        <span class=\"comment\">//0 ~ 99</span></span><br><span class=\"line\">        System.out.println(number);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-逢七过\"><a href=\"#4-逢七过\" class=\"headerlink\" title=\"4. 逢七过\"></a>4. 逢七过</h2><p>需求：</p>\n<p>​\t朋友聚会的时候可能会玩一个游戏：逢7过 </p>\n<p>​\t游戏规则：从任意一个数字开始报数，当你要报的数字是包含7或者是7的倍数时都要说过：过</p>\n<p>​\t使用程序在控制台打印出1-100之间的满足逢七必过规则的数据 </p>\n<p>举例：</p>\n<p>​\t1 2 3 4 5 6 过 8 9 10 11 12 13 过 15 16 过 18 …</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*朋友聚会的时候可能会玩一个游戏：逢7过</span></span><br><span class=\"line\"><span class=\"comment\">        游戏规则：从任意一个数字开始报数，当你要报的数字是包含7或者是7的倍数时都要说过：过</span></span><br><span class=\"line\"><span class=\"comment\">        需求：使用程序在控制台打印出1-100之间的满足逢七必过规则的数据*/</span></span><br><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//个位7  十位7   7倍数</span></span><br><span class=\"line\"><span class=\"comment\">//1 2 3 4 5 6 过 8 9 10 11 12 13 过 15 16 过 18 19 20 过....</span></span><br><span class=\"line\"><span class=\"comment\">//69 过 过 过 过 过 过... 80</span></span><br><span class=\"line\"><span class=\"comment\">//1.得到1~100之间的每一个数字</span></span><br><span class=\"line\"><span class=\"comment\">//开始：1</span></span><br><span class=\"line\"><span class=\"comment\">//结束：100</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//2.判断每一个数字，如果符合规则，就打印过，如果不符合规则就打印真实的数字</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i % <span class=\"number\">10</span> == <span class=\"number\">7</span> || i / <span class=\"number\">10</span> % <span class=\"number\">10</span> == <span class=\"number\">7</span>  ||  i % <span class=\"number\">7</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;过&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-平方根\"><a href=\"#5-平方根\" class=\"headerlink\" title=\"5. 平方根\"></a>5. 平方根</h2><p>需求：</p>\n<p>​\t键盘录入一个大于等于2的整数 x ，计算并返回 x 的 平方根 。结果只保留整数部分 ，小数部分将被舍去 。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*需求：键盘录入一个大于等于2的整数 x ，计算并返回 x 的 平方根 。</span></span><br><span class=\"line\"><span class=\"comment\">        结果只保留整数部分 ，小数部分将被舍去 。*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//平方根   16的平方根4</span></span><br><span class=\"line\"><span class=\"comment\">//         4的平方根2</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 10</span></span><br><span class=\"line\"><span class=\"comment\">// 1 * 1 = 1 &lt; 10</span></span><br><span class=\"line\"><span class=\"comment\">// 2 * 2 = 4 &lt; 10</span></span><br><span class=\"line\"><span class=\"comment\">// 3 * 3 = 9 &lt; 10</span></span><br><span class=\"line\"><span class=\"comment\">// 4 * 4 = 16 &gt; 10</span></span><br><span class=\"line\"><span class=\"comment\">//推断：10的平方根是在3~4之间。</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 20</span></span><br><span class=\"line\"><span class=\"comment\">// 1 * 1 = 1 &lt; 20</span></span><br><span class=\"line\"><span class=\"comment\">// 2 * 2 = 4 &lt; 20</span></span><br><span class=\"line\"><span class=\"comment\">// 3 * 3 = 9 &lt; 20</span></span><br><span class=\"line\"><span class=\"comment\">// 4 * 4 = 16 &lt; 20</span></span><br><span class=\"line\"><span class=\"comment\">// 5 * 5 = 25 &gt; 20</span></span><br><span class=\"line\"><span class=\"comment\">//推断：20的平方根是在4~5之间。</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//在代码当中</span></span><br><span class=\"line\"><span class=\"comment\">//从1开始循环，拿着数字的平方跟原来的数字进行比较</span></span><br><span class=\"line\"><span class=\"comment\">//如果小于的，那么继续往后判断</span></span><br><span class=\"line\"><span class=\"comment\">//如果相等，那么当前数字就是平方根</span></span><br><span class=\"line\"><span class=\"comment\">//如果大于的，那么前一个数字就是平方跟的整数部分</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//1.键盘录入一个整数</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入一个整数&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\"><span class=\"comment\">//2.从1开始循环判断</span></span><br><span class=\"line\"><span class=\"comment\">//开始：1 结束: number</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= number; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//用i * i 再跟number进行比较</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i * i == number)&#123;</span><br><span class=\"line\">        System.out.println(i + <span class=\"string\">&quot;就是&quot;</span> + number + <span class=\"string\">&quot;的平方根&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//一旦找到了，循环就可以停止了，后面的数字就不需要再找了，提高代码的运行效率。</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i * i &gt; number)&#123;</span><br><span class=\"line\">        System.out.println((i - <span class=\"number\">1</span>) + <span class=\"string\">&quot;就是&quot;</span> + number + <span class=\"string\">&quot;平方根的整数部分&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-判断是否为质数\"><a href=\"#6-判断是否为质数\" class=\"headerlink\" title=\"6.判断是否为质数\"></a>6.判断是否为质数</h2><p>需求：</p>\n<p>​\t键盘录入一个正整数 x ，判断该整数是否为一个质数。 </p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//需求：键盘录入一个正整数 x ，判断该整数是否为一个质数。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//质数：</span></span><br><span class=\"line\"><span class=\"comment\">//如果一个整数只能被1和本身整除，那么这个数就是质数。否则这个数叫做合数</span></span><br><span class=\"line\"><span class=\"comment\">//7 = 1 * 7 质数</span></span><br><span class=\"line\"><span class=\"comment\">//8 = 1 * 8  2 * 4 合数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.键盘录入一个正整数</span></span><br><span class=\"line\"><span class=\"comment\">//number</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入一个正整数&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> sc.nextInt();<span class=\"comment\">//9</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//定义一个变量，表示标记</span></span><br><span class=\"line\"><span class=\"comment\">//标记着number是否为一个质数</span></span><br><span class=\"line\"><span class=\"comment\">//true： 是一个质数</span></span><br><span class=\"line\"><span class=\"comment\">//false : 不是一个质数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//表示最初就认为number是一个质数</span></span><br><span class=\"line\"><span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.判断</span></span><br><span class=\"line\"><span class=\"comment\">//写一个循环，从2开始判断，一直判断到number-1为止</span></span><br><span class=\"line\"><span class=\"comment\">//看这个范围之内，有没有数字可以被number整除</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">2</span>; i &lt; number; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//i 依次表示这个范围之内的每一个数字</span></span><br><span class=\"line\">    <span class=\"comment\">//看number是否能被i整除就可以了</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(number % i == <span class=\"number\">0</span>)&#123;<span class=\"comment\">// 9 % 2 = 1</span></span><br><span class=\"line\">        flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(number + &quot;不是一个质数&quot;);</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;<span class=\"comment\">/*else&#123;</span></span><br><span class=\"line\"><span class=\"comment\">                System.out.println(number + &quot;是一个质数&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">            &#125;*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//只有当这个循环结束了，表示这个范围之内所有的数字都判断完毕了</span></span><br><span class=\"line\"><span class=\"comment\">//此时才能断定number是一个质数</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(flag)&#123;</span><br><span class=\"line\">    System.out.println(number + <span class=\"string\">&quot;是一个质数&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    System.out.println(number + <span class=\"string\">&quot;不是一个质数&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-猜数字小游戏\"><a href=\"#7-猜数字小游戏\" class=\"headerlink\" title=\"7. 猜数字小游戏\"></a>7. 猜数字小游戏</h2><p>需求：</p>\n<p>​\t程序自动生成一个1-100之间的随机数，在代码中使用键盘录入去猜出这个数字是多少？</p>\n<p>要求：</p>\n<p>​\t使用循环猜，一直猜中为止。</p>\n<p>思路分析：</p>\n<ol>\n<li>生成一个1-100之间的随机数</li>\n<li>使用键盘录入去猜出这个数字是多少</li>\n<li>把反复猜的代码写在循环中</li>\n</ol>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.生成一个1-100之间的随机数</span></span><br><span class=\"line\"><span class=\"type\">Random</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> r.nextInt(<span class=\"number\">100</span>) + <span class=\"number\">1</span>;<span class=\"comment\">// 0 ~ 99 + 1 --- 1 ~ 100</span></span><br><span class=\"line\">System.out.println(number);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.使用键盘录入去猜出这个数字是多少？</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;请输入一个整数&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">guessNumber</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">    <span class=\"comment\">//3.比较</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(guessNumber &gt; number)&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;您猜的数字大了&quot;</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(guessNumber &lt; number)&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;您猜的数字小了&quot;</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;恭喜你，猜中了&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","length":4496,"excerpt":"","more":"<h2 id=\"1-无限循环\"><a href=\"#1-无限循环\" class=\"headerlink\" title=\"1.无限循环\"></a>1.无限循环</h2><h3 id=\"概念：\"><a href=\"#概念：\" class=\"headerlink\" title=\"概念：\"></a>概念：</h3><p>​\t又叫死循环。循环一直停不下来。</p>\n<h3 id=\"for格式：\"><a href=\"#for格式：\" class=\"headerlink\" title=\"for格式：\"></a>for格式：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(;;)&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;循环执行一直在打印内容&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>解释：</p>\n<p>初始化语句可以空着不写，表示循环之前不定义任何的控制变量。</p>\n<p>条件判断语句可以空着不写，如果不写，默认表示true，循环一直进行。</p>\n<p>条件控制语句可以空着不写，表示每次循环体执行完毕后，控制变量不做任何变化。</p>\n<h3 id=\"while格式：\"><a href=\"#while格式：\" class=\"headerlink\" title=\"while格式：\"></a>while格式：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;循环执行一直在打印内容&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>解释：</p>\n<p>​\t小括号里面就不能省略了，true一定要写出来，否则代码会报错。</p>\n<h3 id=\"do…while格式：\"><a href=\"#do…while格式：\" class=\"headerlink\" title=\"do…while格式：\"></a>do…while格式：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;循环执行一直在打印内容&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">while</span>(<span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n\n<p>解释：</p>\n<p>​\t小括号里面就不能省略了，true一定要写出来，否则代码会报错。</p>\n<h3 id=\"无限循环的注意事项：\"><a href=\"#无限循环的注意事项：\" class=\"headerlink\" title=\"无限循环的注意事项：\"></a>无限循环的注意事项：</h3><ul>\n<li>最为常用的格式：while</li>\n<li>无限循环下面不能再写其他代码了，因为永远执行不到。</li>\n</ul>\n<h2 id=\"2-条件控制语句\"><a href=\"#2-条件控制语句\" class=\"headerlink\" title=\"2.条件控制语句\"></a>2.条件控制语句</h2><ul>\n<li>break</li>\n<li>continue</li>\n</ul>\n<h3 id=\"break\"><a href=\"#break\" class=\"headerlink\" title=\"break:\"></a>break:</h3><p>​\t不能单独存在的。可以用在switch和循环中，表示结束，跳出的意思。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.吃1~5号包子</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;在吃第&quot;</span> + i + <span class=\"string\">&quot;个包子&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//2.吃完第三个的时候就不吃了</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i == <span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;<span class=\"comment\">//结束整个循环。</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"continue\"><a href=\"#continue\" class=\"headerlink\" title=\"continue:\"></a>continue:</h3><p>​\t不能单独存在的。只能存在于循环当中。</p>\n<p>​\t表示：跳过本次循环，继续执行下次循环。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.吃1~5号包子</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//2.第3个包子有虫子就跳过，继续吃下面的包子</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i == <span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//跳过本次循环（本次循环中，下面的代码就不执行了），继续执行下次循环。</span></span><br><span class=\"line\">        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;在吃第&quot;</span> + i + <span class=\"string\">&quot;个包子&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-Random\"><a href=\"#3-Random\" class=\"headerlink\" title=\"3. Random\"></a>3. Random</h2><p>Random跟Scanner一样，也是Java提前写好的类，我们不需要关心是如何实现的，只要直接使用就可以了。</p>\n<h3 id=\"使用步骤：\"><a href=\"#使用步骤：\" class=\"headerlink\" title=\"使用步骤：\"></a>使用步骤：</h3><ol>\n<li>导包</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\">导包的动作必须出现在类定义的上边。</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>创建对象</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Random</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span> ();</span><br><span class=\"line\">上面这个格式里面，只有r是变量名，可以变，其他的都不允许变。</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>生成随机数</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> r.nextInt(随机数的范围);</span><br><span class=\"line\">上面这个格式里面，只有number是变量名，可以变，其他的都不允许变。</span><br><span class=\"line\">随机数范围的特点：从<span class=\"number\">0</span>开始，不包含指定值。比如：参数为<span class=\"number\">10</span>，生成的范围[<span class=\"number\">0</span>,<span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.导包</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RandomDemo1</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//2.创建对象</span></span><br><span class=\"line\">        <span class=\"type\">Random</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\">        <span class=\"comment\">//3.生成随机数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> r.nextInt(<span class=\"number\">100</span>);<span class=\"comment\">//包左不包右，包头不包尾</span></span><br><span class=\"line\">        <span class=\"comment\">//0 ~ 99</span></span><br><span class=\"line\">        System.out.println(number);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-逢七过\"><a href=\"#4-逢七过\" class=\"headerlink\" title=\"4. 逢七过\"></a>4. 逢七过</h2><p>需求：</p>\n<p>​\t朋友聚会的时候可能会玩一个游戏：逢7过 </p>\n<p>​\t游戏规则：从任意一个数字开始报数，当你要报的数字是包含7或者是7的倍数时都要说过：过</p>\n<p>​\t使用程序在控制台打印出1-100之间的满足逢七必过规则的数据 </p>\n<p>举例：</p>\n<p>​\t1 2 3 4 5 6 过 8 9 10 11 12 13 过 15 16 过 18 …</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*朋友聚会的时候可能会玩一个游戏：逢7过</span></span><br><span class=\"line\"><span class=\"comment\">        游戏规则：从任意一个数字开始报数，当你要报的数字是包含7或者是7的倍数时都要说过：过</span></span><br><span class=\"line\"><span class=\"comment\">        需求：使用程序在控制台打印出1-100之间的满足逢七必过规则的数据*/</span></span><br><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//个位7  十位7   7倍数</span></span><br><span class=\"line\"><span class=\"comment\">//1 2 3 4 5 6 过 8 9 10 11 12 13 过 15 16 过 18 19 20 过....</span></span><br><span class=\"line\"><span class=\"comment\">//69 过 过 过 过 过 过... 80</span></span><br><span class=\"line\"><span class=\"comment\">//1.得到1~100之间的每一个数字</span></span><br><span class=\"line\"><span class=\"comment\">//开始：1</span></span><br><span class=\"line\"><span class=\"comment\">//结束：100</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//2.判断每一个数字，如果符合规则，就打印过，如果不符合规则就打印真实的数字</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i % <span class=\"number\">10</span> == <span class=\"number\">7</span> || i / <span class=\"number\">10</span> % <span class=\"number\">10</span> == <span class=\"number\">7</span>  ||  i % <span class=\"number\">7</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;过&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-平方根\"><a href=\"#5-平方根\" class=\"headerlink\" title=\"5. 平方根\"></a>5. 平方根</h2><p>需求：</p>\n<p>​\t键盘录入一个大于等于2的整数 x ，计算并返回 x 的 平方根 。结果只保留整数部分 ，小数部分将被舍去 。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*需求：键盘录入一个大于等于2的整数 x ，计算并返回 x 的 平方根 。</span></span><br><span class=\"line\"><span class=\"comment\">        结果只保留整数部分 ，小数部分将被舍去 。*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//平方根   16的平方根4</span></span><br><span class=\"line\"><span class=\"comment\">//         4的平方根2</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 10</span></span><br><span class=\"line\"><span class=\"comment\">// 1 * 1 = 1 &lt; 10</span></span><br><span class=\"line\"><span class=\"comment\">// 2 * 2 = 4 &lt; 10</span></span><br><span class=\"line\"><span class=\"comment\">// 3 * 3 = 9 &lt; 10</span></span><br><span class=\"line\"><span class=\"comment\">// 4 * 4 = 16 &gt; 10</span></span><br><span class=\"line\"><span class=\"comment\">//推断：10的平方根是在3~4之间。</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 20</span></span><br><span class=\"line\"><span class=\"comment\">// 1 * 1 = 1 &lt; 20</span></span><br><span class=\"line\"><span class=\"comment\">// 2 * 2 = 4 &lt; 20</span></span><br><span class=\"line\"><span class=\"comment\">// 3 * 3 = 9 &lt; 20</span></span><br><span class=\"line\"><span class=\"comment\">// 4 * 4 = 16 &lt; 20</span></span><br><span class=\"line\"><span class=\"comment\">// 5 * 5 = 25 &gt; 20</span></span><br><span class=\"line\"><span class=\"comment\">//推断：20的平方根是在4~5之间。</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//在代码当中</span></span><br><span class=\"line\"><span class=\"comment\">//从1开始循环，拿着数字的平方跟原来的数字进行比较</span></span><br><span class=\"line\"><span class=\"comment\">//如果小于的，那么继续往后判断</span></span><br><span class=\"line\"><span class=\"comment\">//如果相等，那么当前数字就是平方根</span></span><br><span class=\"line\"><span class=\"comment\">//如果大于的，那么前一个数字就是平方跟的整数部分</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//1.键盘录入一个整数</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入一个整数&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\"><span class=\"comment\">//2.从1开始循环判断</span></span><br><span class=\"line\"><span class=\"comment\">//开始：1 结束: number</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= number; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//用i * i 再跟number进行比较</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i * i == number)&#123;</span><br><span class=\"line\">        System.out.println(i + <span class=\"string\">&quot;就是&quot;</span> + number + <span class=\"string\">&quot;的平方根&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//一旦找到了，循环就可以停止了，后面的数字就不需要再找了，提高代码的运行效率。</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i * i &gt; number)&#123;</span><br><span class=\"line\">        System.out.println((i - <span class=\"number\">1</span>) + <span class=\"string\">&quot;就是&quot;</span> + number + <span class=\"string\">&quot;平方根的整数部分&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-判断是否为质数\"><a href=\"#6-判断是否为质数\" class=\"headerlink\" title=\"6.判断是否为质数\"></a>6.判断是否为质数</h2><p>需求：</p>\n<p>​\t键盘录入一个正整数 x ，判断该整数是否为一个质数。 </p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//需求：键盘录入一个正整数 x ，判断该整数是否为一个质数。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//质数：</span></span><br><span class=\"line\"><span class=\"comment\">//如果一个整数只能被1和本身整除，那么这个数就是质数。否则这个数叫做合数</span></span><br><span class=\"line\"><span class=\"comment\">//7 = 1 * 7 质数</span></span><br><span class=\"line\"><span class=\"comment\">//8 = 1 * 8  2 * 4 合数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.键盘录入一个正整数</span></span><br><span class=\"line\"><span class=\"comment\">//number</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入一个正整数&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> sc.nextInt();<span class=\"comment\">//9</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//定义一个变量，表示标记</span></span><br><span class=\"line\"><span class=\"comment\">//标记着number是否为一个质数</span></span><br><span class=\"line\"><span class=\"comment\">//true： 是一个质数</span></span><br><span class=\"line\"><span class=\"comment\">//false : 不是一个质数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//表示最初就认为number是一个质数</span></span><br><span class=\"line\"><span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.判断</span></span><br><span class=\"line\"><span class=\"comment\">//写一个循环，从2开始判断，一直判断到number-1为止</span></span><br><span class=\"line\"><span class=\"comment\">//看这个范围之内，有没有数字可以被number整除</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">2</span>; i &lt; number; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//i 依次表示这个范围之内的每一个数字</span></span><br><span class=\"line\">    <span class=\"comment\">//看number是否能被i整除就可以了</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(number % i == <span class=\"number\">0</span>)&#123;<span class=\"comment\">// 9 % 2 = 1</span></span><br><span class=\"line\">        flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(number + &quot;不是一个质数&quot;);</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;<span class=\"comment\">/*else&#123;</span></span><br><span class=\"line\"><span class=\"comment\">                System.out.println(number + &quot;是一个质数&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">            &#125;*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//只有当这个循环结束了，表示这个范围之内所有的数字都判断完毕了</span></span><br><span class=\"line\"><span class=\"comment\">//此时才能断定number是一个质数</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(flag)&#123;</span><br><span class=\"line\">    System.out.println(number + <span class=\"string\">&quot;是一个质数&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    System.out.println(number + <span class=\"string\">&quot;不是一个质数&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-猜数字小游戏\"><a href=\"#7-猜数字小游戏\" class=\"headerlink\" title=\"7. 猜数字小游戏\"></a>7. 猜数字小游戏</h2><p>需求：</p>\n<p>​\t程序自动生成一个1-100之间的随机数，在代码中使用键盘录入去猜出这个数字是多少？</p>\n<p>要求：</p>\n<p>​\t使用循环猜，一直猜中为止。</p>\n<p>思路分析：</p>\n<ol>\n<li>生成一个1-100之间的随机数</li>\n<li>使用键盘录入去猜出这个数字是多少</li>\n<li>把反复猜的代码写在循环中</li>\n</ol>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.生成一个1-100之间的随机数</span></span><br><span class=\"line\"><span class=\"type\">Random</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> r.nextInt(<span class=\"number\">100</span>) + <span class=\"number\">1</span>;<span class=\"comment\">// 0 ~ 99 + 1 --- 1 ~ 100</span></span><br><span class=\"line\">System.out.println(number);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.使用键盘录入去猜出这个数字是多少？</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;请输入一个整数&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">guessNumber</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">    <span class=\"comment\">//3.比较</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(guessNumber &gt; number)&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;您猜的数字大了&quot;</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(guessNumber &lt; number)&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;您猜的数字小了&quot;</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;恭喜你，猜中了&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"day01-Java基础语法","date":"2024-12-12T08:23:00.000Z","photos":["/tupian/j01.jpg"],"_content":"\n# 注意：\n\n​\t用记事本打开本文档，格式较差。\n\n​\t可安装typora软件后再次打开。\n\n​\t安装包位于：day01\\资料\\其他软件\\阅读笔记的软件\\typora-setup-x64.exe\n\n# day01 - Java基础语法\n\n## 1. 人机交互\n\n### 1.1 什么是cmd？\n\n就是在windows操作系统中，利用命令行的方式去操作计算机。\n\n我们可以利用cmd命令去操作计算机，比如：打开文件，打开文件夹，创建文件夹等。\n\n### 1.2 如何打开CMD窗口？\n\n1. 按下快捷键：win + R。\n\n\t\t此时会出现运行窗口。\n\n2. 在运行窗口中输出cmd\n3. 输出回车。\n\n解惑：\n\n​\tcmd默认操作C盘下的users文件夹下的XXX文件夹。（XXX就是计算机名）\n\n ![image-20210923091350952](/tupian/cmd.png)\n\n### 1.3 常用CMD命令\n\n 扩展一个小点：\n\n​\t在很多资料中都说成是DOS命令，其实是不对的。真正的DOS命令是1981年微软和IBM出品的MS-DOS操作系统中的命令才叫做DOS命令。\n\n​\t而在Windows中，win98之前的操作系统是以非图形化的DOS为基础的，可以叫做DOS命令。到了2000年以后，windows逐渐的以图形化界面为主了，这个时候就不能叫DOS命令了，他只是模拟了DOS环境而已，很多的原本的DOS命令已经无法使用了，所以这个时候叫做CMD命令会更准确一些。\n\n常见的CMD命令如下：\n\n| 操作               | 说明                              |\n| ------------------ | --------------------------------- |\n| 盘符名称:          | 盘符切换。E:回车，表示切换到E盘。 |\n| dir                | 查看当前路径下的内容。            |\n| cd 目录            | 进入单级目录。cd itheima          |\n| cd ..              | 回退到上一级目录。                |\n| cd 目录1\\目录2\\... | 进入多级目录。cd itheima\\JavaSE   |\n| cd \\               | 回退到盘符目录。                  |\n| cls                | 清屏。                            |\n| exit               | 退出命令提示符窗口。              |\n\n### 1.4 CMD练习\n\n需求：\n\n  利用cmd命令打开自己电脑上的QQ。\n\n完成步骤：\n\n```java\n1,确定自己电脑上的QQ安装在哪里\n2,启动cmd\n3,进入到启动程序QQ.exe所在的路径。\n4,输出qq.exe加回车表示启动qq。\n```\n\n解惑：\n\n​\t在windows操作系统当中，文件名或者文件夹名是忽略大小写的。\n\n### 1.5 环境变量\n\n作用：\n\n​\t如果我想要在CMD的任意目录下，都可以启动某一个软件，那么就可以把这个软件的路径配置到环境变量中的PATH里面。\n\n​\t在启动软件的时候，操作系统会先在当前路径下找，如果在当前录课没有再到环境变量的路径中去找。如果都找不到就提示无法启动。\n\n步骤：\n\n- 右键我的电脑，选择属性。\n- 点击左侧的高级系统设置\n- 选择高级，再点击下面的环境变量。\n- 找系统变量里面的PATH\n- 把软件的完整路径，配置到PATH当中就可以了。\n- （可做可不做）就是把自己配置的路径，移动到最上面。\n\n图解示例如下：\n\n第一步：右键点击我的电脑并选择属性。\n\n（如果无法出现第二步界面，可以打开我的电脑之后右键点击空白处）\n\n![image-20210923091350952](/tupian/1.png)\n\n第二步：点击高级系统设置。\n\n​\t ![image-20210923091350952](/tupian/2.png)\n\n第三步：选择高级，再点击下面的环境变量。\n\n ![image-20210923091350952](/tupian/3.png)\n\n\n\n第四步：找系统变量里面的PATH\n\n ![image-20210923091350952](/tupian/4.png)\n\n第五步：点击新建，把软件的完整路径，配置到PATH当中，再点击确定即可。\n\n第六步：（可做可不做）点击上移，把当前配置的路径移动到最上面。\n\n移动的好处：在CMD中打开软件时，会先找当前路径，再找环境变量，在环境变量中是从上往下依次查找的，如果路径放在最上面查找的速度比较快。\n\n ![image-20210923091350952](/tupian/5.png)\n\n## 2. Java概述\n\n### 1.1 Java是什么？\n\n语言：人与人交流沟通的表达方式\n\n计算机语言：人与计算机之间进行信息交流沟通的一种特殊语言\n\nJava是一门非常火的计算机语言。（也叫做编程语言）\n\n我们想要让计算机做一些事情，那么就可以通过Java语言告诉计算机就可以了\n\n### 1.2下载和安装\n\n#### 1.2.1 下载\n\n通过官方网站获取JDK\n\n[http://www.oracle.com](http://www.oracle.com/)\n\n**注意1**：针对不同的操作系统，需要下载对应版本的JDK。\n\n**注意2**：\n\n​\t如果你的电脑是windows32位的，建议重装系统，重装成64位的操作系统。\n\n​\t因为Java从9版本开始，就已经不提供32位版本的安装包了。\n\n​\t如果自己不愿意下载，到今天day01资料文件中，也有对应的安装包。\n\n#### 1.2.2 安装\n\n​\t傻瓜式安装，下一步即可。默认的安装路径是在C:\\Program Files下。\n\n建议：\n\n- 安装路径不要有中文，不要有空格等一些特殊的符号。\n- 以后跟开发相关的所有软件建议都安装在同一个文件夹中，方便管理。\n\n#### 1.2.3 JDK的安装目录介绍\n\n| 目录名称 | 说明                                                         |\n| -------- | ------------------------------------------------------------ |\n| bin      | 该路径下存放了JDK的各种工具命令。javac和java就放在这个目录。 |\n| conf     | 该路径下存放了JDK的相关配置文件。                            |\n| include  | 该路径下存放了一些平台特定的头文件。                         |\n| jmods    | 该路径下存放了JDK的各种模块。                                |\n| legal    | 该路径下存放了JDK各模块的授权文档。                          |\n| lib      | 该路径下存放了JDK工具的一些补充JAR包。                       |\n\n### 1.3 HelloWorld小案例\n\n​\tHelloWorld案例是指在计算机屏幕上输出“HelloWorld”这行文字。各种计算机语言都习惯使用该案例作为第一个演示案例。\n\n#### 2.3.1 Java程序开发运行流程\n\n开发Java程序，需要三个步骤：编写程序，编译程序，运行程序。\n\n#### 2.3.2 HelloWorld案例的编写\n\n1. 新建文本文档文件，修改名称为HelloWorld.java。\n\n**注意**：后缀名为java的才是java文件。\n\n2. 用记事本打开HelloWorld.java文件，输写程序内容。\n\n**注意**：代码要跟我编写的完全保持一致。\n\n```java\npublic class HelloWorld {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"HelloWorld\");\n\t}\n}\n```\n\n3. 保存\n\n**注意**：未保存的文件在左上角会有*符号标记\n\n4. 编译文件。编译后会产生一个class文件。\n\n   java文件：程序员自己编写的代码。\n\n   class文件：交给计算机执行的文件。\n\n5. 运行代码\n\n   **注意**：运行的是编译之后的class文件。\n\n> 用到两个命令：\n>\n> ​\tjavac + 文件名 + 后缀名 （就是编译java文件）\n>\n> ​\tjava + 文件名（运行编译之后的class文件）\n\n### 1.4 HelloWorld案例常见问题\n\n#### 1.4.1 BUG\n\n​\t在电脑系统或程序中，隐藏着的一些未被发现的缺陷或问题统称为bug（漏洞）。\n\n#### 1.4.2 BUG的解决\n\n1. 具备识别BUG的能力：多看\n2. 具备分析BUG的能力：多思考，多查资料\n3. 具备解决BUG的能力：多尝试，多总结\n\n#### 1.4.3 HelloWorld常见问题\n\n1、非法字符问题。Java中的符号都是英文格式的。\n\n2、大小写问题。Java语言对大小写敏感（区分大小写）。\n\n3、在系统中显示文件的扩展名，避免出现HelloWorld.java.txt文件。\n\n4、编译命令后的java文件名需要带文件后缀.java\n\n5、运行命令后的class文件名（类名）不带文件后缀.class\n\n...\n\n#### 常见错误代码1：\n\n```java\npublicclass HelloWorld{\n    public static void main(String[] args){\n        System.out.println(\"HelloWorld\");\n    }\n}\n```\n\n问题：\n\n​\tpublic和class之间缺少一个空格。\n\n技巧：一般来讲在单词之间的空格是不能省略的。\n\n​\t如果是单词和符号之间的空格是可以省略的。\n\n#### 常见错误代码2：\n\n```java\npublic class HelloWorld{\n    public static void main(String[] args){\n        system.out.println(\"HelloWorld\");\n    }\n}\n```\n\n问题：\n\n​\tsystem首字母必须大写。\n\n技巧：\n\n​\tJava代码中，是严格区分大小写的。\n\n​\t所以该大写的地方一定要大写，该小写的地方一定要小写。多多练习。\n\n#### 常见错误代码3：\n\n```java\npublic class HelloWorld{\n    public static void main(String[] args){\n        System.out.println(HelloWorld);\n    }\n}\n```\n\n问题：\n\n​\t第三行代码中的HelloWorld必须用双引号引起来，否则就会出现问题。\n\n#### 常见错误代码4：\n\n```java\npublic class HelloWorld{\n    public static void main(String[] args){\n        System.out.println(\"HelloWorld\")；\n    }\n}\n```\n\n问题：\n\n​\t在以后代码当中，所有的标点符号必须是英文状态下的。\n\n技巧：\n\n​\t可以在输入法中进行对应的设置。\n\n### 1.5 环境变量\n\n#### 1.5.1 为什么配置环境变量\n\n​\t开发Java程序，需要使用JDK提供的开发工具（比如javac.exe、java.exe等命令），而这些工具在JDK的安装目录的bin目录下，如果不配置环境变量，那么这些命令只可以在bin目录下使用，而我们想要在任意目录下都能使用，所以就要配置环境变量。\n\n注意：现在最新从官网上下载的JDK安装时会自动配置javac、java命令的路径到Path环境变量中去 ，所以javac、java可以直接使用。\n\n#### 1.5.2配置方式\n\n![image-20210923091654365](/tupian/image-20210923091654365.png)\n\n\n\n以前下载的老版本的JDK是没有自动配置的，而且自动配置的也只包含了4个工具而已，所以我们需要删掉已经配置完毕的，再次重新配置Path环境变量。\n\n①**JAVA_HOME**：告诉操作系统JDK安装在了哪个位置（未来其他技术要通过这个找JDK）\n\n![image-20210923091710450](/tupian/image-20210923091710450.png)\n\n②**Path**：告诉操作系统JDK提供的javac(编译)、java(执行)命令安装到了哪个位置\n\n![image-20210923091721035](/tupian/image-20210923091721035.png)\n\n\n\n#### 1.5.3win10的bug\n\n当电脑重启之后，环境变量失效了。表示操作系统不支持自定义的环境变量。\n\n步骤：\n\n- 还是要配置JAVA_HOME给以后的相关软件去使用\n\n- 我们可以把java和javac的完整路径配置到PATH当中。\n\n  E:\\develop\\JDK\\bin\n\n### 1.6 Notepad++\n\n#### 1.6.1下载\n\n​\t打开百度，搜索一下notepad++就可以了。\n\n​\tday01的资料文件夹里面也有对应的安装包。\n\n#### 1.6.2 安装\n\n傻瓜式安装，直接点击下一步就可以了。\n\n​\t对安装路径有两个小建议：\n\n- 路径不要有中文，不要有空格，不要有一些特殊符号\n- 建议最好把所有的跟开发相关的软件都放在一起，方便管理。\n\n#### 1.6.3 设置\n\n​\t右键点击java文件，选择edit with notepad++。\n\n​\t点击设置，再点击首选项。在弹出的页面当中，左侧选择新建，中间选择Java，右侧选择ANSI。\n\n#### 1.6.4 练习\n\n​\t利用notepad++去编写一个HelloWorld并能成功编译和运行。\n\n### 1.7 Java语言的发展\n\n三个版本：\n\n* Java5.0：这是Java的第一个大版本更新。\n* Java8.0：这个是目前绝大数公司正在使用的版本。因为这个版本最为稳定。\n* Java15.0：这个是我们课程中学习的版本。\n\n解惑：\n\n​\t我们学的跟工作中使用的版本不太一样啊。会不会影响以后工作呢？\n\n向下兼容。新的版本只是在原有的基础上添加了一些新的功能而已。\n\n举例：\n\n用8版本开发的代码，用11版本能运行吗？必须可以的。\n\n用11版本开发的代码，用8版本能运行吗？不一定。\n\n如果11版本开发的代码，没有用到9~11的新特性，那么用8是可以运行的。\n\n如果11版本开发的代码，用到了9~11的新特性，那么用8就无法运行了。\n\n### 1.8 Java的三大平台\n\n​\tJavaSE、JavaME、JavaEE\n\n#### 1.8.1 JavaSE\n\n​\t是其他两个版本的基础。\n\n#### 1.8.2 JavaME\n\n​\tJava语言的小型版，用于嵌入式消费类电子设备或者小型移动设备的开发。\n\n​\t其中最为主要的还是小型移动设备的开发（手机）。渐渐的没落了，已经被安卓和IOS给替代了。\n\n​\t但是，安卓也是可以用Java来开发的。\n\n#### 1.8.3 JavaEE\n\n​\t用于Web方向的网站开发。（主要从事后台服务器的开发）\n\n​\t在服务器领域，Java是当之无愧的龙头老大。\n\n### 1.9 Java的主要特性\n\n- 面向对象\n- 安全性\n- 多线程\n- 简单易用\n- 开源\n- 跨平台\n\n#### 1.9.1 Java语言跨平台的原理\n\n- 操作系统本身其实是不认识Java语言的。\n- 但是针对于不同的操作系统，Java提供了不同的虚拟机。\n\n虚拟机会把Java语言翻译成操作系统能看得懂的语言。\n\n![image-20210923091350952](/tupian/image-20210923091350952.png)\n\n### 1.10 JRE和JDK\n\n![image-20210923091544110](/tupian/image-20210923091544110.png)\n\nJVM（Java Virtual Machine），Java虚拟机\n\nJRE（Java Runtime Environment），Java运行环境，包含了JVM和Java的核心类库（Java API）\n\nJDK（Java Development Kit）称为Java开发工具，包含了JRE和开发工具\n\n总结：我们只需安装JDK即可，它包含了java的运行环境和虚拟机。\n","source":"_posts/day01-Java基础语法.md","raw":"---\ntitle: day01-Java基础语法\ndate: 2024-12-12 16:23:00\ntags:\n    - 环境变量\ncategories: java\nphotos: /tupian/j01.jpg\n---\n\n# 注意：\n\n​\t用记事本打开本文档，格式较差。\n\n​\t可安装typora软件后再次打开。\n\n​\t安装包位于：day01\\资料\\其他软件\\阅读笔记的软件\\typora-setup-x64.exe\n\n# day01 - Java基础语法\n\n## 1. 人机交互\n\n### 1.1 什么是cmd？\n\n就是在windows操作系统中，利用命令行的方式去操作计算机。\n\n我们可以利用cmd命令去操作计算机，比如：打开文件，打开文件夹，创建文件夹等。\n\n### 1.2 如何打开CMD窗口？\n\n1. 按下快捷键：win + R。\n\n\t\t此时会出现运行窗口。\n\n2. 在运行窗口中输出cmd\n3. 输出回车。\n\n解惑：\n\n​\tcmd默认操作C盘下的users文件夹下的XXX文件夹。（XXX就是计算机名）\n\n ![image-20210923091350952](/tupian/cmd.png)\n\n### 1.3 常用CMD命令\n\n 扩展一个小点：\n\n​\t在很多资料中都说成是DOS命令，其实是不对的。真正的DOS命令是1981年微软和IBM出品的MS-DOS操作系统中的命令才叫做DOS命令。\n\n​\t而在Windows中，win98之前的操作系统是以非图形化的DOS为基础的，可以叫做DOS命令。到了2000年以后，windows逐渐的以图形化界面为主了，这个时候就不能叫DOS命令了，他只是模拟了DOS环境而已，很多的原本的DOS命令已经无法使用了，所以这个时候叫做CMD命令会更准确一些。\n\n常见的CMD命令如下：\n\n| 操作               | 说明                              |\n| ------------------ | --------------------------------- |\n| 盘符名称:          | 盘符切换。E:回车，表示切换到E盘。 |\n| dir                | 查看当前路径下的内容。            |\n| cd 目录            | 进入单级目录。cd itheima          |\n| cd ..              | 回退到上一级目录。                |\n| cd 目录1\\目录2\\... | 进入多级目录。cd itheima\\JavaSE   |\n| cd \\               | 回退到盘符目录。                  |\n| cls                | 清屏。                            |\n| exit               | 退出命令提示符窗口。              |\n\n### 1.4 CMD练习\n\n需求：\n\n  利用cmd命令打开自己电脑上的QQ。\n\n完成步骤：\n\n```java\n1,确定自己电脑上的QQ安装在哪里\n2,启动cmd\n3,进入到启动程序QQ.exe所在的路径。\n4,输出qq.exe加回车表示启动qq。\n```\n\n解惑：\n\n​\t在windows操作系统当中，文件名或者文件夹名是忽略大小写的。\n\n### 1.5 环境变量\n\n作用：\n\n​\t如果我想要在CMD的任意目录下，都可以启动某一个软件，那么就可以把这个软件的路径配置到环境变量中的PATH里面。\n\n​\t在启动软件的时候，操作系统会先在当前路径下找，如果在当前录课没有再到环境变量的路径中去找。如果都找不到就提示无法启动。\n\n步骤：\n\n- 右键我的电脑，选择属性。\n- 点击左侧的高级系统设置\n- 选择高级，再点击下面的环境变量。\n- 找系统变量里面的PATH\n- 把软件的完整路径，配置到PATH当中就可以了。\n- （可做可不做）就是把自己配置的路径，移动到最上面。\n\n图解示例如下：\n\n第一步：右键点击我的电脑并选择属性。\n\n（如果无法出现第二步界面，可以打开我的电脑之后右键点击空白处）\n\n![image-20210923091350952](/tupian/1.png)\n\n第二步：点击高级系统设置。\n\n​\t ![image-20210923091350952](/tupian/2.png)\n\n第三步：选择高级，再点击下面的环境变量。\n\n ![image-20210923091350952](/tupian/3.png)\n\n\n\n第四步：找系统变量里面的PATH\n\n ![image-20210923091350952](/tupian/4.png)\n\n第五步：点击新建，把软件的完整路径，配置到PATH当中，再点击确定即可。\n\n第六步：（可做可不做）点击上移，把当前配置的路径移动到最上面。\n\n移动的好处：在CMD中打开软件时，会先找当前路径，再找环境变量，在环境变量中是从上往下依次查找的，如果路径放在最上面查找的速度比较快。\n\n ![image-20210923091350952](/tupian/5.png)\n\n## 2. Java概述\n\n### 1.1 Java是什么？\n\n语言：人与人交流沟通的表达方式\n\n计算机语言：人与计算机之间进行信息交流沟通的一种特殊语言\n\nJava是一门非常火的计算机语言。（也叫做编程语言）\n\n我们想要让计算机做一些事情，那么就可以通过Java语言告诉计算机就可以了\n\n### 1.2下载和安装\n\n#### 1.2.1 下载\n\n通过官方网站获取JDK\n\n[http://www.oracle.com](http://www.oracle.com/)\n\n**注意1**：针对不同的操作系统，需要下载对应版本的JDK。\n\n**注意2**：\n\n​\t如果你的电脑是windows32位的，建议重装系统，重装成64位的操作系统。\n\n​\t因为Java从9版本开始，就已经不提供32位版本的安装包了。\n\n​\t如果自己不愿意下载，到今天day01资料文件中，也有对应的安装包。\n\n#### 1.2.2 安装\n\n​\t傻瓜式安装，下一步即可。默认的安装路径是在C:\\Program Files下。\n\n建议：\n\n- 安装路径不要有中文，不要有空格等一些特殊的符号。\n- 以后跟开发相关的所有软件建议都安装在同一个文件夹中，方便管理。\n\n#### 1.2.3 JDK的安装目录介绍\n\n| 目录名称 | 说明                                                         |\n| -------- | ------------------------------------------------------------ |\n| bin      | 该路径下存放了JDK的各种工具命令。javac和java就放在这个目录。 |\n| conf     | 该路径下存放了JDK的相关配置文件。                            |\n| include  | 该路径下存放了一些平台特定的头文件。                         |\n| jmods    | 该路径下存放了JDK的各种模块。                                |\n| legal    | 该路径下存放了JDK各模块的授权文档。                          |\n| lib      | 该路径下存放了JDK工具的一些补充JAR包。                       |\n\n### 1.3 HelloWorld小案例\n\n​\tHelloWorld案例是指在计算机屏幕上输出“HelloWorld”这行文字。各种计算机语言都习惯使用该案例作为第一个演示案例。\n\n#### 2.3.1 Java程序开发运行流程\n\n开发Java程序，需要三个步骤：编写程序，编译程序，运行程序。\n\n#### 2.3.2 HelloWorld案例的编写\n\n1. 新建文本文档文件，修改名称为HelloWorld.java。\n\n**注意**：后缀名为java的才是java文件。\n\n2. 用记事本打开HelloWorld.java文件，输写程序内容。\n\n**注意**：代码要跟我编写的完全保持一致。\n\n```java\npublic class HelloWorld {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"HelloWorld\");\n\t}\n}\n```\n\n3. 保存\n\n**注意**：未保存的文件在左上角会有*符号标记\n\n4. 编译文件。编译后会产生一个class文件。\n\n   java文件：程序员自己编写的代码。\n\n   class文件：交给计算机执行的文件。\n\n5. 运行代码\n\n   **注意**：运行的是编译之后的class文件。\n\n> 用到两个命令：\n>\n> ​\tjavac + 文件名 + 后缀名 （就是编译java文件）\n>\n> ​\tjava + 文件名（运行编译之后的class文件）\n\n### 1.4 HelloWorld案例常见问题\n\n#### 1.4.1 BUG\n\n​\t在电脑系统或程序中，隐藏着的一些未被发现的缺陷或问题统称为bug（漏洞）。\n\n#### 1.4.2 BUG的解决\n\n1. 具备识别BUG的能力：多看\n2. 具备分析BUG的能力：多思考，多查资料\n3. 具备解决BUG的能力：多尝试，多总结\n\n#### 1.4.3 HelloWorld常见问题\n\n1、非法字符问题。Java中的符号都是英文格式的。\n\n2、大小写问题。Java语言对大小写敏感（区分大小写）。\n\n3、在系统中显示文件的扩展名，避免出现HelloWorld.java.txt文件。\n\n4、编译命令后的java文件名需要带文件后缀.java\n\n5、运行命令后的class文件名（类名）不带文件后缀.class\n\n...\n\n#### 常见错误代码1：\n\n```java\npublicclass HelloWorld{\n    public static void main(String[] args){\n        System.out.println(\"HelloWorld\");\n    }\n}\n```\n\n问题：\n\n​\tpublic和class之间缺少一个空格。\n\n技巧：一般来讲在单词之间的空格是不能省略的。\n\n​\t如果是单词和符号之间的空格是可以省略的。\n\n#### 常见错误代码2：\n\n```java\npublic class HelloWorld{\n    public static void main(String[] args){\n        system.out.println(\"HelloWorld\");\n    }\n}\n```\n\n问题：\n\n​\tsystem首字母必须大写。\n\n技巧：\n\n​\tJava代码中，是严格区分大小写的。\n\n​\t所以该大写的地方一定要大写，该小写的地方一定要小写。多多练习。\n\n#### 常见错误代码3：\n\n```java\npublic class HelloWorld{\n    public static void main(String[] args){\n        System.out.println(HelloWorld);\n    }\n}\n```\n\n问题：\n\n​\t第三行代码中的HelloWorld必须用双引号引起来，否则就会出现问题。\n\n#### 常见错误代码4：\n\n```java\npublic class HelloWorld{\n    public static void main(String[] args){\n        System.out.println(\"HelloWorld\")；\n    }\n}\n```\n\n问题：\n\n​\t在以后代码当中，所有的标点符号必须是英文状态下的。\n\n技巧：\n\n​\t可以在输入法中进行对应的设置。\n\n### 1.5 环境变量\n\n#### 1.5.1 为什么配置环境变量\n\n​\t开发Java程序，需要使用JDK提供的开发工具（比如javac.exe、java.exe等命令），而这些工具在JDK的安装目录的bin目录下，如果不配置环境变量，那么这些命令只可以在bin目录下使用，而我们想要在任意目录下都能使用，所以就要配置环境变量。\n\n注意：现在最新从官网上下载的JDK安装时会自动配置javac、java命令的路径到Path环境变量中去 ，所以javac、java可以直接使用。\n\n#### 1.5.2配置方式\n\n![image-20210923091654365](/tupian/image-20210923091654365.png)\n\n\n\n以前下载的老版本的JDK是没有自动配置的，而且自动配置的也只包含了4个工具而已，所以我们需要删掉已经配置完毕的，再次重新配置Path环境变量。\n\n①**JAVA_HOME**：告诉操作系统JDK安装在了哪个位置（未来其他技术要通过这个找JDK）\n\n![image-20210923091710450](/tupian/image-20210923091710450.png)\n\n②**Path**：告诉操作系统JDK提供的javac(编译)、java(执行)命令安装到了哪个位置\n\n![image-20210923091721035](/tupian/image-20210923091721035.png)\n\n\n\n#### 1.5.3win10的bug\n\n当电脑重启之后，环境变量失效了。表示操作系统不支持自定义的环境变量。\n\n步骤：\n\n- 还是要配置JAVA_HOME给以后的相关软件去使用\n\n- 我们可以把java和javac的完整路径配置到PATH当中。\n\n  E:\\develop\\JDK\\bin\n\n### 1.6 Notepad++\n\n#### 1.6.1下载\n\n​\t打开百度，搜索一下notepad++就可以了。\n\n​\tday01的资料文件夹里面也有对应的安装包。\n\n#### 1.6.2 安装\n\n傻瓜式安装，直接点击下一步就可以了。\n\n​\t对安装路径有两个小建议：\n\n- 路径不要有中文，不要有空格，不要有一些特殊符号\n- 建议最好把所有的跟开发相关的软件都放在一起，方便管理。\n\n#### 1.6.3 设置\n\n​\t右键点击java文件，选择edit with notepad++。\n\n​\t点击设置，再点击首选项。在弹出的页面当中，左侧选择新建，中间选择Java，右侧选择ANSI。\n\n#### 1.6.4 练习\n\n​\t利用notepad++去编写一个HelloWorld并能成功编译和运行。\n\n### 1.7 Java语言的发展\n\n三个版本：\n\n* Java5.0：这是Java的第一个大版本更新。\n* Java8.0：这个是目前绝大数公司正在使用的版本。因为这个版本最为稳定。\n* Java15.0：这个是我们课程中学习的版本。\n\n解惑：\n\n​\t我们学的跟工作中使用的版本不太一样啊。会不会影响以后工作呢？\n\n向下兼容。新的版本只是在原有的基础上添加了一些新的功能而已。\n\n举例：\n\n用8版本开发的代码，用11版本能运行吗？必须可以的。\n\n用11版本开发的代码，用8版本能运行吗？不一定。\n\n如果11版本开发的代码，没有用到9~11的新特性，那么用8是可以运行的。\n\n如果11版本开发的代码，用到了9~11的新特性，那么用8就无法运行了。\n\n### 1.8 Java的三大平台\n\n​\tJavaSE、JavaME、JavaEE\n\n#### 1.8.1 JavaSE\n\n​\t是其他两个版本的基础。\n\n#### 1.8.2 JavaME\n\n​\tJava语言的小型版，用于嵌入式消费类电子设备或者小型移动设备的开发。\n\n​\t其中最为主要的还是小型移动设备的开发（手机）。渐渐的没落了，已经被安卓和IOS给替代了。\n\n​\t但是，安卓也是可以用Java来开发的。\n\n#### 1.8.3 JavaEE\n\n​\t用于Web方向的网站开发。（主要从事后台服务器的开发）\n\n​\t在服务器领域，Java是当之无愧的龙头老大。\n\n### 1.9 Java的主要特性\n\n- 面向对象\n- 安全性\n- 多线程\n- 简单易用\n- 开源\n- 跨平台\n\n#### 1.9.1 Java语言跨平台的原理\n\n- 操作系统本身其实是不认识Java语言的。\n- 但是针对于不同的操作系统，Java提供了不同的虚拟机。\n\n虚拟机会把Java语言翻译成操作系统能看得懂的语言。\n\n![image-20210923091350952](/tupian/image-20210923091350952.png)\n\n### 1.10 JRE和JDK\n\n![image-20210923091544110](/tupian/image-20210923091544110.png)\n\nJVM（Java Virtual Machine），Java虚拟机\n\nJRE（Java Runtime Environment），Java运行环境，包含了JVM和Java的核心类库（Java API）\n\nJDK（Java Development Kit）称为Java开发工具，包含了JRE和开发工具\n\n总结：我们只需安装JDK即可，它包含了java的运行环境和虚拟机。\n","slug":"day01-Java基础语法","published":1,"updated":"2024-12-12T08:49:02.270Z","comments":1,"layout":"post","_id":"cm4ld1o88000fqsto5ckwg3dy","content":"<h1 id=\"注意：\"><a href=\"#注意：\" class=\"headerlink\" title=\"注意：\"></a>注意：</h1><p>​\t用记事本打开本文档，格式较差。</p>\n<p>​\t可安装typora软件后再次打开。</p>\n<p>​\t安装包位于：day01\\资料\\其他软件\\阅读笔记的软件\\typora-setup-x64.exe</p>\n<h1 id=\"day01-Java基础语法\"><a href=\"#day01-Java基础语法\" class=\"headerlink\" title=\"day01 - Java基础语法\"></a>day01 - Java基础语法</h1><h2 id=\"1-人机交互\"><a href=\"#1-人机交互\" class=\"headerlink\" title=\"1. 人机交互\"></a>1. 人机交互</h2><h3 id=\"1-1-什么是cmd？\"><a href=\"#1-1-什么是cmd？\" class=\"headerlink\" title=\"1.1 什么是cmd？\"></a>1.1 什么是cmd？</h3><p>就是在windows操作系统中，利用命令行的方式去操作计算机。</p>\n<p>我们可以利用cmd命令去操作计算机，比如：打开文件，打开文件夹，创建文件夹等。</p>\n<h3 id=\"1-2-如何打开CMD窗口？\"><a href=\"#1-2-如何打开CMD窗口？\" class=\"headerlink\" title=\"1.2 如何打开CMD窗口？\"></a>1.2 如何打开CMD窗口？</h3><ol>\n<li><p>按下快捷键：win + R。</p>\n<pre><code> 此时会出现运行窗口。\n</code></pre>\n</li>\n<li><p>在运行窗口中输出cmd</p>\n</li>\n<li><p>输出回车。</p>\n</li>\n</ol>\n<p>解惑：</p>\n<p>​\tcmd默认操作C盘下的users文件夹下的XXX文件夹。（XXX就是计算机名）</p>\n<p> <img src=\"/tupian/cmd.png\" alt=\"image-20210923091350952\"></p>\n<h3 id=\"1-3-常用CMD命令\"><a href=\"#1-3-常用CMD命令\" class=\"headerlink\" title=\"1.3 常用CMD命令\"></a>1.3 常用CMD命令</h3><p> 扩展一个小点：</p>\n<p>​\t在很多资料中都说成是DOS命令，其实是不对的。真正的DOS命令是1981年微软和IBM出品的MS-DOS操作系统中的命令才叫做DOS命令。</p>\n<p>​\t而在Windows中，win98之前的操作系统是以非图形化的DOS为基础的，可以叫做DOS命令。到了2000年以后，windows逐渐的以图形化界面为主了，这个时候就不能叫DOS命令了，他只是模拟了DOS环境而已，很多的原本的DOS命令已经无法使用了，所以这个时候叫做CMD命令会更准确一些。</p>\n<p>常见的CMD命令如下：</p>\n<table>\n<thead>\n<tr>\n<th>操作</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>盘符名称:</td>\n<td>盘符切换。E:回车，表示切换到E盘。</td>\n</tr>\n<tr>\n<td>dir</td>\n<td>查看当前路径下的内容。</td>\n</tr>\n<tr>\n<td>cd 目录</td>\n<td>进入单级目录。cd itheima</td>\n</tr>\n<tr>\n<td>cd ..</td>\n<td>回退到上一级目录。</td>\n</tr>\n<tr>\n<td>cd 目录1\\目录2...</td>\n<td>进入多级目录。cd itheima\\JavaSE</td>\n</tr>\n<tr>\n<td>cd \\</td>\n<td>回退到盘符目录。</td>\n</tr>\n<tr>\n<td>cls</td>\n<td>清屏。</td>\n</tr>\n<tr>\n<td>exit</td>\n<td>退出命令提示符窗口。</td>\n</tr>\n</tbody></table>\n<h3 id=\"1-4-CMD练习\"><a href=\"#1-4-CMD练习\" class=\"headerlink\" title=\"1.4 CMD练习\"></a>1.4 CMD练习</h3><p>需求：</p>\n<p>  利用cmd命令打开自己电脑上的QQ。</p>\n<p>完成步骤：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>,确定自己电脑上的QQ安装在哪里</span><br><span class=\"line\"><span class=\"number\">2</span>,启动cmd</span><br><span class=\"line\"><span class=\"number\">3</span>,进入到启动程序QQ.exe所在的路径。</span><br><span class=\"line\"><span class=\"number\">4</span>,输出qq.exe加回车表示启动qq。</span><br></pre></td></tr></table></figure>\n\n<p>解惑：</p>\n<p>​\t在windows操作系统当中，文件名或者文件夹名是忽略大小写的。</p>\n<h3 id=\"1-5-环境变量\"><a href=\"#1-5-环境变量\" class=\"headerlink\" title=\"1.5 环境变量\"></a>1.5 环境变量</h3><p>作用：</p>\n<p>​\t如果我想要在CMD的任意目录下，都可以启动某一个软件，那么就可以把这个软件的路径配置到环境变量中的PATH里面。</p>\n<p>​\t在启动软件的时候，操作系统会先在当前路径下找，如果在当前录课没有再到环境变量的路径中去找。如果都找不到就提示无法启动。</p>\n<p>步骤：</p>\n<ul>\n<li>右键我的电脑，选择属性。</li>\n<li>点击左侧的高级系统设置</li>\n<li>选择高级，再点击下面的环境变量。</li>\n<li>找系统变量里面的PATH</li>\n<li>把软件的完整路径，配置到PATH当中就可以了。</li>\n<li>（可做可不做）就是把自己配置的路径，移动到最上面。</li>\n</ul>\n<p>图解示例如下：</p>\n<p>第一步：右键点击我的电脑并选择属性。</p>\n<p>（如果无法出现第二步界面，可以打开我的电脑之后右键点击空白处）</p>\n<p><img src=\"/tupian/1.png\" alt=\"image-20210923091350952\"></p>\n<p>第二步：点击高级系统设置。</p>\n<p>​\t <img src=\"/tupian/2.png\" alt=\"image-20210923091350952\"></p>\n<p>第三步：选择高级，再点击下面的环境变量。</p>\n<p> <img src=\"/tupian/3.png\" alt=\"image-20210923091350952\"></p>\n<p>第四步：找系统变量里面的PATH</p>\n<p> <img src=\"/tupian/4.png\" alt=\"image-20210923091350952\"></p>\n<p>第五步：点击新建，把软件的完整路径，配置到PATH当中，再点击确定即可。</p>\n<p>第六步：（可做可不做）点击上移，把当前配置的路径移动到最上面。</p>\n<p>移动的好处：在CMD中打开软件时，会先找当前路径，再找环境变量，在环境变量中是从上往下依次查找的，如果路径放在最上面查找的速度比较快。</p>\n<p> <img src=\"/tupian/5.png\" alt=\"image-20210923091350952\"></p>\n<h2 id=\"2-Java概述\"><a href=\"#2-Java概述\" class=\"headerlink\" title=\"2. Java概述\"></a>2. Java概述</h2><h3 id=\"1-1-Java是什么？\"><a href=\"#1-1-Java是什么？\" class=\"headerlink\" title=\"1.1 Java是什么？\"></a>1.1 Java是什么？</h3><p>语言：人与人交流沟通的表达方式</p>\n<p>计算机语言：人与计算机之间进行信息交流沟通的一种特殊语言</p>\n<p>Java是一门非常火的计算机语言。（也叫做编程语言）</p>\n<p>我们想要让计算机做一些事情，那么就可以通过Java语言告诉计算机就可以了</p>\n<h3 id=\"1-2下载和安装\"><a href=\"#1-2下载和安装\" class=\"headerlink\" title=\"1.2下载和安装\"></a>1.2下载和安装</h3><h4 id=\"1-2-1-下载\"><a href=\"#1-2-1-下载\" class=\"headerlink\" title=\"1.2.1 下载\"></a>1.2.1 下载</h4><p>通过官方网站获取JDK</p>\n<p><a href=\"http://www.oracle.com/\">http://www.oracle.com</a></p>\n<p><strong>注意1</strong>：针对不同的操作系统，需要下载对应版本的JDK。</p>\n<p><strong>注意2</strong>：</p>\n<p>​\t如果你的电脑是windows32位的，建议重装系统，重装成64位的操作系统。</p>\n<p>​\t因为Java从9版本开始，就已经不提供32位版本的安装包了。</p>\n<p>​\t如果自己不愿意下载，到今天day01资料文件中，也有对应的安装包。</p>\n<h4 id=\"1-2-2-安装\"><a href=\"#1-2-2-安装\" class=\"headerlink\" title=\"1.2.2 安装\"></a>1.2.2 安装</h4><p>​\t傻瓜式安装，下一步即可。默认的安装路径是在C:\\Program Files下。</p>\n<p>建议：</p>\n<ul>\n<li>安装路径不要有中文，不要有空格等一些特殊的符号。</li>\n<li>以后跟开发相关的所有软件建议都安装在同一个文件夹中，方便管理。</li>\n</ul>\n<h4 id=\"1-2-3-JDK的安装目录介绍\"><a href=\"#1-2-3-JDK的安装目录介绍\" class=\"headerlink\" title=\"1.2.3 JDK的安装目录介绍\"></a>1.2.3 JDK的安装目录介绍</h4><table>\n<thead>\n<tr>\n<th>目录名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>bin</td>\n<td>该路径下存放了JDK的各种工具命令。javac和java就放在这个目录。</td>\n</tr>\n<tr>\n<td>conf</td>\n<td>该路径下存放了JDK的相关配置文件。</td>\n</tr>\n<tr>\n<td>include</td>\n<td>该路径下存放了一些平台特定的头文件。</td>\n</tr>\n<tr>\n<td>jmods</td>\n<td>该路径下存放了JDK的各种模块。</td>\n</tr>\n<tr>\n<td>legal</td>\n<td>该路径下存放了JDK各模块的授权文档。</td>\n</tr>\n<tr>\n<td>lib</td>\n<td>该路径下存放了JDK工具的一些补充JAR包。</td>\n</tr>\n</tbody></table>\n<h3 id=\"1-3-HelloWorld小案例\"><a href=\"#1-3-HelloWorld小案例\" class=\"headerlink\" title=\"1.3 HelloWorld小案例\"></a>1.3 HelloWorld小案例</h3><p>​\tHelloWorld案例是指在计算机屏幕上输出“HelloWorld”这行文字。各种计算机语言都习惯使用该案例作为第一个演示案例。</p>\n<h4 id=\"2-3-1-Java程序开发运行流程\"><a href=\"#2-3-1-Java程序开发运行流程\" class=\"headerlink\" title=\"2.3.1 Java程序开发运行流程\"></a>2.3.1 Java程序开发运行流程</h4><p>开发Java程序，需要三个步骤：编写程序，编译程序，运行程序。</p>\n<h4 id=\"2-3-2-HelloWorld案例的编写\"><a href=\"#2-3-2-HelloWorld案例的编写\" class=\"headerlink\" title=\"2.3.2 HelloWorld案例的编写\"></a>2.3.2 HelloWorld案例的编写</h4><ol>\n<li>新建文本文档文件，修改名称为HelloWorld.java。</li>\n</ol>\n<p><strong>注意</strong>：后缀名为java的才是java文件。</p>\n<ol start=\"2\">\n<li>用记事本打开HelloWorld.java文件，输写程序内容。</li>\n</ol>\n<p><strong>注意</strong>：代码要跟我编写的完全保持一致。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloWorld</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;HelloWorld&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>保存</li>\n</ol>\n<p><strong>注意</strong>：未保存的文件在左上角会有*符号标记</p>\n<ol start=\"4\">\n<li><p>编译文件。编译后会产生一个class文件。</p>\n<p>java文件：程序员自己编写的代码。</p>\n<p>class文件：交给计算机执行的文件。</p>\n</li>\n<li><p>运行代码</p>\n<p><strong>注意</strong>：运行的是编译之后的class文件。</p>\n</li>\n</ol>\n<blockquote>\n<p>用到两个命令：</p>\n<p>​\tjavac + 文件名 + 后缀名 （就是编译java文件）</p>\n<p>​\tjava + 文件名（运行编译之后的class文件）</p>\n</blockquote>\n<h3 id=\"1-4-HelloWorld案例常见问题\"><a href=\"#1-4-HelloWorld案例常见问题\" class=\"headerlink\" title=\"1.4 HelloWorld案例常见问题\"></a>1.4 HelloWorld案例常见问题</h3><h4 id=\"1-4-1-BUG\"><a href=\"#1-4-1-BUG\" class=\"headerlink\" title=\"1.4.1 BUG\"></a>1.4.1 BUG</h4><p>​\t在电脑系统或程序中，隐藏着的一些未被发现的缺陷或问题统称为bug（漏洞）。</p>\n<h4 id=\"1-4-2-BUG的解决\"><a href=\"#1-4-2-BUG的解决\" class=\"headerlink\" title=\"1.4.2 BUG的解决\"></a>1.4.2 BUG的解决</h4><ol>\n<li>具备识别BUG的能力：多看</li>\n<li>具备分析BUG的能力：多思考，多查资料</li>\n<li>具备解决BUG的能力：多尝试，多总结</li>\n</ol>\n<h4 id=\"1-4-3-HelloWorld常见问题\"><a href=\"#1-4-3-HelloWorld常见问题\" class=\"headerlink\" title=\"1.4.3 HelloWorld常见问题\"></a>1.4.3 HelloWorld常见问题</h4><p>1、非法字符问题。Java中的符号都是英文格式的。</p>\n<p>2、大小写问题。Java语言对大小写敏感（区分大小写）。</p>\n<p>3、在系统中显示文件的扩展名，避免出现HelloWorld.java.txt文件。</p>\n<p>4、编译命令后的java文件名需要带文件后缀.java</p>\n<p>5、运行命令后的class文件名（类名）不带文件后缀.class</p>\n<p>…</p>\n<h4 id=\"常见错误代码1：\"><a href=\"#常见错误代码1：\" class=\"headerlink\" title=\"常见错误代码1：\"></a>常见错误代码1：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">publicclass HelloWorld&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;HelloWorld&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>问题：</p>\n<p>​\tpublic和class之间缺少一个空格。</p>\n<p>技巧：一般来讲在单词之间的空格是不能省略的。</p>\n<p>​\t如果是单词和符号之间的空格是可以省略的。</p>\n<h4 id=\"常见错误代码2：\"><a href=\"#常见错误代码2：\" class=\"headerlink\" title=\"常见错误代码2：\"></a>常见错误代码2：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloWorld</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">        system.out.println(<span class=\"string\">&quot;HelloWorld&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>问题：</p>\n<p>​\tsystem首字母必须大写。</p>\n<p>技巧：</p>\n<p>​\tJava代码中，是严格区分大小写的。</p>\n<p>​\t所以该大写的地方一定要大写，该小写的地方一定要小写。多多练习。</p>\n<h4 id=\"常见错误代码3：\"><a href=\"#常见错误代码3：\" class=\"headerlink\" title=\"常见错误代码3：\"></a>常见错误代码3：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloWorld</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">        System.out.println(HelloWorld);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>问题：</p>\n<p>​\t第三行代码中的HelloWorld必须用双引号引起来，否则就会出现问题。</p>\n<h4 id=\"常见错误代码4：\"><a href=\"#常见错误代码4：\" class=\"headerlink\" title=\"常见错误代码4：\"></a>常见错误代码4：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloWorld</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;HelloWorld&quot;</span>)；</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>问题：</p>\n<p>​\t在以后代码当中，所有的标点符号必须是英文状态下的。</p>\n<p>技巧：</p>\n<p>​\t可以在输入法中进行对应的设置。</p>\n<h3 id=\"1-5-环境变量-1\"><a href=\"#1-5-环境变量-1\" class=\"headerlink\" title=\"1.5 环境变量\"></a>1.5 环境变量</h3><h4 id=\"1-5-1-为什么配置环境变量\"><a href=\"#1-5-1-为什么配置环境变量\" class=\"headerlink\" title=\"1.5.1 为什么配置环境变量\"></a>1.5.1 为什么配置环境变量</h4><p>​\t开发Java程序，需要使用JDK提供的开发工具（比如javac.exe、java.exe等命令），而这些工具在JDK的安装目录的bin目录下，如果不配置环境变量，那么这些命令只可以在bin目录下使用，而我们想要在任意目录下都能使用，所以就要配置环境变量。</p>\n<p>注意：现在最新从官网上下载的JDK安装时会自动配置javac、java命令的路径到Path环境变量中去 ，所以javac、java可以直接使用。</p>\n<h4 id=\"1-5-2配置方式\"><a href=\"#1-5-2配置方式\" class=\"headerlink\" title=\"1.5.2配置方式\"></a>1.5.2配置方式</h4><p><img src=\"/tupian/image-20210923091654365.png\" alt=\"image-20210923091654365\"></p>\n<p>以前下载的老版本的JDK是没有自动配置的，而且自动配置的也只包含了4个工具而已，所以我们需要删掉已经配置完毕的，再次重新配置Path环境变量。</p>\n<p>①<strong>JAVA_HOME</strong>：告诉操作系统JDK安装在了哪个位置（未来其他技术要通过这个找JDK）</p>\n<p><img src=\"/tupian/image-20210923091710450.png\" alt=\"image-20210923091710450\"></p>\n<p>②<strong>Path</strong>：告诉操作系统JDK提供的javac(编译)、java(执行)命令安装到了哪个位置</p>\n<p><img src=\"/tupian/image-20210923091721035.png\" alt=\"image-20210923091721035\"></p>\n<h4 id=\"1-5-3win10的bug\"><a href=\"#1-5-3win10的bug\" class=\"headerlink\" title=\"1.5.3win10的bug\"></a>1.5.3win10的bug</h4><p>当电脑重启之后，环境变量失效了。表示操作系统不支持自定义的环境变量。</p>\n<p>步骤：</p>\n<ul>\n<li><p>还是要配置JAVA_HOME给以后的相关软件去使用</p>\n</li>\n<li><p>我们可以把java和javac的完整路径配置到PATH当中。</p>\n<p>E:\\develop\\JDK\\bin</p>\n</li>\n</ul>\n<h3 id=\"1-6-Notepad\"><a href=\"#1-6-Notepad\" class=\"headerlink\" title=\"1.6 Notepad++\"></a>1.6 Notepad++</h3><h4 id=\"1-6-1下载\"><a href=\"#1-6-1下载\" class=\"headerlink\" title=\"1.6.1下载\"></a>1.6.1下载</h4><p>​\t打开百度，搜索一下notepad++就可以了。</p>\n<p>​\tday01的资料文件夹里面也有对应的安装包。</p>\n<h4 id=\"1-6-2-安装\"><a href=\"#1-6-2-安装\" class=\"headerlink\" title=\"1.6.2 安装\"></a>1.6.2 安装</h4><p>傻瓜式安装，直接点击下一步就可以了。</p>\n<p>​\t对安装路径有两个小建议：</p>\n<ul>\n<li>路径不要有中文，不要有空格，不要有一些特殊符号</li>\n<li>建议最好把所有的跟开发相关的软件都放在一起，方便管理。</li>\n</ul>\n<h4 id=\"1-6-3-设置\"><a href=\"#1-6-3-设置\" class=\"headerlink\" title=\"1.6.3 设置\"></a>1.6.3 设置</h4><p>​\t右键点击java文件，选择edit with notepad++。</p>\n<p>​\t点击设置，再点击首选项。在弹出的页面当中，左侧选择新建，中间选择Java，右侧选择ANSI。</p>\n<h4 id=\"1-6-4-练习\"><a href=\"#1-6-4-练习\" class=\"headerlink\" title=\"1.6.4 练习\"></a>1.6.4 练习</h4><p>​\t利用notepad++去编写一个HelloWorld并能成功编译和运行。</p>\n<h3 id=\"1-7-Java语言的发展\"><a href=\"#1-7-Java语言的发展\" class=\"headerlink\" title=\"1.7 Java语言的发展\"></a>1.7 Java语言的发展</h3><p>三个版本：</p>\n<ul>\n<li>Java5.0：这是Java的第一个大版本更新。</li>\n<li>Java8.0：这个是目前绝大数公司正在使用的版本。因为这个版本最为稳定。</li>\n<li>Java15.0：这个是我们课程中学习的版本。</li>\n</ul>\n<p>解惑：</p>\n<p>​\t我们学的跟工作中使用的版本不太一样啊。会不会影响以后工作呢？</p>\n<p>向下兼容。新的版本只是在原有的基础上添加了一些新的功能而已。</p>\n<p>举例：</p>\n<p>用8版本开发的代码，用11版本能运行吗？必须可以的。</p>\n<p>用11版本开发的代码，用8版本能运行吗？不一定。</p>\n<p>如果11版本开发的代码，没有用到9~11的新特性，那么用8是可以运行的。</p>\n<p>如果11版本开发的代码，用到了9~11的新特性，那么用8就无法运行了。</p>\n<h3 id=\"1-8-Java的三大平台\"><a href=\"#1-8-Java的三大平台\" class=\"headerlink\" title=\"1.8 Java的三大平台\"></a>1.8 Java的三大平台</h3><p>​\tJavaSE、JavaME、JavaEE</p>\n<h4 id=\"1-8-1-JavaSE\"><a href=\"#1-8-1-JavaSE\" class=\"headerlink\" title=\"1.8.1 JavaSE\"></a>1.8.1 JavaSE</h4><p>​\t是其他两个版本的基础。</p>\n<h4 id=\"1-8-2-JavaME\"><a href=\"#1-8-2-JavaME\" class=\"headerlink\" title=\"1.8.2 JavaME\"></a>1.8.2 JavaME</h4><p>​\tJava语言的小型版，用于嵌入式消费类电子设备或者小型移动设备的开发。</p>\n<p>​\t其中最为主要的还是小型移动设备的开发（手机）。渐渐的没落了，已经被安卓和IOS给替代了。</p>\n<p>​\t但是，安卓也是可以用Java来开发的。</p>\n<h4 id=\"1-8-3-JavaEE\"><a href=\"#1-8-3-JavaEE\" class=\"headerlink\" title=\"1.8.3 JavaEE\"></a>1.8.3 JavaEE</h4><p>​\t用于Web方向的网站开发。（主要从事后台服务器的开发）</p>\n<p>​\t在服务器领域，Java是当之无愧的龙头老大。</p>\n<h3 id=\"1-9-Java的主要特性\"><a href=\"#1-9-Java的主要特性\" class=\"headerlink\" title=\"1.9 Java的主要特性\"></a>1.9 Java的主要特性</h3><ul>\n<li>面向对象</li>\n<li>安全性</li>\n<li>多线程</li>\n<li>简单易用</li>\n<li>开源</li>\n<li>跨平台</li>\n</ul>\n<h4 id=\"1-9-1-Java语言跨平台的原理\"><a href=\"#1-9-1-Java语言跨平台的原理\" class=\"headerlink\" title=\"1.9.1 Java语言跨平台的原理\"></a>1.9.1 Java语言跨平台的原理</h4><ul>\n<li>操作系统本身其实是不认识Java语言的。</li>\n<li>但是针对于不同的操作系统，Java提供了不同的虚拟机。</li>\n</ul>\n<p>虚拟机会把Java语言翻译成操作系统能看得懂的语言。</p>\n<p><img src=\"/tupian/image-20210923091350952.png\" alt=\"image-20210923091350952\"></p>\n<h3 id=\"1-10-JRE和JDK\"><a href=\"#1-10-JRE和JDK\" class=\"headerlink\" title=\"1.10 JRE和JDK\"></a>1.10 JRE和JDK</h3><p><img src=\"/tupian/image-20210923091544110.png\" alt=\"image-20210923091544110\"></p>\n<p>JVM（Java Virtual Machine），Java虚拟机</p>\n<p>JRE（Java Runtime Environment），Java运行环境，包含了JVM和Java的核心类库（Java API）</p>\n<p>JDK（Java Development Kit）称为Java开发工具，包含了JRE和开发工具</p>\n<p>总结：我们只需安装JDK即可，它包含了java的运行环境和虚拟机。</p>\n","length":5075,"excerpt":"","more":"<h1 id=\"注意：\"><a href=\"#注意：\" class=\"headerlink\" title=\"注意：\"></a>注意：</h1><p>​\t用记事本打开本文档，格式较差。</p>\n<p>​\t可安装typora软件后再次打开。</p>\n<p>​\t安装包位于：day01\\资料\\其他软件\\阅读笔记的软件\\typora-setup-x64.exe</p>\n<h1 id=\"day01-Java基础语法\"><a href=\"#day01-Java基础语法\" class=\"headerlink\" title=\"day01 - Java基础语法\"></a>day01 - Java基础语法</h1><h2 id=\"1-人机交互\"><a href=\"#1-人机交互\" class=\"headerlink\" title=\"1. 人机交互\"></a>1. 人机交互</h2><h3 id=\"1-1-什么是cmd？\"><a href=\"#1-1-什么是cmd？\" class=\"headerlink\" title=\"1.1 什么是cmd？\"></a>1.1 什么是cmd？</h3><p>就是在windows操作系统中，利用命令行的方式去操作计算机。</p>\n<p>我们可以利用cmd命令去操作计算机，比如：打开文件，打开文件夹，创建文件夹等。</p>\n<h3 id=\"1-2-如何打开CMD窗口？\"><a href=\"#1-2-如何打开CMD窗口？\" class=\"headerlink\" title=\"1.2 如何打开CMD窗口？\"></a>1.2 如何打开CMD窗口？</h3><ol>\n<li><p>按下快捷键：win + R。</p>\n<pre><code> 此时会出现运行窗口。\n</code></pre>\n</li>\n<li><p>在运行窗口中输出cmd</p>\n</li>\n<li><p>输出回车。</p>\n</li>\n</ol>\n<p>解惑：</p>\n<p>​\tcmd默认操作C盘下的users文件夹下的XXX文件夹。（XXX就是计算机名）</p>\n<p> <img src=\"/tupian/cmd.png\" alt=\"image-20210923091350952\"></p>\n<h3 id=\"1-3-常用CMD命令\"><a href=\"#1-3-常用CMD命令\" class=\"headerlink\" title=\"1.3 常用CMD命令\"></a>1.3 常用CMD命令</h3><p> 扩展一个小点：</p>\n<p>​\t在很多资料中都说成是DOS命令，其实是不对的。真正的DOS命令是1981年微软和IBM出品的MS-DOS操作系统中的命令才叫做DOS命令。</p>\n<p>​\t而在Windows中，win98之前的操作系统是以非图形化的DOS为基础的，可以叫做DOS命令。到了2000年以后，windows逐渐的以图形化界面为主了，这个时候就不能叫DOS命令了，他只是模拟了DOS环境而已，很多的原本的DOS命令已经无法使用了，所以这个时候叫做CMD命令会更准确一些。</p>\n<p>常见的CMD命令如下：</p>\n<table>\n<thead>\n<tr>\n<th>操作</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>盘符名称:</td>\n<td>盘符切换。E:回车，表示切换到E盘。</td>\n</tr>\n<tr>\n<td>dir</td>\n<td>查看当前路径下的内容。</td>\n</tr>\n<tr>\n<td>cd 目录</td>\n<td>进入单级目录。cd itheima</td>\n</tr>\n<tr>\n<td>cd ..</td>\n<td>回退到上一级目录。</td>\n</tr>\n<tr>\n<td>cd 目录1\\目录2...</td>\n<td>进入多级目录。cd itheima\\JavaSE</td>\n</tr>\n<tr>\n<td>cd \\</td>\n<td>回退到盘符目录。</td>\n</tr>\n<tr>\n<td>cls</td>\n<td>清屏。</td>\n</tr>\n<tr>\n<td>exit</td>\n<td>退出命令提示符窗口。</td>\n</tr>\n</tbody></table>\n<h3 id=\"1-4-CMD练习\"><a href=\"#1-4-CMD练习\" class=\"headerlink\" title=\"1.4 CMD练习\"></a>1.4 CMD练习</h3><p>需求：</p>\n<p>  利用cmd命令打开自己电脑上的QQ。</p>\n<p>完成步骤：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>,确定自己电脑上的QQ安装在哪里</span><br><span class=\"line\"><span class=\"number\">2</span>,启动cmd</span><br><span class=\"line\"><span class=\"number\">3</span>,进入到启动程序QQ.exe所在的路径。</span><br><span class=\"line\"><span class=\"number\">4</span>,输出qq.exe加回车表示启动qq。</span><br></pre></td></tr></table></figure>\n\n<p>解惑：</p>\n<p>​\t在windows操作系统当中，文件名或者文件夹名是忽略大小写的。</p>\n<h3 id=\"1-5-环境变量\"><a href=\"#1-5-环境变量\" class=\"headerlink\" title=\"1.5 环境变量\"></a>1.5 环境变量</h3><p>作用：</p>\n<p>​\t如果我想要在CMD的任意目录下，都可以启动某一个软件，那么就可以把这个软件的路径配置到环境变量中的PATH里面。</p>\n<p>​\t在启动软件的时候，操作系统会先在当前路径下找，如果在当前录课没有再到环境变量的路径中去找。如果都找不到就提示无法启动。</p>\n<p>步骤：</p>\n<ul>\n<li>右键我的电脑，选择属性。</li>\n<li>点击左侧的高级系统设置</li>\n<li>选择高级，再点击下面的环境变量。</li>\n<li>找系统变量里面的PATH</li>\n<li>把软件的完整路径，配置到PATH当中就可以了。</li>\n<li>（可做可不做）就是把自己配置的路径，移动到最上面。</li>\n</ul>\n<p>图解示例如下：</p>\n<p>第一步：右键点击我的电脑并选择属性。</p>\n<p>（如果无法出现第二步界面，可以打开我的电脑之后右键点击空白处）</p>\n<p><img src=\"/tupian/1.png\" alt=\"image-20210923091350952\"></p>\n<p>第二步：点击高级系统设置。</p>\n<p>​\t <img src=\"/tupian/2.png\" alt=\"image-20210923091350952\"></p>\n<p>第三步：选择高级，再点击下面的环境变量。</p>\n<p> <img src=\"/tupian/3.png\" alt=\"image-20210923091350952\"></p>\n<p>第四步：找系统变量里面的PATH</p>\n<p> <img src=\"/tupian/4.png\" alt=\"image-20210923091350952\"></p>\n<p>第五步：点击新建，把软件的完整路径，配置到PATH当中，再点击确定即可。</p>\n<p>第六步：（可做可不做）点击上移，把当前配置的路径移动到最上面。</p>\n<p>移动的好处：在CMD中打开软件时，会先找当前路径，再找环境变量，在环境变量中是从上往下依次查找的，如果路径放在最上面查找的速度比较快。</p>\n<p> <img src=\"/tupian/5.png\" alt=\"image-20210923091350952\"></p>\n<h2 id=\"2-Java概述\"><a href=\"#2-Java概述\" class=\"headerlink\" title=\"2. Java概述\"></a>2. Java概述</h2><h3 id=\"1-1-Java是什么？\"><a href=\"#1-1-Java是什么？\" class=\"headerlink\" title=\"1.1 Java是什么？\"></a>1.1 Java是什么？</h3><p>语言：人与人交流沟通的表达方式</p>\n<p>计算机语言：人与计算机之间进行信息交流沟通的一种特殊语言</p>\n<p>Java是一门非常火的计算机语言。（也叫做编程语言）</p>\n<p>我们想要让计算机做一些事情，那么就可以通过Java语言告诉计算机就可以了</p>\n<h3 id=\"1-2下载和安装\"><a href=\"#1-2下载和安装\" class=\"headerlink\" title=\"1.2下载和安装\"></a>1.2下载和安装</h3><h4 id=\"1-2-1-下载\"><a href=\"#1-2-1-下载\" class=\"headerlink\" title=\"1.2.1 下载\"></a>1.2.1 下载</h4><p>通过官方网站获取JDK</p>\n<p><a href=\"http://www.oracle.com/\">http://www.oracle.com</a></p>\n<p><strong>注意1</strong>：针对不同的操作系统，需要下载对应版本的JDK。</p>\n<p><strong>注意2</strong>：</p>\n<p>​\t如果你的电脑是windows32位的，建议重装系统，重装成64位的操作系统。</p>\n<p>​\t因为Java从9版本开始，就已经不提供32位版本的安装包了。</p>\n<p>​\t如果自己不愿意下载，到今天day01资料文件中，也有对应的安装包。</p>\n<h4 id=\"1-2-2-安装\"><a href=\"#1-2-2-安装\" class=\"headerlink\" title=\"1.2.2 安装\"></a>1.2.2 安装</h4><p>​\t傻瓜式安装，下一步即可。默认的安装路径是在C:\\Program Files下。</p>\n<p>建议：</p>\n<ul>\n<li>安装路径不要有中文，不要有空格等一些特殊的符号。</li>\n<li>以后跟开发相关的所有软件建议都安装在同一个文件夹中，方便管理。</li>\n</ul>\n<h4 id=\"1-2-3-JDK的安装目录介绍\"><a href=\"#1-2-3-JDK的安装目录介绍\" class=\"headerlink\" title=\"1.2.3 JDK的安装目录介绍\"></a>1.2.3 JDK的安装目录介绍</h4><table>\n<thead>\n<tr>\n<th>目录名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>bin</td>\n<td>该路径下存放了JDK的各种工具命令。javac和java就放在这个目录。</td>\n</tr>\n<tr>\n<td>conf</td>\n<td>该路径下存放了JDK的相关配置文件。</td>\n</tr>\n<tr>\n<td>include</td>\n<td>该路径下存放了一些平台特定的头文件。</td>\n</tr>\n<tr>\n<td>jmods</td>\n<td>该路径下存放了JDK的各种模块。</td>\n</tr>\n<tr>\n<td>legal</td>\n<td>该路径下存放了JDK各模块的授权文档。</td>\n</tr>\n<tr>\n<td>lib</td>\n<td>该路径下存放了JDK工具的一些补充JAR包。</td>\n</tr>\n</tbody></table>\n<h3 id=\"1-3-HelloWorld小案例\"><a href=\"#1-3-HelloWorld小案例\" class=\"headerlink\" title=\"1.3 HelloWorld小案例\"></a>1.3 HelloWorld小案例</h3><p>​\tHelloWorld案例是指在计算机屏幕上输出“HelloWorld”这行文字。各种计算机语言都习惯使用该案例作为第一个演示案例。</p>\n<h4 id=\"2-3-1-Java程序开发运行流程\"><a href=\"#2-3-1-Java程序开发运行流程\" class=\"headerlink\" title=\"2.3.1 Java程序开发运行流程\"></a>2.3.1 Java程序开发运行流程</h4><p>开发Java程序，需要三个步骤：编写程序，编译程序，运行程序。</p>\n<h4 id=\"2-3-2-HelloWorld案例的编写\"><a href=\"#2-3-2-HelloWorld案例的编写\" class=\"headerlink\" title=\"2.3.2 HelloWorld案例的编写\"></a>2.3.2 HelloWorld案例的编写</h4><ol>\n<li>新建文本文档文件，修改名称为HelloWorld.java。</li>\n</ol>\n<p><strong>注意</strong>：后缀名为java的才是java文件。</p>\n<ol start=\"2\">\n<li>用记事本打开HelloWorld.java文件，输写程序内容。</li>\n</ol>\n<p><strong>注意</strong>：代码要跟我编写的完全保持一致。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloWorld</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;HelloWorld&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>保存</li>\n</ol>\n<p><strong>注意</strong>：未保存的文件在左上角会有*符号标记</p>\n<ol start=\"4\">\n<li><p>编译文件。编译后会产生一个class文件。</p>\n<p>java文件：程序员自己编写的代码。</p>\n<p>class文件：交给计算机执行的文件。</p>\n</li>\n<li><p>运行代码</p>\n<p><strong>注意</strong>：运行的是编译之后的class文件。</p>\n</li>\n</ol>\n<blockquote>\n<p>用到两个命令：</p>\n<p>​\tjavac + 文件名 + 后缀名 （就是编译java文件）</p>\n<p>​\tjava + 文件名（运行编译之后的class文件）</p>\n</blockquote>\n<h3 id=\"1-4-HelloWorld案例常见问题\"><a href=\"#1-4-HelloWorld案例常见问题\" class=\"headerlink\" title=\"1.4 HelloWorld案例常见问题\"></a>1.4 HelloWorld案例常见问题</h3><h4 id=\"1-4-1-BUG\"><a href=\"#1-4-1-BUG\" class=\"headerlink\" title=\"1.4.1 BUG\"></a>1.4.1 BUG</h4><p>​\t在电脑系统或程序中，隐藏着的一些未被发现的缺陷或问题统称为bug（漏洞）。</p>\n<h4 id=\"1-4-2-BUG的解决\"><a href=\"#1-4-2-BUG的解决\" class=\"headerlink\" title=\"1.4.2 BUG的解决\"></a>1.4.2 BUG的解决</h4><ol>\n<li>具备识别BUG的能力：多看</li>\n<li>具备分析BUG的能力：多思考，多查资料</li>\n<li>具备解决BUG的能力：多尝试，多总结</li>\n</ol>\n<h4 id=\"1-4-3-HelloWorld常见问题\"><a href=\"#1-4-3-HelloWorld常见问题\" class=\"headerlink\" title=\"1.4.3 HelloWorld常见问题\"></a>1.4.3 HelloWorld常见问题</h4><p>1、非法字符问题。Java中的符号都是英文格式的。</p>\n<p>2、大小写问题。Java语言对大小写敏感（区分大小写）。</p>\n<p>3、在系统中显示文件的扩展名，避免出现HelloWorld.java.txt文件。</p>\n<p>4、编译命令后的java文件名需要带文件后缀.java</p>\n<p>5、运行命令后的class文件名（类名）不带文件后缀.class</p>\n<p>…</p>\n<h4 id=\"常见错误代码1：\"><a href=\"#常见错误代码1：\" class=\"headerlink\" title=\"常见错误代码1：\"></a>常见错误代码1：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">publicclass HelloWorld&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;HelloWorld&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>问题：</p>\n<p>​\tpublic和class之间缺少一个空格。</p>\n<p>技巧：一般来讲在单词之间的空格是不能省略的。</p>\n<p>​\t如果是单词和符号之间的空格是可以省略的。</p>\n<h4 id=\"常见错误代码2：\"><a href=\"#常见错误代码2：\" class=\"headerlink\" title=\"常见错误代码2：\"></a>常见错误代码2：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloWorld</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">        system.out.println(<span class=\"string\">&quot;HelloWorld&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>问题：</p>\n<p>​\tsystem首字母必须大写。</p>\n<p>技巧：</p>\n<p>​\tJava代码中，是严格区分大小写的。</p>\n<p>​\t所以该大写的地方一定要大写，该小写的地方一定要小写。多多练习。</p>\n<h4 id=\"常见错误代码3：\"><a href=\"#常见错误代码3：\" class=\"headerlink\" title=\"常见错误代码3：\"></a>常见错误代码3：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloWorld</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">        System.out.println(HelloWorld);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>问题：</p>\n<p>​\t第三行代码中的HelloWorld必须用双引号引起来，否则就会出现问题。</p>\n<h4 id=\"常见错误代码4：\"><a href=\"#常见错误代码4：\" class=\"headerlink\" title=\"常见错误代码4：\"></a>常见错误代码4：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloWorld</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;HelloWorld&quot;</span>)；</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>问题：</p>\n<p>​\t在以后代码当中，所有的标点符号必须是英文状态下的。</p>\n<p>技巧：</p>\n<p>​\t可以在输入法中进行对应的设置。</p>\n<h3 id=\"1-5-环境变量-1\"><a href=\"#1-5-环境变量-1\" class=\"headerlink\" title=\"1.5 环境变量\"></a>1.5 环境变量</h3><h4 id=\"1-5-1-为什么配置环境变量\"><a href=\"#1-5-1-为什么配置环境变量\" class=\"headerlink\" title=\"1.5.1 为什么配置环境变量\"></a>1.5.1 为什么配置环境变量</h4><p>​\t开发Java程序，需要使用JDK提供的开发工具（比如javac.exe、java.exe等命令），而这些工具在JDK的安装目录的bin目录下，如果不配置环境变量，那么这些命令只可以在bin目录下使用，而我们想要在任意目录下都能使用，所以就要配置环境变量。</p>\n<p>注意：现在最新从官网上下载的JDK安装时会自动配置javac、java命令的路径到Path环境变量中去 ，所以javac、java可以直接使用。</p>\n<h4 id=\"1-5-2配置方式\"><a href=\"#1-5-2配置方式\" class=\"headerlink\" title=\"1.5.2配置方式\"></a>1.5.2配置方式</h4><p><img src=\"/tupian/image-20210923091654365.png\" alt=\"image-20210923091654365\"></p>\n<p>以前下载的老版本的JDK是没有自动配置的，而且自动配置的也只包含了4个工具而已，所以我们需要删掉已经配置完毕的，再次重新配置Path环境变量。</p>\n<p>①<strong>JAVA_HOME</strong>：告诉操作系统JDK安装在了哪个位置（未来其他技术要通过这个找JDK）</p>\n<p><img src=\"/tupian/image-20210923091710450.png\" alt=\"image-20210923091710450\"></p>\n<p>②<strong>Path</strong>：告诉操作系统JDK提供的javac(编译)、java(执行)命令安装到了哪个位置</p>\n<p><img src=\"/tupian/image-20210923091721035.png\" alt=\"image-20210923091721035\"></p>\n<h4 id=\"1-5-3win10的bug\"><a href=\"#1-5-3win10的bug\" class=\"headerlink\" title=\"1.5.3win10的bug\"></a>1.5.3win10的bug</h4><p>当电脑重启之后，环境变量失效了。表示操作系统不支持自定义的环境变量。</p>\n<p>步骤：</p>\n<ul>\n<li><p>还是要配置JAVA_HOME给以后的相关软件去使用</p>\n</li>\n<li><p>我们可以把java和javac的完整路径配置到PATH当中。</p>\n<p>E:\\develop\\JDK\\bin</p>\n</li>\n</ul>\n<h3 id=\"1-6-Notepad\"><a href=\"#1-6-Notepad\" class=\"headerlink\" title=\"1.6 Notepad++\"></a>1.6 Notepad++</h3><h4 id=\"1-6-1下载\"><a href=\"#1-6-1下载\" class=\"headerlink\" title=\"1.6.1下载\"></a>1.6.1下载</h4><p>​\t打开百度，搜索一下notepad++就可以了。</p>\n<p>​\tday01的资料文件夹里面也有对应的安装包。</p>\n<h4 id=\"1-6-2-安装\"><a href=\"#1-6-2-安装\" class=\"headerlink\" title=\"1.6.2 安装\"></a>1.6.2 安装</h4><p>傻瓜式安装，直接点击下一步就可以了。</p>\n<p>​\t对安装路径有两个小建议：</p>\n<ul>\n<li>路径不要有中文，不要有空格，不要有一些特殊符号</li>\n<li>建议最好把所有的跟开发相关的软件都放在一起，方便管理。</li>\n</ul>\n<h4 id=\"1-6-3-设置\"><a href=\"#1-6-3-设置\" class=\"headerlink\" title=\"1.6.3 设置\"></a>1.6.3 设置</h4><p>​\t右键点击java文件，选择edit with notepad++。</p>\n<p>​\t点击设置，再点击首选项。在弹出的页面当中，左侧选择新建，中间选择Java，右侧选择ANSI。</p>\n<h4 id=\"1-6-4-练习\"><a href=\"#1-6-4-练习\" class=\"headerlink\" title=\"1.6.4 练习\"></a>1.6.4 练习</h4><p>​\t利用notepad++去编写一个HelloWorld并能成功编译和运行。</p>\n<h3 id=\"1-7-Java语言的发展\"><a href=\"#1-7-Java语言的发展\" class=\"headerlink\" title=\"1.7 Java语言的发展\"></a>1.7 Java语言的发展</h3><p>三个版本：</p>\n<ul>\n<li>Java5.0：这是Java的第一个大版本更新。</li>\n<li>Java8.0：这个是目前绝大数公司正在使用的版本。因为这个版本最为稳定。</li>\n<li>Java15.0：这个是我们课程中学习的版本。</li>\n</ul>\n<p>解惑：</p>\n<p>​\t我们学的跟工作中使用的版本不太一样啊。会不会影响以后工作呢？</p>\n<p>向下兼容。新的版本只是在原有的基础上添加了一些新的功能而已。</p>\n<p>举例：</p>\n<p>用8版本开发的代码，用11版本能运行吗？必须可以的。</p>\n<p>用11版本开发的代码，用8版本能运行吗？不一定。</p>\n<p>如果11版本开发的代码，没有用到9~11的新特性，那么用8是可以运行的。</p>\n<p>如果11版本开发的代码，用到了9~11的新特性，那么用8就无法运行了。</p>\n<h3 id=\"1-8-Java的三大平台\"><a href=\"#1-8-Java的三大平台\" class=\"headerlink\" title=\"1.8 Java的三大平台\"></a>1.8 Java的三大平台</h3><p>​\tJavaSE、JavaME、JavaEE</p>\n<h4 id=\"1-8-1-JavaSE\"><a href=\"#1-8-1-JavaSE\" class=\"headerlink\" title=\"1.8.1 JavaSE\"></a>1.8.1 JavaSE</h4><p>​\t是其他两个版本的基础。</p>\n<h4 id=\"1-8-2-JavaME\"><a href=\"#1-8-2-JavaME\" class=\"headerlink\" title=\"1.8.2 JavaME\"></a>1.8.2 JavaME</h4><p>​\tJava语言的小型版，用于嵌入式消费类电子设备或者小型移动设备的开发。</p>\n<p>​\t其中最为主要的还是小型移动设备的开发（手机）。渐渐的没落了，已经被安卓和IOS给替代了。</p>\n<p>​\t但是，安卓也是可以用Java来开发的。</p>\n<h4 id=\"1-8-3-JavaEE\"><a href=\"#1-8-3-JavaEE\" class=\"headerlink\" title=\"1.8.3 JavaEE\"></a>1.8.3 JavaEE</h4><p>​\t用于Web方向的网站开发。（主要从事后台服务器的开发）</p>\n<p>​\t在服务器领域，Java是当之无愧的龙头老大。</p>\n<h3 id=\"1-9-Java的主要特性\"><a href=\"#1-9-Java的主要特性\" class=\"headerlink\" title=\"1.9 Java的主要特性\"></a>1.9 Java的主要特性</h3><ul>\n<li>面向对象</li>\n<li>安全性</li>\n<li>多线程</li>\n<li>简单易用</li>\n<li>开源</li>\n<li>跨平台</li>\n</ul>\n<h4 id=\"1-9-1-Java语言跨平台的原理\"><a href=\"#1-9-1-Java语言跨平台的原理\" class=\"headerlink\" title=\"1.9.1 Java语言跨平台的原理\"></a>1.9.1 Java语言跨平台的原理</h4><ul>\n<li>操作系统本身其实是不认识Java语言的。</li>\n<li>但是针对于不同的操作系统，Java提供了不同的虚拟机。</li>\n</ul>\n<p>虚拟机会把Java语言翻译成操作系统能看得懂的语言。</p>\n<p><img src=\"/tupian/image-20210923091350952.png\" alt=\"image-20210923091350952\"></p>\n<h3 id=\"1-10-JRE和JDK\"><a href=\"#1-10-JRE和JDK\" class=\"headerlink\" title=\"1.10 JRE和JDK\"></a>1.10 JRE和JDK</h3><p><img src=\"/tupian/image-20210923091544110.png\" alt=\"image-20210923091544110\"></p>\n<p>JVM（Java Virtual Machine），Java虚拟机</p>\n<p>JRE（Java Runtime Environment），Java运行环境，包含了JVM和Java的核心类库（Java API）</p>\n<p>JDK（Java Development Kit）称为Java开发工具，包含了JRE和开发工具</p>\n<p>总结：我们只需安装JDK即可，它包含了java的运行环境和虚拟机。</p>\n"},{"title":"day05-数组","date":"2024-12-12T08:39:00.000Z","photos":["/tupian/j05.jpg"],"_content":"# 1.数组\n\n### 概念：\n\n​\t指的是一种容器，可以同来存储同种数据类型的多个值。\n\n​\t但是数组容器在存储数据的时候，需要结合隐式转换考虑。\n\n比如：\n\n​\t定义了一个int类型的数组。那么boolean。double类型的数据是不能存到这个数组中的，\n\n​\t但是byte类型，short类型，int类型的数据是可以存到这个数组里面的。\n\n建议：\n\n​\t容器的类，和存储的数据类型保持一致。\n\n举例：\n\n​\t整数1 2 3 4 56 就可以使用int类型的数组来存储。\n\n​\t小数1.1 1.2 1.3 1.4 就可以使用double类型的数组来存储。\n\n​\t字符串\"aaa\"  \"bbb\"  \"ccc\" 就可以使用String类型的数组来存储。\n\n# 2.数组的定义\n\n### 格式一：\n\n​\t数据类型 [] 数组名\n\n比如：int [] array\n\n### 格式二：\n\n​\t数据类型  数组名 []\n\n比如： int array []\n\n### 详解：\n\n数据类型：限定了数组以后能存什么类型的数据。\n\n方括号：表示现在定义的是一个数组。\n\n数组名：就是一个名字而已，方便以后使用。\n\n### 注意点：\n\n​\t方法括号跟数组名，谁写在前面，谁写在后面都是一样的。\n\n​\t平时习惯性使用第一种方式。\n\n# 3.数组的静态初始化\n\n### 完整格式：\n\n​\t数据类型[] 数组名 = new 数据类型[]{元素1，元素2，元素3，元素4...};\n\n比如：\n\n​\tint[] arr = new int[]{11,22,33};\n\n​\tdouble[] arr = new double[]{1.1,1.2,1.3};\n\n### 格式详解：\n\n​\t数据类型：限定了数组以后能存什么类型的数据。\n\n​\t方括号：表示现在定义的是一个数组。\n\n​\t数组名：其实就是名字而已，方便以后使用，在起名字的时候遵循小驼峰命名法。\n\n​\t\t\tarr   namesArr\n\n​\tnew：就是给数组在内存中开辟了一个空间。\n\n​\t数据类型：限定了数组以后能存什么类型的数据。\n\n​\t\t\t  前面和后面的数据类型一定要保持一致。\n\n​\t\t\tint[] arr = new double[]{11,22,33};//错误写法\n\n​\t方括号：表示现在定义的是一个数组。\n\n​\t大括号：表示数组里面的元素。元素也就是存入到数组中的数据。\n\n​\t\t\t多个元素之间，一定要用逗号隔开。\n\n### 注意点：\n\n* 等号前后的数据类型必须保持一致。\n* 数组一旦创建之后，长度不能发生变化。\n\n### 简化格式:\n\n​\t数据类型[] 数组名 = {元素1，元素2，元素3，元素4...};\n\n比如：\n\n​\tint[] array = {1,2,3,4,5};\n\n​\tdouble[] array = {1.1,1.2,1.3};\n\n### 练习1：\n\n定义数组存储5个学生的年龄。\n\n```java\n1.给数组限定什么类型？ int\n2.利用静态初始化完成创建并添加元素\nint[] agesArr = new int[]{18,19,20,21,22};\nint[] agesArr = {18,19,20,21,22};\n```\n\n### 练习2：\n\n定义数组存储3个学生的姓名。\n\n```java\n1.给数组限定什么类型？ String\n2.利用静态初始化完成创建并添加元素\nString[] namesArr = new String[]{\"zhangsan\",\"lisi\",\"wangwu\"};\nString[] namesArr = {\"zhangsan\",\"lisi\",\"wangwu\"};\n```\n\n### 练习3：\n\n定义数组存储4个学生的身高。\n\n```java\n1.给数组限定什么类型？ double\n2.利用静态初始化完成创建并添加元素\ndouble[] heightsArr = new double[]{1.85,1.82,1.78,1.65};\ndouble[] heightsArr = {1.85,1.82,1.78,1.65};\n```\n\n# 4.地址值\n\n```java\nint[] arr = {1,2,3,4,5};\nSystem.out.println(arr);//[I@6d03e736\n\ndouble[] arr2 = {1.1,2.2,3.3};\nSystem.out.println(arr2);//[D@568db2f2\n```\n\n打印数组的时候，实际出现的是数组的地址值。\n\n数组的地址值：就表示数组在内存中的位置。\n\n以[I@6d03e736为例：\n\n[ ：表示现在打印的是一个数组。\n\nI：表示现在打印的数组是int类型的。\n\n@：仅仅是一个间隔符号而已。\n\n6d03e736：就是数组在内存中真正的地址值。（十六进制的）\n\n但是，我们习惯性会把[I@6d03e736这个整体称之为数组的地址值。\n\n地址值对于我们来京，作用不大，简单了解。\n\n# 5.数组元素访问\n\n### 格式：\n\n​\t数组名[索引];\n\n### 作用：\n\n* 获取数组中对应索引上的值\n\n* 修改数组中对应索引上的值\n\n  一旦修改之后，原来的值就会被覆盖了。\n\n### 代码示例：\n\n```java\npublic class ArrDemo2 {\n    /*\n\n        数组中元素访问的格式：\n                数组名[索引];\n\n         作用：\n            1.获取指定索引上对应的元素\n            2.修改指定索引上对应的元素\n\n\n    */\n    public static void main(String[] args) {\n       int[] arr = {1,2,3,4,5};\n       //需求1：获取arr数组中，3索引上的值\n        int number = arr[3];\n        System.out.println(number);\n        System.out.println(arr[3]);\n\n       //需求2：将arr数组中，3索引上的值修改为10\n            arr[3] = 10;\n        System.out.println(\"修改之后为:\" + arr[3]);\n\n    }\n}\n```\n\n# 6.索引\n\n​\t也叫角标、下标\n\n​\t就是数组容器中每一个小格子对应的编号。\n\n### 索引的特点：\n\n* 索引一定是从0开始的。\n* 连续不间断。\n* 逐个+1增长。\n\n# 7.数组的遍历\n\n遍历：就是把数组里面所有的内容一个一个全部取出来。\n\n数组的长度：数组名.length;\n\n通用代码：\n\n```java\nfor(int i = 0; i < arr.length; i++){\n    //在循环的过程中，i依次表示数组中的每一个索引\n    sout(arr[i]);//就可以把数组里面的每一个元素都获取出来，并打印在控制台上了。\n}\n```\n\n# 8.数组的动态初始化\n\n### 格式：\n\n​\t数据类型[] 数组名 = new 数据类型[数组的长度];\n\n### 举例：\n\n```java\n//1.定义一个数组，存3个人的年龄，年龄未知\nint[] agesArr = new int[3];\n\n\n//2.定义一个数组，存班级10名学生的考试成绩，考试成绩暂时未知，考完才知道。\nint[] scoresArr = new int[10];\n```\n\n### 数组的默认初始化值：\n\n整数类型：0\n\n小数类型：0.0\n\n布尔类型：false\n\n字符类型：'\\u0000'\n\n引用类型：null\n\n# 9.数组两种初始化方式的区别\n\n静态初始化：int[] arr = {1,2,3,4,5};\n\n动态初始化：int[] arr = new int[3];\n\n静态初始化：手动指定数组的元素，系统会根据元素的个数，计算出数组的长度。\n\n动态初始化：手动指定数组长度，由系统给出默认初始化值。\n\n### 使用场景：\n\n只明确元素个数，但是不明确具体的数据，推荐使用动态初始化。\n\n已经明确了要操作的所有数据，推荐使用静态初始化。\n\n### 举例：\n\n* 使用数组来存储键盘录入的5个整数。\n\n  int[] arr = new int[5];\n\n* 将全班的学生成绩存入数组中，已知学生成绩为：66,77,88,99,100\n\n  int[] arr = new int[5];\n\n  arr[0] = 66;\n\n  arr[1] = 77;\n\n  ... 虽然可以实现，但是太麻烦了。\n\n  建议使用静态初始化：int[] arr = {66,77,88,99,100};\n\n# 10.数组常见问题\n\n当访问了数组中不存在的索引，就会引发索引越界异常。\n\n避免：\n\n​\t针对于任意一个数组，索引的范围：\n   \t最小索引：0\n   \t最大索引：数组的长度 - 1\n           \t\t    数组名.length - 1\n\n```java\npublic class ArrDemo6 {\n    public static void main(String[] args) {\n       int[] arr = {1,2,3,4,5,5,5,5,5};\n        //用索引来访问数组中的元素\n        System.out.println(arr[1]);\n        System.out.println(arr[10]);//ArrayIndexOutOfBoundsException\n\n    }\n}\n```\n\n# 11.数组的练习\n\n## 练习1：求和\n\n需求：定义一个数组，存储1,2,3,4,5\n\n遍历数组得到每一个元素，求数组里面所有的数据和\n\n代码示例：\n\n```java\n/*定义一个数组，存储1,2,3,4,5\n        遍历数组得到每一个元素，求数组里面所有的数据和*/\n\n\n//分析：\n//1.定义一个数组，并添加数据1,2,3,4,5\nint[] arr = {1,2,3,4,5};\n\n//求和变量\nint sum = 0;\n//2.遍历数组得到每一个数据，累加求和\nfor (int i = 0; i < arr.length; i++) {\n    //i 依次表示数组里面的每一个索引\n    //arr[i] 依次表示数组里面的每一个元素\n    sum = sum + arr[i];\n}\n\n//当循环结束之后，sum的值就是累加之后的结果\nSystem.out.println(sum);\n```\n\n## 练习2：统计个数\n\n需求：定义一个数组，存储1,2,3,4,5,6,7,8,9,10\n\n遍历数组得到每一个元素，统计数组里面一共有多少个能被3整除的数字\n\n代码示例：\n\n```java\n//分析：\n//1.定义一个数组 存储1,2,3,4,5,6,7,8,9,10\nint[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n//定义一个变量，用来统计次数\nint count = 0;\n//2.遍历数组得到每一个元素\nfor (int i = 0; i < arr.length; i++) {\n    //i 表示数组里面的每一个索引\n    //arr[i] 表示数组里面的每一个元素\n    //3.判断当前的元素是否为3的倍数，如果是那么统计变量就需要自增一次。\n    if(arr[i] % 3 == 0){\n        // System.out.println(arr[i]);\n        count++;\n    }\n}\n//当循环结束之后，就表示数组里面所有的数字都判断完毕了，直接打印count即可\nSystem.out.println(\"数组中能被3整除的数字有\" + count + \"个\");\n```\n\n## 练习3：变化数据\n\n需求：\n\n定义一个数组，存储1,2,3,4,5,6,7,8,9,10\n\n遍历数组得到每一个元素。\n\n要求：\n\n1，如果是奇数，则将当前数字扩大两倍\n\n2，如果是偶数，则将当前数字变成二分之一\n\n代码示例：\n\n```java\n//分析：\n//1.定义一个数组，存1,2,3,4,5,6,7,8,9,10\nint[] arr = {1,2,3,4,5,6,7,8,9,10};\n//2.遍历数组得到每一个元素\nfor (int i = 0; i < arr.length; i++) {\n    //i 依次表示数组里面的每一个索引\n    //arr[i] 依次表示数组里面的每一个元素\n    //3.对每一个元素进行判断\n    if(arr[i] % 2 == 0){\n        //偶数 变成二分之一\n        arr[i] = arr[i] / 2;\n    }else{\n        //奇数 扩大两倍\n        arr[i] = arr[i] * 2;\n    }\n}\n\n//遍历数组\n//一个循环尽量只做一件事情。\nfor (int i = 0; i < arr.length; i++) {\n    System.out.println(arr[i]);\n}\n```\n\n## 练习4：求最值\n\n需求：求数组中的最大值\n\n代码示例：\n\n```java\n//定义数组求最大值：33,5,22,44,55\n\n//扩展问题：\n//1.根据求最大值的思路，自己改写一下求最小智\n//2.为什么max要记录为arr[0],默认值不能为0吗？\n//不能写0\n//max的初始化值一定要是数组中的值。\n//3.循环中开始条件一定是0吗？\n//循环的开始条件如果为0，那么第一次循环的时候是自己跟自己比了一下，对结果没有任何影响，但是效率偏低\n//为了提高效率，减少一次循环的次数，循环开始条件可以写1.\n\n\n//1.定义数组用来存储5个值\nint[] arr = {33,5,22,44,55};\n//2.定义一个变量max用来存储最大值\n//临时认为0索引的数据是最大的\nint max = arr[0];\n//3.循环获取数组中的每一个元素\n//拿着每一个元素跟max进行比较\nfor (int i = 1; i < arr.length; i++) {\n    //i 索引  arr[i] 元素\n    if(arr[i] > max){\n        max = arr[i];\n    }\n}\n//4.当循环结束之后，max记录的就是数组中的最大值\nSystem.out.println(max);//55\n```\n\n## 练习5：统计个数\n\n需求：生成10个1~100之间的随机数存入数组。\n\n1）求出所有数据的和\n\n2）求所有数据的平均数\n\n3）统计有多少个数据比平均值小\n\n代码示例：\n\n```java\n//分析：\n//1.定义数组\nint[] arr = new int[10];\n//2.把随机数存入到数组当中\nRandom r = new Random();\n\nfor (int i = 0; i < arr.length; i++) {\n    //每循环一次，就会生成一个新的随机数\n    int number = r.nextInt(100) + 1;\n    //把生成的随机数添加的数组当中\n    //数组名[索引] = 数据;\n    arr[i] = number;\n}\n\n\n// 1）求出所有数据的和\n//定义求和变量\nint sum = 0;\nfor (int i = 0; i < arr.length; i++) {\n    //循环得到每一个元素\n    //并把元素累加到sum当中\n    sum = sum + arr[i];\n}\nSystem.out.println(\"数组中所有数据的和为：\" + sum);\n\n\n//2）求所有数据的平均数\nint avg = sum / arr.length;\nSystem.out.println(\"数组中平均数为：\" + avg);\n\n\n\n//3）统计有多少个数据比平均值小\nint count = 0;\nfor (int i = 0; i < arr.length; i++) {\n    if(arr[i] < avg){\n        count++;\n    }\n}\n\n//当循环结束之后，就表示我已经找到了所有的比平均数小的数据\nSystem.out.println(\"在数组中，一共有\" + count + \"个数据，比平均数小\");\n\n\n\n//遍历数组，验证答案\nfor (int i = 0; i < arr.length; i++) {\n    System.out.print(arr[i] + \" \");\n}\n```\n\n## 练习6：交换数据\n\n需求：定义一个数组，存入1,2,3,4,5。按照要求交换索引对应的元素。\n\n交换前：1,2,3,4,5\n\n交换后：5,2,3,4,1\n\n代码示例：\n\n```java\n//1.定义数组存储数据\nint[] arr = {1,2,3,4,5};\n//2.利用循环去交换数据\nfor(int i = 0,j = arr.length - 1; i < j; i++,j--){\n    //交换变量i和变量j指向的元素\n    int temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n}\n//当循环结束之后，那么数组中的数据就实现了头尾交换\nfor (int i = 0; i < arr.length; i++) {\n    System.out.print(arr[i] + \" \");\n}\n```\n\n## 练习7：打乱数据 \n\n需求：定义一个数组，存入1~5。要求打乱数组中所有数据的顺序。\n\n代码示例：\n\n```java\n//1.定义数组存储1~5\nint[] arr = {1, 2, 3, 4, 5};\n//2.循环遍历数组，从0索引开始打乱数据的顺序\nRandom r = new Random();\nfor (int i = 0; i < arr.length; i++) {\n    //生成一个随机索引\n    int randomIndex = r.nextInt(arr.length);\n    //拿着随机索引指向的元素 跟 i 指向的元素进行交换\n    int temp = arr[i];\n    arr[i] = arr[randomIndex];\n    arr[randomIndex] = temp;\n}\n//当循环结束之后，那么数组中所有的数据已经打乱顺序了\nfor (int i = 0; i < arr.length; i++) {\n    System.out.print(arr[i] + \" \");\n}\n```\n\n","source":"_posts/day05-数组.md","raw":"---\ntitle: day05-数组\ndate: 2024-12-12 16:39:00\ntags:\n    - 数组\ncategories: java\nphotos: /tupian/j05.jpg\n---\n# 1.数组\n\n### 概念：\n\n​\t指的是一种容器，可以同来存储同种数据类型的多个值。\n\n​\t但是数组容器在存储数据的时候，需要结合隐式转换考虑。\n\n比如：\n\n​\t定义了一个int类型的数组。那么boolean。double类型的数据是不能存到这个数组中的，\n\n​\t但是byte类型，short类型，int类型的数据是可以存到这个数组里面的。\n\n建议：\n\n​\t容器的类，和存储的数据类型保持一致。\n\n举例：\n\n​\t整数1 2 3 4 56 就可以使用int类型的数组来存储。\n\n​\t小数1.1 1.2 1.3 1.4 就可以使用double类型的数组来存储。\n\n​\t字符串\"aaa\"  \"bbb\"  \"ccc\" 就可以使用String类型的数组来存储。\n\n# 2.数组的定义\n\n### 格式一：\n\n​\t数据类型 [] 数组名\n\n比如：int [] array\n\n### 格式二：\n\n​\t数据类型  数组名 []\n\n比如： int array []\n\n### 详解：\n\n数据类型：限定了数组以后能存什么类型的数据。\n\n方括号：表示现在定义的是一个数组。\n\n数组名：就是一个名字而已，方便以后使用。\n\n### 注意点：\n\n​\t方法括号跟数组名，谁写在前面，谁写在后面都是一样的。\n\n​\t平时习惯性使用第一种方式。\n\n# 3.数组的静态初始化\n\n### 完整格式：\n\n​\t数据类型[] 数组名 = new 数据类型[]{元素1，元素2，元素3，元素4...};\n\n比如：\n\n​\tint[] arr = new int[]{11,22,33};\n\n​\tdouble[] arr = new double[]{1.1,1.2,1.3};\n\n### 格式详解：\n\n​\t数据类型：限定了数组以后能存什么类型的数据。\n\n​\t方括号：表示现在定义的是一个数组。\n\n​\t数组名：其实就是名字而已，方便以后使用，在起名字的时候遵循小驼峰命名法。\n\n​\t\t\tarr   namesArr\n\n​\tnew：就是给数组在内存中开辟了一个空间。\n\n​\t数据类型：限定了数组以后能存什么类型的数据。\n\n​\t\t\t  前面和后面的数据类型一定要保持一致。\n\n​\t\t\tint[] arr = new double[]{11,22,33};//错误写法\n\n​\t方括号：表示现在定义的是一个数组。\n\n​\t大括号：表示数组里面的元素。元素也就是存入到数组中的数据。\n\n​\t\t\t多个元素之间，一定要用逗号隔开。\n\n### 注意点：\n\n* 等号前后的数据类型必须保持一致。\n* 数组一旦创建之后，长度不能发生变化。\n\n### 简化格式:\n\n​\t数据类型[] 数组名 = {元素1，元素2，元素3，元素4...};\n\n比如：\n\n​\tint[] array = {1,2,3,4,5};\n\n​\tdouble[] array = {1.1,1.2,1.3};\n\n### 练习1：\n\n定义数组存储5个学生的年龄。\n\n```java\n1.给数组限定什么类型？ int\n2.利用静态初始化完成创建并添加元素\nint[] agesArr = new int[]{18,19,20,21,22};\nint[] agesArr = {18,19,20,21,22};\n```\n\n### 练习2：\n\n定义数组存储3个学生的姓名。\n\n```java\n1.给数组限定什么类型？ String\n2.利用静态初始化完成创建并添加元素\nString[] namesArr = new String[]{\"zhangsan\",\"lisi\",\"wangwu\"};\nString[] namesArr = {\"zhangsan\",\"lisi\",\"wangwu\"};\n```\n\n### 练习3：\n\n定义数组存储4个学生的身高。\n\n```java\n1.给数组限定什么类型？ double\n2.利用静态初始化完成创建并添加元素\ndouble[] heightsArr = new double[]{1.85,1.82,1.78,1.65};\ndouble[] heightsArr = {1.85,1.82,1.78,1.65};\n```\n\n# 4.地址值\n\n```java\nint[] arr = {1,2,3,4,5};\nSystem.out.println(arr);//[I@6d03e736\n\ndouble[] arr2 = {1.1,2.2,3.3};\nSystem.out.println(arr2);//[D@568db2f2\n```\n\n打印数组的时候，实际出现的是数组的地址值。\n\n数组的地址值：就表示数组在内存中的位置。\n\n以[I@6d03e736为例：\n\n[ ：表示现在打印的是一个数组。\n\nI：表示现在打印的数组是int类型的。\n\n@：仅仅是一个间隔符号而已。\n\n6d03e736：就是数组在内存中真正的地址值。（十六进制的）\n\n但是，我们习惯性会把[I@6d03e736这个整体称之为数组的地址值。\n\n地址值对于我们来京，作用不大，简单了解。\n\n# 5.数组元素访问\n\n### 格式：\n\n​\t数组名[索引];\n\n### 作用：\n\n* 获取数组中对应索引上的值\n\n* 修改数组中对应索引上的值\n\n  一旦修改之后，原来的值就会被覆盖了。\n\n### 代码示例：\n\n```java\npublic class ArrDemo2 {\n    /*\n\n        数组中元素访问的格式：\n                数组名[索引];\n\n         作用：\n            1.获取指定索引上对应的元素\n            2.修改指定索引上对应的元素\n\n\n    */\n    public static void main(String[] args) {\n       int[] arr = {1,2,3,4,5};\n       //需求1：获取arr数组中，3索引上的值\n        int number = arr[3];\n        System.out.println(number);\n        System.out.println(arr[3]);\n\n       //需求2：将arr数组中，3索引上的值修改为10\n            arr[3] = 10;\n        System.out.println(\"修改之后为:\" + arr[3]);\n\n    }\n}\n```\n\n# 6.索引\n\n​\t也叫角标、下标\n\n​\t就是数组容器中每一个小格子对应的编号。\n\n### 索引的特点：\n\n* 索引一定是从0开始的。\n* 连续不间断。\n* 逐个+1增长。\n\n# 7.数组的遍历\n\n遍历：就是把数组里面所有的内容一个一个全部取出来。\n\n数组的长度：数组名.length;\n\n通用代码：\n\n```java\nfor(int i = 0; i < arr.length; i++){\n    //在循环的过程中，i依次表示数组中的每一个索引\n    sout(arr[i]);//就可以把数组里面的每一个元素都获取出来，并打印在控制台上了。\n}\n```\n\n# 8.数组的动态初始化\n\n### 格式：\n\n​\t数据类型[] 数组名 = new 数据类型[数组的长度];\n\n### 举例：\n\n```java\n//1.定义一个数组，存3个人的年龄，年龄未知\nint[] agesArr = new int[3];\n\n\n//2.定义一个数组，存班级10名学生的考试成绩，考试成绩暂时未知，考完才知道。\nint[] scoresArr = new int[10];\n```\n\n### 数组的默认初始化值：\n\n整数类型：0\n\n小数类型：0.0\n\n布尔类型：false\n\n字符类型：'\\u0000'\n\n引用类型：null\n\n# 9.数组两种初始化方式的区别\n\n静态初始化：int[] arr = {1,2,3,4,5};\n\n动态初始化：int[] arr = new int[3];\n\n静态初始化：手动指定数组的元素，系统会根据元素的个数，计算出数组的长度。\n\n动态初始化：手动指定数组长度，由系统给出默认初始化值。\n\n### 使用场景：\n\n只明确元素个数，但是不明确具体的数据，推荐使用动态初始化。\n\n已经明确了要操作的所有数据，推荐使用静态初始化。\n\n### 举例：\n\n* 使用数组来存储键盘录入的5个整数。\n\n  int[] arr = new int[5];\n\n* 将全班的学生成绩存入数组中，已知学生成绩为：66,77,88,99,100\n\n  int[] arr = new int[5];\n\n  arr[0] = 66;\n\n  arr[1] = 77;\n\n  ... 虽然可以实现，但是太麻烦了。\n\n  建议使用静态初始化：int[] arr = {66,77,88,99,100};\n\n# 10.数组常见问题\n\n当访问了数组中不存在的索引，就会引发索引越界异常。\n\n避免：\n\n​\t针对于任意一个数组，索引的范围：\n   \t最小索引：0\n   \t最大索引：数组的长度 - 1\n           \t\t    数组名.length - 1\n\n```java\npublic class ArrDemo6 {\n    public static void main(String[] args) {\n       int[] arr = {1,2,3,4,5,5,5,5,5};\n        //用索引来访问数组中的元素\n        System.out.println(arr[1]);\n        System.out.println(arr[10]);//ArrayIndexOutOfBoundsException\n\n    }\n}\n```\n\n# 11.数组的练习\n\n## 练习1：求和\n\n需求：定义一个数组，存储1,2,3,4,5\n\n遍历数组得到每一个元素，求数组里面所有的数据和\n\n代码示例：\n\n```java\n/*定义一个数组，存储1,2,3,4,5\n        遍历数组得到每一个元素，求数组里面所有的数据和*/\n\n\n//分析：\n//1.定义一个数组，并添加数据1,2,3,4,5\nint[] arr = {1,2,3,4,5};\n\n//求和变量\nint sum = 0;\n//2.遍历数组得到每一个数据，累加求和\nfor (int i = 0; i < arr.length; i++) {\n    //i 依次表示数组里面的每一个索引\n    //arr[i] 依次表示数组里面的每一个元素\n    sum = sum + arr[i];\n}\n\n//当循环结束之后，sum的值就是累加之后的结果\nSystem.out.println(sum);\n```\n\n## 练习2：统计个数\n\n需求：定义一个数组，存储1,2,3,4,5,6,7,8,9,10\n\n遍历数组得到每一个元素，统计数组里面一共有多少个能被3整除的数字\n\n代码示例：\n\n```java\n//分析：\n//1.定义一个数组 存储1,2,3,4,5,6,7,8,9,10\nint[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n//定义一个变量，用来统计次数\nint count = 0;\n//2.遍历数组得到每一个元素\nfor (int i = 0; i < arr.length; i++) {\n    //i 表示数组里面的每一个索引\n    //arr[i] 表示数组里面的每一个元素\n    //3.判断当前的元素是否为3的倍数，如果是那么统计变量就需要自增一次。\n    if(arr[i] % 3 == 0){\n        // System.out.println(arr[i]);\n        count++;\n    }\n}\n//当循环结束之后，就表示数组里面所有的数字都判断完毕了，直接打印count即可\nSystem.out.println(\"数组中能被3整除的数字有\" + count + \"个\");\n```\n\n## 练习3：变化数据\n\n需求：\n\n定义一个数组，存储1,2,3,4,5,6,7,8,9,10\n\n遍历数组得到每一个元素。\n\n要求：\n\n1，如果是奇数，则将当前数字扩大两倍\n\n2，如果是偶数，则将当前数字变成二分之一\n\n代码示例：\n\n```java\n//分析：\n//1.定义一个数组，存1,2,3,4,5,6,7,8,9,10\nint[] arr = {1,2,3,4,5,6,7,8,9,10};\n//2.遍历数组得到每一个元素\nfor (int i = 0; i < arr.length; i++) {\n    //i 依次表示数组里面的每一个索引\n    //arr[i] 依次表示数组里面的每一个元素\n    //3.对每一个元素进行判断\n    if(arr[i] % 2 == 0){\n        //偶数 变成二分之一\n        arr[i] = arr[i] / 2;\n    }else{\n        //奇数 扩大两倍\n        arr[i] = arr[i] * 2;\n    }\n}\n\n//遍历数组\n//一个循环尽量只做一件事情。\nfor (int i = 0; i < arr.length; i++) {\n    System.out.println(arr[i]);\n}\n```\n\n## 练习4：求最值\n\n需求：求数组中的最大值\n\n代码示例：\n\n```java\n//定义数组求最大值：33,5,22,44,55\n\n//扩展问题：\n//1.根据求最大值的思路，自己改写一下求最小智\n//2.为什么max要记录为arr[0],默认值不能为0吗？\n//不能写0\n//max的初始化值一定要是数组中的值。\n//3.循环中开始条件一定是0吗？\n//循环的开始条件如果为0，那么第一次循环的时候是自己跟自己比了一下，对结果没有任何影响，但是效率偏低\n//为了提高效率，减少一次循环的次数，循环开始条件可以写1.\n\n\n//1.定义数组用来存储5个值\nint[] arr = {33,5,22,44,55};\n//2.定义一个变量max用来存储最大值\n//临时认为0索引的数据是最大的\nint max = arr[0];\n//3.循环获取数组中的每一个元素\n//拿着每一个元素跟max进行比较\nfor (int i = 1; i < arr.length; i++) {\n    //i 索引  arr[i] 元素\n    if(arr[i] > max){\n        max = arr[i];\n    }\n}\n//4.当循环结束之后，max记录的就是数组中的最大值\nSystem.out.println(max);//55\n```\n\n## 练习5：统计个数\n\n需求：生成10个1~100之间的随机数存入数组。\n\n1）求出所有数据的和\n\n2）求所有数据的平均数\n\n3）统计有多少个数据比平均值小\n\n代码示例：\n\n```java\n//分析：\n//1.定义数组\nint[] arr = new int[10];\n//2.把随机数存入到数组当中\nRandom r = new Random();\n\nfor (int i = 0; i < arr.length; i++) {\n    //每循环一次，就会生成一个新的随机数\n    int number = r.nextInt(100) + 1;\n    //把生成的随机数添加的数组当中\n    //数组名[索引] = 数据;\n    arr[i] = number;\n}\n\n\n// 1）求出所有数据的和\n//定义求和变量\nint sum = 0;\nfor (int i = 0; i < arr.length; i++) {\n    //循环得到每一个元素\n    //并把元素累加到sum当中\n    sum = sum + arr[i];\n}\nSystem.out.println(\"数组中所有数据的和为：\" + sum);\n\n\n//2）求所有数据的平均数\nint avg = sum / arr.length;\nSystem.out.println(\"数组中平均数为：\" + avg);\n\n\n\n//3）统计有多少个数据比平均值小\nint count = 0;\nfor (int i = 0; i < arr.length; i++) {\n    if(arr[i] < avg){\n        count++;\n    }\n}\n\n//当循环结束之后，就表示我已经找到了所有的比平均数小的数据\nSystem.out.println(\"在数组中，一共有\" + count + \"个数据，比平均数小\");\n\n\n\n//遍历数组，验证答案\nfor (int i = 0; i < arr.length; i++) {\n    System.out.print(arr[i] + \" \");\n}\n```\n\n## 练习6：交换数据\n\n需求：定义一个数组，存入1,2,3,4,5。按照要求交换索引对应的元素。\n\n交换前：1,2,3,4,5\n\n交换后：5,2,3,4,1\n\n代码示例：\n\n```java\n//1.定义数组存储数据\nint[] arr = {1,2,3,4,5};\n//2.利用循环去交换数据\nfor(int i = 0,j = arr.length - 1; i < j; i++,j--){\n    //交换变量i和变量j指向的元素\n    int temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n}\n//当循环结束之后，那么数组中的数据就实现了头尾交换\nfor (int i = 0; i < arr.length; i++) {\n    System.out.print(arr[i] + \" \");\n}\n```\n\n## 练习7：打乱数据 \n\n需求：定义一个数组，存入1~5。要求打乱数组中所有数据的顺序。\n\n代码示例：\n\n```java\n//1.定义数组存储1~5\nint[] arr = {1, 2, 3, 4, 5};\n//2.循环遍历数组，从0索引开始打乱数据的顺序\nRandom r = new Random();\nfor (int i = 0; i < arr.length; i++) {\n    //生成一个随机索引\n    int randomIndex = r.nextInt(arr.length);\n    //拿着随机索引指向的元素 跟 i 指向的元素进行交换\n    int temp = arr[i];\n    arr[i] = arr[randomIndex];\n    arr[randomIndex] = temp;\n}\n//当循环结束之后，那么数组中所有的数据已经打乱顺序了\nfor (int i = 0; i < arr.length; i++) {\n    System.out.print(arr[i] + \" \");\n}\n```\n\n","slug":"day05-数组","published":1,"updated":"2024-12-12T08:49:02.268Z","comments":1,"layout":"post","_id":"cm4ld1o88000hqsto5s9vb5py","content":"<h1 id=\"1-数组\"><a href=\"#1-数组\" class=\"headerlink\" title=\"1.数组\"></a>1.数组</h1><h3 id=\"概念：\"><a href=\"#概念：\" class=\"headerlink\" title=\"概念：\"></a>概念：</h3><p>​\t指的是一种容器，可以同来存储同种数据类型的多个值。</p>\n<p>​\t但是数组容器在存储数据的时候，需要结合隐式转换考虑。</p>\n<p>比如：</p>\n<p>​\t定义了一个int类型的数组。那么boolean。double类型的数据是不能存到这个数组中的，</p>\n<p>​\t但是byte类型，short类型，int类型的数据是可以存到这个数组里面的。</p>\n<p>建议：</p>\n<p>​\t容器的类，和存储的数据类型保持一致。</p>\n<p>举例：</p>\n<p>​\t整数1 2 3 4 56 就可以使用int类型的数组来存储。</p>\n<p>​\t小数1.1 1.2 1.3 1.4 就可以使用double类型的数组来存储。</p>\n<p>​\t字符串”aaa”  “bbb”  “ccc” 就可以使用String类型的数组来存储。</p>\n<h1 id=\"2-数组的定义\"><a href=\"#2-数组的定义\" class=\"headerlink\" title=\"2.数组的定义\"></a>2.数组的定义</h1><h3 id=\"格式一：\"><a href=\"#格式一：\" class=\"headerlink\" title=\"格式一：\"></a>格式一：</h3><p>​\t数据类型 [] 数组名</p>\n<p>比如：int [] array</p>\n<h3 id=\"格式二：\"><a href=\"#格式二：\" class=\"headerlink\" title=\"格式二：\"></a>格式二：</h3><p>​\t数据类型  数组名 []</p>\n<p>比如： int array []</p>\n<h3 id=\"详解：\"><a href=\"#详解：\" class=\"headerlink\" title=\"详解：\"></a>详解：</h3><p>数据类型：限定了数组以后能存什么类型的数据。</p>\n<p>方括号：表示现在定义的是一个数组。</p>\n<p>数组名：就是一个名字而已，方便以后使用。</p>\n<h3 id=\"注意点：\"><a href=\"#注意点：\" class=\"headerlink\" title=\"注意点：\"></a>注意点：</h3><p>​\t方法括号跟数组名，谁写在前面，谁写在后面都是一样的。</p>\n<p>​\t平时习惯性使用第一种方式。</p>\n<h1 id=\"3-数组的静态初始化\"><a href=\"#3-数组的静态初始化\" class=\"headerlink\" title=\"3.数组的静态初始化\"></a>3.数组的静态初始化</h1><h3 id=\"完整格式：\"><a href=\"#完整格式：\" class=\"headerlink\" title=\"完整格式：\"></a>完整格式：</h3><p>​\t数据类型[] 数组名 &#x3D; new 数据类型[]{元素1，元素2，元素3，元素4…};</p>\n<p>比如：</p>\n<p>​\tint[] arr &#x3D; new int[]{11,22,33};</p>\n<p>​\tdouble[] arr &#x3D; new double[]{1.1,1.2,1.3};</p>\n<h3 id=\"格式详解：\"><a href=\"#格式详解：\" class=\"headerlink\" title=\"格式详解：\"></a>格式详解：</h3><p>​\t数据类型：限定了数组以后能存什么类型的数据。</p>\n<p>​\t方括号：表示现在定义的是一个数组。</p>\n<p>​\t数组名：其实就是名字而已，方便以后使用，在起名字的时候遵循小驼峰命名法。</p>\n<p>​\t\t\tarr   namesArr</p>\n<p>​\tnew：就是给数组在内存中开辟了一个空间。</p>\n<p>​\t数据类型：限定了数组以后能存什么类型的数据。</p>\n<p>​\t\t\t  前面和后面的数据类型一定要保持一致。</p>\n<p>​\t\t\tint[] arr &#x3D; new double[]{11,22,33};&#x2F;&#x2F;错误写法</p>\n<p>​\t方括号：表示现在定义的是一个数组。</p>\n<p>​\t大括号：表示数组里面的元素。元素也就是存入到数组中的数据。</p>\n<p>​\t\t\t多个元素之间，一定要用逗号隔开。</p>\n<h3 id=\"注意点：-1\"><a href=\"#注意点：-1\" class=\"headerlink\" title=\"注意点：\"></a>注意点：</h3><ul>\n<li>等号前后的数据类型必须保持一致。</li>\n<li>数组一旦创建之后，长度不能发生变化。</li>\n</ul>\n<h3 id=\"简化格式\"><a href=\"#简化格式\" class=\"headerlink\" title=\"简化格式:\"></a>简化格式:</h3><p>​\t数据类型[] 数组名 &#x3D; {元素1，元素2，元素3，元素4…};</p>\n<p>比如：</p>\n<p>​\tint[] array &#x3D; {1,2,3,4,5};</p>\n<p>​\tdouble[] array &#x3D; {1.1,1.2,1.3};</p>\n<h3 id=\"练习1：\"><a href=\"#练习1：\" class=\"headerlink\" title=\"练习1：\"></a>练习1：</h3><p>定义数组存储5个学生的年龄。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>给数组限定什么类型？ <span class=\"type\">int</span></span><br><span class=\"line\"><span class=\"number\">2.</span>利用静态初始化完成创建并添加元素</span><br><span class=\"line\"><span class=\"type\">int</span>[] agesArr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;<span class=\"number\">18</span>,<span class=\"number\">19</span>,<span class=\"number\">20</span>,<span class=\"number\">21</span>,<span class=\"number\">22</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">int</span>[] agesArr = &#123;<span class=\"number\">18</span>,<span class=\"number\">19</span>,<span class=\"number\">20</span>,<span class=\"number\">21</span>,<span class=\"number\">22</span>&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"练习2：\"><a href=\"#练习2：\" class=\"headerlink\" title=\"练习2：\"></a>练习2：</h3><p>定义数组存储3个学生的姓名。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>给数组限定什么类型？ String</span><br><span class=\"line\"><span class=\"number\">2.</span>利用静态初始化完成创建并添加元素</span><br><span class=\"line\">String[] namesArr = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[]&#123;<span class=\"string\">&quot;zhangsan&quot;</span>,<span class=\"string\">&quot;lisi&quot;</span>,<span class=\"string\">&quot;wangwu&quot;</span>&#125;;</span><br><span class=\"line\">String[] namesArr = &#123;<span class=\"string\">&quot;zhangsan&quot;</span>,<span class=\"string\">&quot;lisi&quot;</span>,<span class=\"string\">&quot;wangwu&quot;</span>&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"练习3：\"><a href=\"#练习3：\" class=\"headerlink\" title=\"练习3：\"></a>练习3：</h3><p>定义数组存储4个学生的身高。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>给数组限定什么类型？ <span class=\"type\">double</span></span><br><span class=\"line\"><span class=\"number\">2.</span>利用静态初始化完成创建并添加元素</span><br><span class=\"line\"><span class=\"type\">double</span>[] heightsArr = <span class=\"keyword\">new</span> <span class=\"title class_\">double</span>[]&#123;<span class=\"number\">1.85</span>,<span class=\"number\">1.82</span>,<span class=\"number\">1.78</span>,<span class=\"number\">1.65</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">double</span>[] heightsArr = &#123;<span class=\"number\">1.85</span>,<span class=\"number\">1.82</span>,<span class=\"number\">1.78</span>,<span class=\"number\">1.65</span>&#125;;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"4-地址值\"><a href=\"#4-地址值\" class=\"headerlink\" title=\"4.地址值\"></a>4.地址值</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">System.out.println(arr);<span class=\"comment\">//[I@6d03e736</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">double</span>[] arr2 = &#123;<span class=\"number\">1.1</span>,<span class=\"number\">2.2</span>,<span class=\"number\">3.3</span>&#125;;</span><br><span class=\"line\">System.out.println(arr2);<span class=\"comment\">//[D@568db2f2</span></span><br></pre></td></tr></table></figure>\n\n<p>打印数组的时候，实际出现的是数组的地址值。</p>\n<p>数组的地址值：就表示数组在内存中的位置。</p>\n<p>以[I@6d03e736为例：</p>\n<p>[ ：表示现在打印的是一个数组。</p>\n<p>I：表示现在打印的数组是int类型的。</p>\n<p>@：仅仅是一个间隔符号而已。</p>\n<p>6d03e736：就是数组在内存中真正的地址值。（十六进制的）</p>\n<p>但是，我们习惯性会把[I@6d03e736这个整体称之为数组的地址值。</p>\n<p>地址值对于我们来京，作用不大，简单了解。</p>\n<h1 id=\"5-数组元素访问\"><a href=\"#5-数组元素访问\" class=\"headerlink\" title=\"5.数组元素访问\"></a>5.数组元素访问</h1><h3 id=\"格式：\"><a href=\"#格式：\" class=\"headerlink\" title=\"格式：\"></a>格式：</h3><p>​\t数组名[索引];</p>\n<h3 id=\"作用：\"><a href=\"#作用：\" class=\"headerlink\" title=\"作用：\"></a>作用：</h3><ul>\n<li><p>获取数组中对应索引上的值</p>\n</li>\n<li><p>修改数组中对应索引上的值</p>\n<p>一旦修改之后，原来的值就会被覆盖了。</p>\n</li>\n</ul>\n<h3 id=\"代码示例：\"><a href=\"#代码示例：\" class=\"headerlink\" title=\"代码示例：\"></a>代码示例：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ArrDemo2</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        数组中元素访问的格式：</span></span><br><span class=\"line\"><span class=\"comment\">                数组名[索引];</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">         作用：</span></span><br><span class=\"line\"><span class=\"comment\">            1.获取指定索引上对应的元素</span></span><br><span class=\"line\"><span class=\"comment\">            2.修改指定索引上对应的元素</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">       <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">       <span class=\"comment\">//需求1：获取arr数组中，3索引上的值</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> arr[<span class=\"number\">3</span>];</span><br><span class=\"line\">        System.out.println(number);</span><br><span class=\"line\">        System.out.println(arr[<span class=\"number\">3</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">//需求2：将arr数组中，3索引上的值修改为10</span></span><br><span class=\"line\">            arr[<span class=\"number\">3</span>] = <span class=\"number\">10</span>;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;修改之后为:&quot;</span> + arr[<span class=\"number\">3</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"6-索引\"><a href=\"#6-索引\" class=\"headerlink\" title=\"6.索引\"></a>6.索引</h1><p>​\t也叫角标、下标</p>\n<p>​\t就是数组容器中每一个小格子对应的编号。</p>\n<h3 id=\"索引的特点：\"><a href=\"#索引的特点：\" class=\"headerlink\" title=\"索引的特点：\"></a>索引的特点：</h3><ul>\n<li>索引一定是从0开始的。</li>\n<li>连续不间断。</li>\n<li>逐个+1增长。</li>\n</ul>\n<h1 id=\"7-数组的遍历\"><a href=\"#7-数组的遍历\" class=\"headerlink\" title=\"7.数组的遍历\"></a>7.数组的遍历</h1><p>遍历：就是把数组里面所有的内容一个一个全部取出来。</p>\n<p>数组的长度：数组名.length;</p>\n<p>通用代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//在循环的过程中，i依次表示数组中的每一个索引</span></span><br><span class=\"line\">    sout(arr[i]);<span class=\"comment\">//就可以把数组里面的每一个元素都获取出来，并打印在控制台上了。</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"8-数组的动态初始化\"><a href=\"#8-数组的动态初始化\" class=\"headerlink\" title=\"8.数组的动态初始化\"></a>8.数组的动态初始化</h1><h3 id=\"格式：-1\"><a href=\"#格式：-1\" class=\"headerlink\" title=\"格式：\"></a>格式：</h3><p>​\t数据类型[] 数组名 &#x3D; new 数据类型[数组的长度];</p>\n<h3 id=\"举例：\"><a href=\"#举例：\" class=\"headerlink\" title=\"举例：\"></a>举例：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.定义一个数组，存3个人的年龄，年龄未知</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] agesArr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.定义一个数组，存班级10名学生的考试成绩，考试成绩暂时未知，考完才知道。</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] scoresArr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">10</span>];</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数组的默认初始化值：\"><a href=\"#数组的默认初始化值：\" class=\"headerlink\" title=\"数组的默认初始化值：\"></a>数组的默认初始化值：</h3><p>整数类型：0</p>\n<p>小数类型：0.0</p>\n<p>布尔类型：false</p>\n<p>字符类型：’\\u0000’</p>\n<p>引用类型：null</p>\n<h1 id=\"9-数组两种初始化方式的区别\"><a href=\"#9-数组两种初始化方式的区别\" class=\"headerlink\" title=\"9.数组两种初始化方式的区别\"></a>9.数组两种初始化方式的区别</h1><p>静态初始化：int[] arr &#x3D; {1,2,3,4,5};</p>\n<p>动态初始化：int[] arr &#x3D; new int[3];</p>\n<p>静态初始化：手动指定数组的元素，系统会根据元素的个数，计算出数组的长度。</p>\n<p>动态初始化：手动指定数组长度，由系统给出默认初始化值。</p>\n<h3 id=\"使用场景：\"><a href=\"#使用场景：\" class=\"headerlink\" title=\"使用场景：\"></a>使用场景：</h3><p>只明确元素个数，但是不明确具体的数据，推荐使用动态初始化。</p>\n<p>已经明确了要操作的所有数据，推荐使用静态初始化。</p>\n<h3 id=\"举例：-1\"><a href=\"#举例：-1\" class=\"headerlink\" title=\"举例：\"></a>举例：</h3><ul>\n<li><p>使用数组来存储键盘录入的5个整数。</p>\n<p>int[] arr &#x3D; new int[5];</p>\n</li>\n<li><p>将全班的学生成绩存入数组中，已知学生成绩为：66,77,88,99,100</p>\n<p>int[] arr &#x3D; new int[5];</p>\n<p>arr[0] &#x3D; 66;</p>\n<p>arr[1] &#x3D; 77;</p>\n<p>… 虽然可以实现，但是太麻烦了。</p>\n<p>建议使用静态初始化：int[] arr &#x3D; {66,77,88,99,100};</p>\n</li>\n</ul>\n<h1 id=\"10-数组常见问题\"><a href=\"#10-数组常见问题\" class=\"headerlink\" title=\"10.数组常见问题\"></a>10.数组常见问题</h1><p>当访问了数组中不存在的索引，就会引发索引越界异常。</p>\n<p>避免：</p>\n<p>​\t针对于任意一个数组，索引的范围：<br>       最小索引：0<br>       最大索引：数组的长度 - 1<br>                       数组名.length - 1</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ArrDemo6</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">       <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">        <span class=\"comment\">//用索引来访问数组中的元素</span></span><br><span class=\"line\">        System.out.println(arr[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        System.out.println(arr[<span class=\"number\">10</span>]);<span class=\"comment\">//ArrayIndexOutOfBoundsException</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"11-数组的练习\"><a href=\"#11-数组的练习\" class=\"headerlink\" title=\"11.数组的练习\"></a>11.数组的练习</h1><h2 id=\"练习1：求和\"><a href=\"#练习1：求和\" class=\"headerlink\" title=\"练习1：求和\"></a>练习1：求和</h2><p>需求：定义一个数组，存储1,2,3,4,5</p>\n<p>遍历数组得到每一个元素，求数组里面所有的数据和</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*定义一个数组，存储1,2,3,4,5</span></span><br><span class=\"line\"><span class=\"comment\">        遍历数组得到每一个元素，求数组里面所有的数据和*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.定义一个数组，并添加数据1,2,3,4,5</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//求和变量</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">//2.遍历数组得到每一个数据，累加求和</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//i 依次表示数组里面的每一个索引</span></span><br><span class=\"line\">    <span class=\"comment\">//arr[i] 依次表示数组里面的每一个元素</span></span><br><span class=\"line\">    sum = sum + arr[i];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//当循环结束之后，sum的值就是累加之后的结果</span></span><br><span class=\"line\">System.out.println(sum);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"练习2：统计个数\"><a href=\"#练习2：统计个数\" class=\"headerlink\" title=\"练习2：统计个数\"></a>练习2：统计个数</h2><p>需求：定义一个数组，存储1,2,3,4,5,6,7,8,9,10</p>\n<p>遍历数组得到每一个元素，统计数组里面一共有多少个能被3整除的数字</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.定义一个数组 存储1,2,3,4,5,6,7,8,9,10</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//定义一个变量，用来统计次数</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">//2.遍历数组得到每一个元素</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//i 表示数组里面的每一个索引</span></span><br><span class=\"line\">    <span class=\"comment\">//arr[i] 表示数组里面的每一个元素</span></span><br><span class=\"line\">    <span class=\"comment\">//3.判断当前的元素是否为3的倍数，如果是那么统计变量就需要自增一次。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i] % <span class=\"number\">3</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// System.out.println(arr[i]);</span></span><br><span class=\"line\">        count++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//当循环结束之后，就表示数组里面所有的数字都判断完毕了，直接打印count即可</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;数组中能被3整除的数字有&quot;</span> + count + <span class=\"string\">&quot;个&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"练习3：变化数据\"><a href=\"#练习3：变化数据\" class=\"headerlink\" title=\"练习3：变化数据\"></a>练习3：变化数据</h2><p>需求：</p>\n<p>定义一个数组，存储1,2,3,4,5,6,7,8,9,10</p>\n<p>遍历数组得到每一个元素。</p>\n<p>要求：</p>\n<p>1，如果是奇数，则将当前数字扩大两倍</p>\n<p>2，如果是偶数，则将当前数字变成二分之一</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.定义一个数组，存1,2,3,4,5,6,7,8,9,10</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//2.遍历数组得到每一个元素</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//i 依次表示数组里面的每一个索引</span></span><br><span class=\"line\">    <span class=\"comment\">//arr[i] 依次表示数组里面的每一个元素</span></span><br><span class=\"line\">    <span class=\"comment\">//3.对每一个元素进行判断</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i] % <span class=\"number\">2</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//偶数 变成二分之一</span></span><br><span class=\"line\">        arr[i] = arr[i] / <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//奇数 扩大两倍</span></span><br><span class=\"line\">        arr[i] = arr[i] * <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//遍历数组</span></span><br><span class=\"line\"><span class=\"comment\">//一个循环尽量只做一件事情。</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    System.out.println(arr[i]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"练习4：求最值\"><a href=\"#练习4：求最值\" class=\"headerlink\" title=\"练习4：求最值\"></a>练习4：求最值</h2><p>需求：求数组中的最大值</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//定义数组求最大值：33,5,22,44,55</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//扩展问题：</span></span><br><span class=\"line\"><span class=\"comment\">//1.根据求最大值的思路，自己改写一下求最小智</span></span><br><span class=\"line\"><span class=\"comment\">//2.为什么max要记录为arr[0],默认值不能为0吗？</span></span><br><span class=\"line\"><span class=\"comment\">//不能写0</span></span><br><span class=\"line\"><span class=\"comment\">//max的初始化值一定要是数组中的值。</span></span><br><span class=\"line\"><span class=\"comment\">//3.循环中开始条件一定是0吗？</span></span><br><span class=\"line\"><span class=\"comment\">//循环的开始条件如果为0，那么第一次循环的时候是自己跟自己比了一下，对结果没有任何影响，但是效率偏低</span></span><br><span class=\"line\"><span class=\"comment\">//为了提高效率，减少一次循环的次数，循环开始条件可以写1.</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//1.定义数组用来存储5个值</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">33</span>,<span class=\"number\">5</span>,<span class=\"number\">22</span>,<span class=\"number\">44</span>,<span class=\"number\">55</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//2.定义一个变量max用来存储最大值</span></span><br><span class=\"line\"><span class=\"comment\">//临时认为0索引的数据是最大的</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">max</span> <span class=\"operator\">=</span> arr[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"comment\">//3.循环获取数组中的每一个元素</span></span><br><span class=\"line\"><span class=\"comment\">//拿着每一个元素跟max进行比较</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//i 索引  arr[i] 元素</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i] &gt; max)&#123;</span><br><span class=\"line\">        max = arr[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//4.当循环结束之后，max记录的就是数组中的最大值</span></span><br><span class=\"line\">System.out.println(max);<span class=\"comment\">//55</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"练习5：统计个数\"><a href=\"#练习5：统计个数\" class=\"headerlink\" title=\"练习5：统计个数\"></a>练习5：统计个数</h2><p>需求：生成10个1~100之间的随机数存入数组。</p>\n<p>1）求出所有数据的和</p>\n<p>2）求所有数据的平均数</p>\n<p>3）统计有多少个数据比平均值小</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.定义数组</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"comment\">//2.把随机数存入到数组当中</span></span><br><span class=\"line\"><span class=\"type\">Random</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//每循环一次，就会生成一个新的随机数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> r.nextInt(<span class=\"number\">100</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"comment\">//把生成的随机数添加的数组当中</span></span><br><span class=\"line\">    <span class=\"comment\">//数组名[索引] = 数据;</span></span><br><span class=\"line\">    arr[i] = number;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1）求出所有数据的和</span></span><br><span class=\"line\"><span class=\"comment\">//定义求和变量</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//循环得到每一个元素</span></span><br><span class=\"line\">    <span class=\"comment\">//并把元素累加到sum当中</span></span><br><span class=\"line\">    sum = sum + arr[i];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;数组中所有数据的和为：&quot;</span> + sum);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2）求所有数据的平均数</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">avg</span> <span class=\"operator\">=</span> sum / arr.length;</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;数组中平均数为：&quot;</span> + avg);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3）统计有多少个数据比平均值小</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i] &lt; avg)&#123;</span><br><span class=\"line\">        count++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//当循环结束之后，就表示我已经找到了所有的比平均数小的数据</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;在数组中，一共有&quot;</span> + count + <span class=\"string\">&quot;个数据，比平均数小&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//遍历数组，验证答案</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    System.out.print(arr[i] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"练习6：交换数据\"><a href=\"#练习6：交换数据\" class=\"headerlink\" title=\"练习6：交换数据\"></a>练习6：交换数据</h2><p>需求：定义一个数组，存入1,2,3,4,5。按照要求交换索引对应的元素。</p>\n<p>交换前：1,2,3,4,5</p>\n<p>交换后：5,2,3,4,1</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.定义数组存储数据</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//2.利用循环去交换数据</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>,j = arr.length - <span class=\"number\">1</span>; i &lt; j; i++,j--)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//交换变量i和变量j指向的元素</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> arr[i];</span><br><span class=\"line\">    arr[i] = arr[j];</span><br><span class=\"line\">    arr[j] = temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//当循环结束之后，那么数组中的数据就实现了头尾交换</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    System.out.print(arr[i] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"练习7：打乱数据\"><a href=\"#练习7：打乱数据\" class=\"headerlink\" title=\"练习7：打乱数据\"></a>练习7：打乱数据</h2><p>需求：定义一个数组，存入1~5。要求打乱数组中所有数据的顺序。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.定义数组存储1~5</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//2.循环遍历数组，从0索引开始打乱数据的顺序</span></span><br><span class=\"line\"><span class=\"type\">Random</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//生成一个随机索引</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">randomIndex</span> <span class=\"operator\">=</span> r.nextInt(arr.length);</span><br><span class=\"line\">    <span class=\"comment\">//拿着随机索引指向的元素 跟 i 指向的元素进行交换</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> arr[i];</span><br><span class=\"line\">    arr[i] = arr[randomIndex];</span><br><span class=\"line\">    arr[randomIndex] = temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//当循环结束之后，那么数组中所有的数据已经打乱顺序了</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    System.out.print(arr[i] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","length":7155,"excerpt":"","more":"<h1 id=\"1-数组\"><a href=\"#1-数组\" class=\"headerlink\" title=\"1.数组\"></a>1.数组</h1><h3 id=\"概念：\"><a href=\"#概念：\" class=\"headerlink\" title=\"概念：\"></a>概念：</h3><p>​\t指的是一种容器，可以同来存储同种数据类型的多个值。</p>\n<p>​\t但是数组容器在存储数据的时候，需要结合隐式转换考虑。</p>\n<p>比如：</p>\n<p>​\t定义了一个int类型的数组。那么boolean。double类型的数据是不能存到这个数组中的，</p>\n<p>​\t但是byte类型，short类型，int类型的数据是可以存到这个数组里面的。</p>\n<p>建议：</p>\n<p>​\t容器的类，和存储的数据类型保持一致。</p>\n<p>举例：</p>\n<p>​\t整数1 2 3 4 56 就可以使用int类型的数组来存储。</p>\n<p>​\t小数1.1 1.2 1.3 1.4 就可以使用double类型的数组来存储。</p>\n<p>​\t字符串”aaa”  “bbb”  “ccc” 就可以使用String类型的数组来存储。</p>\n<h1 id=\"2-数组的定义\"><a href=\"#2-数组的定义\" class=\"headerlink\" title=\"2.数组的定义\"></a>2.数组的定义</h1><h3 id=\"格式一：\"><a href=\"#格式一：\" class=\"headerlink\" title=\"格式一：\"></a>格式一：</h3><p>​\t数据类型 [] 数组名</p>\n<p>比如：int [] array</p>\n<h3 id=\"格式二：\"><a href=\"#格式二：\" class=\"headerlink\" title=\"格式二：\"></a>格式二：</h3><p>​\t数据类型  数组名 []</p>\n<p>比如： int array []</p>\n<h3 id=\"详解：\"><a href=\"#详解：\" class=\"headerlink\" title=\"详解：\"></a>详解：</h3><p>数据类型：限定了数组以后能存什么类型的数据。</p>\n<p>方括号：表示现在定义的是一个数组。</p>\n<p>数组名：就是一个名字而已，方便以后使用。</p>\n<h3 id=\"注意点：\"><a href=\"#注意点：\" class=\"headerlink\" title=\"注意点：\"></a>注意点：</h3><p>​\t方法括号跟数组名，谁写在前面，谁写在后面都是一样的。</p>\n<p>​\t平时习惯性使用第一种方式。</p>\n<h1 id=\"3-数组的静态初始化\"><a href=\"#3-数组的静态初始化\" class=\"headerlink\" title=\"3.数组的静态初始化\"></a>3.数组的静态初始化</h1><h3 id=\"完整格式：\"><a href=\"#完整格式：\" class=\"headerlink\" title=\"完整格式：\"></a>完整格式：</h3><p>​\t数据类型[] 数组名 &#x3D; new 数据类型[]{元素1，元素2，元素3，元素4…};</p>\n<p>比如：</p>\n<p>​\tint[] arr &#x3D; new int[]{11,22,33};</p>\n<p>​\tdouble[] arr &#x3D; new double[]{1.1,1.2,1.3};</p>\n<h3 id=\"格式详解：\"><a href=\"#格式详解：\" class=\"headerlink\" title=\"格式详解：\"></a>格式详解：</h3><p>​\t数据类型：限定了数组以后能存什么类型的数据。</p>\n<p>​\t方括号：表示现在定义的是一个数组。</p>\n<p>​\t数组名：其实就是名字而已，方便以后使用，在起名字的时候遵循小驼峰命名法。</p>\n<p>​\t\t\tarr   namesArr</p>\n<p>​\tnew：就是给数组在内存中开辟了一个空间。</p>\n<p>​\t数据类型：限定了数组以后能存什么类型的数据。</p>\n<p>​\t\t\t  前面和后面的数据类型一定要保持一致。</p>\n<p>​\t\t\tint[] arr &#x3D; new double[]{11,22,33};&#x2F;&#x2F;错误写法</p>\n<p>​\t方括号：表示现在定义的是一个数组。</p>\n<p>​\t大括号：表示数组里面的元素。元素也就是存入到数组中的数据。</p>\n<p>​\t\t\t多个元素之间，一定要用逗号隔开。</p>\n<h3 id=\"注意点：-1\"><a href=\"#注意点：-1\" class=\"headerlink\" title=\"注意点：\"></a>注意点：</h3><ul>\n<li>等号前后的数据类型必须保持一致。</li>\n<li>数组一旦创建之后，长度不能发生变化。</li>\n</ul>\n<h3 id=\"简化格式\"><a href=\"#简化格式\" class=\"headerlink\" title=\"简化格式:\"></a>简化格式:</h3><p>​\t数据类型[] 数组名 &#x3D; {元素1，元素2，元素3，元素4…};</p>\n<p>比如：</p>\n<p>​\tint[] array &#x3D; {1,2,3,4,5};</p>\n<p>​\tdouble[] array &#x3D; {1.1,1.2,1.3};</p>\n<h3 id=\"练习1：\"><a href=\"#练习1：\" class=\"headerlink\" title=\"练习1：\"></a>练习1：</h3><p>定义数组存储5个学生的年龄。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>给数组限定什么类型？ <span class=\"type\">int</span></span><br><span class=\"line\"><span class=\"number\">2.</span>利用静态初始化完成创建并添加元素</span><br><span class=\"line\"><span class=\"type\">int</span>[] agesArr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;<span class=\"number\">18</span>,<span class=\"number\">19</span>,<span class=\"number\">20</span>,<span class=\"number\">21</span>,<span class=\"number\">22</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">int</span>[] agesArr = &#123;<span class=\"number\">18</span>,<span class=\"number\">19</span>,<span class=\"number\">20</span>,<span class=\"number\">21</span>,<span class=\"number\">22</span>&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"练习2：\"><a href=\"#练习2：\" class=\"headerlink\" title=\"练习2：\"></a>练习2：</h3><p>定义数组存储3个学生的姓名。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>给数组限定什么类型？ String</span><br><span class=\"line\"><span class=\"number\">2.</span>利用静态初始化完成创建并添加元素</span><br><span class=\"line\">String[] namesArr = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[]&#123;<span class=\"string\">&quot;zhangsan&quot;</span>,<span class=\"string\">&quot;lisi&quot;</span>,<span class=\"string\">&quot;wangwu&quot;</span>&#125;;</span><br><span class=\"line\">String[] namesArr = &#123;<span class=\"string\">&quot;zhangsan&quot;</span>,<span class=\"string\">&quot;lisi&quot;</span>,<span class=\"string\">&quot;wangwu&quot;</span>&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"练习3：\"><a href=\"#练习3：\" class=\"headerlink\" title=\"练习3：\"></a>练习3：</h3><p>定义数组存储4个学生的身高。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>给数组限定什么类型？ <span class=\"type\">double</span></span><br><span class=\"line\"><span class=\"number\">2.</span>利用静态初始化完成创建并添加元素</span><br><span class=\"line\"><span class=\"type\">double</span>[] heightsArr = <span class=\"keyword\">new</span> <span class=\"title class_\">double</span>[]&#123;<span class=\"number\">1.85</span>,<span class=\"number\">1.82</span>,<span class=\"number\">1.78</span>,<span class=\"number\">1.65</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">double</span>[] heightsArr = &#123;<span class=\"number\">1.85</span>,<span class=\"number\">1.82</span>,<span class=\"number\">1.78</span>,<span class=\"number\">1.65</span>&#125;;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"4-地址值\"><a href=\"#4-地址值\" class=\"headerlink\" title=\"4.地址值\"></a>4.地址值</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">System.out.println(arr);<span class=\"comment\">//[I@6d03e736</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">double</span>[] arr2 = &#123;<span class=\"number\">1.1</span>,<span class=\"number\">2.2</span>,<span class=\"number\">3.3</span>&#125;;</span><br><span class=\"line\">System.out.println(arr2);<span class=\"comment\">//[D@568db2f2</span></span><br></pre></td></tr></table></figure>\n\n<p>打印数组的时候，实际出现的是数组的地址值。</p>\n<p>数组的地址值：就表示数组在内存中的位置。</p>\n<p>以[I@6d03e736为例：</p>\n<p>[ ：表示现在打印的是一个数组。</p>\n<p>I：表示现在打印的数组是int类型的。</p>\n<p>@：仅仅是一个间隔符号而已。</p>\n<p>6d03e736：就是数组在内存中真正的地址值。（十六进制的）</p>\n<p>但是，我们习惯性会把[I@6d03e736这个整体称之为数组的地址值。</p>\n<p>地址值对于我们来京，作用不大，简单了解。</p>\n<h1 id=\"5-数组元素访问\"><a href=\"#5-数组元素访问\" class=\"headerlink\" title=\"5.数组元素访问\"></a>5.数组元素访问</h1><h3 id=\"格式：\"><a href=\"#格式：\" class=\"headerlink\" title=\"格式：\"></a>格式：</h3><p>​\t数组名[索引];</p>\n<h3 id=\"作用：\"><a href=\"#作用：\" class=\"headerlink\" title=\"作用：\"></a>作用：</h3><ul>\n<li><p>获取数组中对应索引上的值</p>\n</li>\n<li><p>修改数组中对应索引上的值</p>\n<p>一旦修改之后，原来的值就会被覆盖了。</p>\n</li>\n</ul>\n<h3 id=\"代码示例：\"><a href=\"#代码示例：\" class=\"headerlink\" title=\"代码示例：\"></a>代码示例：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ArrDemo2</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        数组中元素访问的格式：</span></span><br><span class=\"line\"><span class=\"comment\">                数组名[索引];</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">         作用：</span></span><br><span class=\"line\"><span class=\"comment\">            1.获取指定索引上对应的元素</span></span><br><span class=\"line\"><span class=\"comment\">            2.修改指定索引上对应的元素</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">       <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">       <span class=\"comment\">//需求1：获取arr数组中，3索引上的值</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> arr[<span class=\"number\">3</span>];</span><br><span class=\"line\">        System.out.println(number);</span><br><span class=\"line\">        System.out.println(arr[<span class=\"number\">3</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">//需求2：将arr数组中，3索引上的值修改为10</span></span><br><span class=\"line\">            arr[<span class=\"number\">3</span>] = <span class=\"number\">10</span>;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;修改之后为:&quot;</span> + arr[<span class=\"number\">3</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"6-索引\"><a href=\"#6-索引\" class=\"headerlink\" title=\"6.索引\"></a>6.索引</h1><p>​\t也叫角标、下标</p>\n<p>​\t就是数组容器中每一个小格子对应的编号。</p>\n<h3 id=\"索引的特点：\"><a href=\"#索引的特点：\" class=\"headerlink\" title=\"索引的特点：\"></a>索引的特点：</h3><ul>\n<li>索引一定是从0开始的。</li>\n<li>连续不间断。</li>\n<li>逐个+1增长。</li>\n</ul>\n<h1 id=\"7-数组的遍历\"><a href=\"#7-数组的遍历\" class=\"headerlink\" title=\"7.数组的遍历\"></a>7.数组的遍历</h1><p>遍历：就是把数组里面所有的内容一个一个全部取出来。</p>\n<p>数组的长度：数组名.length;</p>\n<p>通用代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//在循环的过程中，i依次表示数组中的每一个索引</span></span><br><span class=\"line\">    sout(arr[i]);<span class=\"comment\">//就可以把数组里面的每一个元素都获取出来，并打印在控制台上了。</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"8-数组的动态初始化\"><a href=\"#8-数组的动态初始化\" class=\"headerlink\" title=\"8.数组的动态初始化\"></a>8.数组的动态初始化</h1><h3 id=\"格式：-1\"><a href=\"#格式：-1\" class=\"headerlink\" title=\"格式：\"></a>格式：</h3><p>​\t数据类型[] 数组名 &#x3D; new 数据类型[数组的长度];</p>\n<h3 id=\"举例：\"><a href=\"#举例：\" class=\"headerlink\" title=\"举例：\"></a>举例：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.定义一个数组，存3个人的年龄，年龄未知</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] agesArr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.定义一个数组，存班级10名学生的考试成绩，考试成绩暂时未知，考完才知道。</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] scoresArr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">10</span>];</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数组的默认初始化值：\"><a href=\"#数组的默认初始化值：\" class=\"headerlink\" title=\"数组的默认初始化值：\"></a>数组的默认初始化值：</h3><p>整数类型：0</p>\n<p>小数类型：0.0</p>\n<p>布尔类型：false</p>\n<p>字符类型：’\\u0000’</p>\n<p>引用类型：null</p>\n<h1 id=\"9-数组两种初始化方式的区别\"><a href=\"#9-数组两种初始化方式的区别\" class=\"headerlink\" title=\"9.数组两种初始化方式的区别\"></a>9.数组两种初始化方式的区别</h1><p>静态初始化：int[] arr &#x3D; {1,2,3,4,5};</p>\n<p>动态初始化：int[] arr &#x3D; new int[3];</p>\n<p>静态初始化：手动指定数组的元素，系统会根据元素的个数，计算出数组的长度。</p>\n<p>动态初始化：手动指定数组长度，由系统给出默认初始化值。</p>\n<h3 id=\"使用场景：\"><a href=\"#使用场景：\" class=\"headerlink\" title=\"使用场景：\"></a>使用场景：</h3><p>只明确元素个数，但是不明确具体的数据，推荐使用动态初始化。</p>\n<p>已经明确了要操作的所有数据，推荐使用静态初始化。</p>\n<h3 id=\"举例：-1\"><a href=\"#举例：-1\" class=\"headerlink\" title=\"举例：\"></a>举例：</h3><ul>\n<li><p>使用数组来存储键盘录入的5个整数。</p>\n<p>int[] arr &#x3D; new int[5];</p>\n</li>\n<li><p>将全班的学生成绩存入数组中，已知学生成绩为：66,77,88,99,100</p>\n<p>int[] arr &#x3D; new int[5];</p>\n<p>arr[0] &#x3D; 66;</p>\n<p>arr[1] &#x3D; 77;</p>\n<p>… 虽然可以实现，但是太麻烦了。</p>\n<p>建议使用静态初始化：int[] arr &#x3D; {66,77,88,99,100};</p>\n</li>\n</ul>\n<h1 id=\"10-数组常见问题\"><a href=\"#10-数组常见问题\" class=\"headerlink\" title=\"10.数组常见问题\"></a>10.数组常见问题</h1><p>当访问了数组中不存在的索引，就会引发索引越界异常。</p>\n<p>避免：</p>\n<p>​\t针对于任意一个数组，索引的范围：<br>       最小索引：0<br>       最大索引：数组的长度 - 1<br>                       数组名.length - 1</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ArrDemo6</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">       <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">        <span class=\"comment\">//用索引来访问数组中的元素</span></span><br><span class=\"line\">        System.out.println(arr[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        System.out.println(arr[<span class=\"number\">10</span>]);<span class=\"comment\">//ArrayIndexOutOfBoundsException</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"11-数组的练习\"><a href=\"#11-数组的练习\" class=\"headerlink\" title=\"11.数组的练习\"></a>11.数组的练习</h1><h2 id=\"练习1：求和\"><a href=\"#练习1：求和\" class=\"headerlink\" title=\"练习1：求和\"></a>练习1：求和</h2><p>需求：定义一个数组，存储1,2,3,4,5</p>\n<p>遍历数组得到每一个元素，求数组里面所有的数据和</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*定义一个数组，存储1,2,3,4,5</span></span><br><span class=\"line\"><span class=\"comment\">        遍历数组得到每一个元素，求数组里面所有的数据和*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.定义一个数组，并添加数据1,2,3,4,5</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//求和变量</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">//2.遍历数组得到每一个数据，累加求和</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//i 依次表示数组里面的每一个索引</span></span><br><span class=\"line\">    <span class=\"comment\">//arr[i] 依次表示数组里面的每一个元素</span></span><br><span class=\"line\">    sum = sum + arr[i];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//当循环结束之后，sum的值就是累加之后的结果</span></span><br><span class=\"line\">System.out.println(sum);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"练习2：统计个数\"><a href=\"#练习2：统计个数\" class=\"headerlink\" title=\"练习2：统计个数\"></a>练习2：统计个数</h2><p>需求：定义一个数组，存储1,2,3,4,5,6,7,8,9,10</p>\n<p>遍历数组得到每一个元素，统计数组里面一共有多少个能被3整除的数字</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.定义一个数组 存储1,2,3,4,5,6,7,8,9,10</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//定义一个变量，用来统计次数</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">//2.遍历数组得到每一个元素</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//i 表示数组里面的每一个索引</span></span><br><span class=\"line\">    <span class=\"comment\">//arr[i] 表示数组里面的每一个元素</span></span><br><span class=\"line\">    <span class=\"comment\">//3.判断当前的元素是否为3的倍数，如果是那么统计变量就需要自增一次。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i] % <span class=\"number\">3</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// System.out.println(arr[i]);</span></span><br><span class=\"line\">        count++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//当循环结束之后，就表示数组里面所有的数字都判断完毕了，直接打印count即可</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;数组中能被3整除的数字有&quot;</span> + count + <span class=\"string\">&quot;个&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"练习3：变化数据\"><a href=\"#练习3：变化数据\" class=\"headerlink\" title=\"练习3：变化数据\"></a>练习3：变化数据</h2><p>需求：</p>\n<p>定义一个数组，存储1,2,3,4,5,6,7,8,9,10</p>\n<p>遍历数组得到每一个元素。</p>\n<p>要求：</p>\n<p>1，如果是奇数，则将当前数字扩大两倍</p>\n<p>2，如果是偶数，则将当前数字变成二分之一</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.定义一个数组，存1,2,3,4,5,6,7,8,9,10</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//2.遍历数组得到每一个元素</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//i 依次表示数组里面的每一个索引</span></span><br><span class=\"line\">    <span class=\"comment\">//arr[i] 依次表示数组里面的每一个元素</span></span><br><span class=\"line\">    <span class=\"comment\">//3.对每一个元素进行判断</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i] % <span class=\"number\">2</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//偶数 变成二分之一</span></span><br><span class=\"line\">        arr[i] = arr[i] / <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//奇数 扩大两倍</span></span><br><span class=\"line\">        arr[i] = arr[i] * <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//遍历数组</span></span><br><span class=\"line\"><span class=\"comment\">//一个循环尽量只做一件事情。</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    System.out.println(arr[i]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"练习4：求最值\"><a href=\"#练习4：求最值\" class=\"headerlink\" title=\"练习4：求最值\"></a>练习4：求最值</h2><p>需求：求数组中的最大值</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//定义数组求最大值：33,5,22,44,55</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//扩展问题：</span></span><br><span class=\"line\"><span class=\"comment\">//1.根据求最大值的思路，自己改写一下求最小智</span></span><br><span class=\"line\"><span class=\"comment\">//2.为什么max要记录为arr[0],默认值不能为0吗？</span></span><br><span class=\"line\"><span class=\"comment\">//不能写0</span></span><br><span class=\"line\"><span class=\"comment\">//max的初始化值一定要是数组中的值。</span></span><br><span class=\"line\"><span class=\"comment\">//3.循环中开始条件一定是0吗？</span></span><br><span class=\"line\"><span class=\"comment\">//循环的开始条件如果为0，那么第一次循环的时候是自己跟自己比了一下，对结果没有任何影响，但是效率偏低</span></span><br><span class=\"line\"><span class=\"comment\">//为了提高效率，减少一次循环的次数，循环开始条件可以写1.</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//1.定义数组用来存储5个值</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">33</span>,<span class=\"number\">5</span>,<span class=\"number\">22</span>,<span class=\"number\">44</span>,<span class=\"number\">55</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//2.定义一个变量max用来存储最大值</span></span><br><span class=\"line\"><span class=\"comment\">//临时认为0索引的数据是最大的</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">max</span> <span class=\"operator\">=</span> arr[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"comment\">//3.循环获取数组中的每一个元素</span></span><br><span class=\"line\"><span class=\"comment\">//拿着每一个元素跟max进行比较</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//i 索引  arr[i] 元素</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i] &gt; max)&#123;</span><br><span class=\"line\">        max = arr[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//4.当循环结束之后，max记录的就是数组中的最大值</span></span><br><span class=\"line\">System.out.println(max);<span class=\"comment\">//55</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"练习5：统计个数\"><a href=\"#练习5：统计个数\" class=\"headerlink\" title=\"练习5：统计个数\"></a>练习5：统计个数</h2><p>需求：生成10个1~100之间的随机数存入数组。</p>\n<p>1）求出所有数据的和</p>\n<p>2）求所有数据的平均数</p>\n<p>3）统计有多少个数据比平均值小</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.定义数组</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"comment\">//2.把随机数存入到数组当中</span></span><br><span class=\"line\"><span class=\"type\">Random</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//每循环一次，就会生成一个新的随机数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> r.nextInt(<span class=\"number\">100</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"comment\">//把生成的随机数添加的数组当中</span></span><br><span class=\"line\">    <span class=\"comment\">//数组名[索引] = 数据;</span></span><br><span class=\"line\">    arr[i] = number;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1）求出所有数据的和</span></span><br><span class=\"line\"><span class=\"comment\">//定义求和变量</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//循环得到每一个元素</span></span><br><span class=\"line\">    <span class=\"comment\">//并把元素累加到sum当中</span></span><br><span class=\"line\">    sum = sum + arr[i];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;数组中所有数据的和为：&quot;</span> + sum);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2）求所有数据的平均数</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">avg</span> <span class=\"operator\">=</span> sum / arr.length;</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;数组中平均数为：&quot;</span> + avg);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3）统计有多少个数据比平均值小</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i] &lt; avg)&#123;</span><br><span class=\"line\">        count++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//当循环结束之后，就表示我已经找到了所有的比平均数小的数据</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;在数组中，一共有&quot;</span> + count + <span class=\"string\">&quot;个数据，比平均数小&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//遍历数组，验证答案</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    System.out.print(arr[i] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"练习6：交换数据\"><a href=\"#练习6：交换数据\" class=\"headerlink\" title=\"练习6：交换数据\"></a>练习6：交换数据</h2><p>需求：定义一个数组，存入1,2,3,4,5。按照要求交换索引对应的元素。</p>\n<p>交换前：1,2,3,4,5</p>\n<p>交换后：5,2,3,4,1</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.定义数组存储数据</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//2.利用循环去交换数据</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>,j = arr.length - <span class=\"number\">1</span>; i &lt; j; i++,j--)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//交换变量i和变量j指向的元素</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> arr[i];</span><br><span class=\"line\">    arr[i] = arr[j];</span><br><span class=\"line\">    arr[j] = temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//当循环结束之后，那么数组中的数据就实现了头尾交换</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    System.out.print(arr[i] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"练习7：打乱数据\"><a href=\"#练习7：打乱数据\" class=\"headerlink\" title=\"练习7：打乱数据\"></a>练习7：打乱数据</h2><p>需求：定义一个数组，存入1~5。要求打乱数组中所有数据的顺序。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.定义数组存储1~5</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//2.循环遍历数组，从0索引开始打乱数据的顺序</span></span><br><span class=\"line\"><span class=\"type\">Random</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//生成一个随机索引</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">randomIndex</span> <span class=\"operator\">=</span> r.nextInt(arr.length);</span><br><span class=\"line\">    <span class=\"comment\">//拿着随机索引指向的元素 跟 i 指向的元素进行交换</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> arr[i];</span><br><span class=\"line\">    arr[i] = arr[randomIndex];</span><br><span class=\"line\">    arr[randomIndex] = temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//当循环结束之后，那么数组中所有的数据已经打乱顺序了</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">    System.out.print(arr[i] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"day04-流程控制语句","date":"2024-12-12T08:38:00.000Z","photos":["/tupian/j04.jpg"],"_content":"\n## 第一章 流程控制语句\n\n在一个程序执行的过程中，各条语句的执行顺序对程序的结果是有直接影响的。所以，我们必须清楚每条语句的执行流程。而且，很多时候要通过控制语句的执行顺序来实现我们想要的功能。\n\n### 1.1 流程控制语句分类\n\n​\t顺序结构\n\n​\t判断和选择结构(if, switch)\n\n​\t循环结构(for, while, do…while)\n\n### 1.2 顺序结构\n\n顺序结构是程序中最简单最基本的流程控制，没有特定的语法结构，按照代码的先后顺序，依次执行，程序中大多数的代码都是这样执行的。\n\n顺序结构执行流程图：\n\n![1545615769372](/tupian/1545615769372.png)\n\n## 第二章 判断语句：if语句\n\n### 2.1 if语句格式1\n\n```java\n格式：\nif (关系表达式) {\n    语句体;\t\n}\n```\n\n执行流程：\n\n①首先计算关系表达式的值\n\n②如果关系表达式的值为true就执行语句体\n\n③如果关系表达式的值为false就不执行语句体\n\n④继续执行后面的语句内容\n\n![1545616039363](/tupian/1545616039363.png)\n\n示例：\n\n```java\npublic class IfDemo {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"开始\");\t\n\t\t//定义两个变量\n\t\tint a = 10;\n\t\tint b = 20;\t\n\t\t//需求：判断a和b的值是否相等，如果相等，就在控制台输出：a等于b\n\t\tif(a == b) {\n\t\t\tSystem.out.println(\"a等于b\");\n\t\t}\t\t\n\t\t//需求：判断a和c的值是否相等，如果相等，就在控制台输出：a等于c\n\t\tint c = 10;\n\t\tif(a == c) {\n\t\t\tSystem.out.println(\"a等于c\");\n\t\t}\t\t\n\t\tSystem.out.println(\"结束\");\n\t}\n}\n```\n\n#### 练习1：老丈人选女婿\n\n需求：\n\n​\t键盘录入女婿的酒量，如果大于2斤，老丈人给出回应，否则没有任何回应\n\n代码示例：\n\n```java\n//分析：\n//1.键盘录入女婿的酒量\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入女婿的酒量\");\nint wine = sc.nextInt();//5\n//2.对酒量进行一个判断即可\nif(wine > 2) {\n    System.out.println(\"不错哟，小伙子！\");\n}\n```\n\n#### 练习2：考试奖励\n\n需求：\n\n​\t键盘录入一个整数，表示小明的考试名次，如果名次为1，小红可以当小明的女朋有了。\n\n代码示例：\n\n```java\n//分析：\n//1.键盘录入一个整数，表示小明的考试名次\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入小明的名次\");\nint rank = sc.nextInt();\n//2.对小明的考试成绩进行判断即可\nif(rank == 1){\n    System.out.println(\"小红成为了小明的女朋友\");\n}\n```\n\n#### 第一种格式的细节：\n\n1. 如果我们要对一个布尔类型的变量进行判断，不要写==，直接把变量写在小括号中即可。\n\n2. 如果大括号中的语句体只有一条，那么大括号可以省略不写\n\n   如果大括号省略了，那么if只能控制距离他最近的那一条语句。\n\n   **建议：**自己不要去写，如果别人这么写了，你要能看懂即可。\n\n### 2.2 if语句格式2\n\n```java\n格式：\nif (关系表达式) {\n    语句体1;\t\n} else {\n    语句体2;\t\n}\n```\n\n执行流程：\n\n①首先计算关系表达式的值\n\n②如果关系表达式的值为true就执行语句体1\n\n③如果关系表达式的值为false就执行语句体2\n\n④继续执行后面的语句内容\n\n![1545616221283](/tupian/1545616221283.png)\n\n示例：\n\n```java\npublic class IfDemo02 {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"开始\");\t\t\n\t\t//定义两个变量\n\t\tint a = 10;\n\t\tint b = 20;\n\t\t//需求：判断a是否大于b，如果是，在控制台输出：a的值大于b，否则，在控制台输出：a的值不大于b\n\t\tif(a > b) {\n\t\t\tSystem.out.println(\"a的值大于b\");\n\t\t} else {\n\t\t\tSystem.out.println(\"a的值不大于b\");\n\t\t}\t\t\n\t\tSystem.out.println(\"结束\");\n\t}\n}\n```\n\n#### 练习1：吃饭\n\n需求：\n\n​\t    键盘录入一个整数，表示身上的钱。\n\n​            如果大于等于100块，就是网红餐厅。\n\n​            否则，就吃经济实惠的沙县小吃。\n\n代码示例：\n\n```java\n//分析：\n//1.键盘录入一个整数。表示身上的钱。\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入一个整数表示身上的钱\");\nint money = sc.nextInt();\n//2.对钱进行判断\nif(money >= 100){\n    System.out.println(\"吃网红餐厅\");\n}else{\n    System.out.println(\"福建大酒店\");\n}\n```\n\n#### 练习2：影院选座\n\n需求：\n\n​\t在实际开发中，电影院选座也会使用到if判断。\n\n​\t假设某影院售卖了100张票，票的序号为1~100。\n\n​\t其中奇数票号坐左侧，偶数票号坐右侧。\n\n​\t键盘录入一个整数表示电影票的票号。\n\n​\t根据不同情况，给出不同的提示：\n\n​\t\t如果票号为奇数，那么打印坐左边。\n\n​\t\t如果票号为偶数，那么打印坐右边。\n\n代码示例：\n\n```java\n//分析：\n//1.键盘录入票号\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入票号\");\nint ticket = sc.nextInt();\nif(ticket >= 1 && ticket <= 100){\n    //合法\n    //2.对票号进行判断\n    if (ticket % 2 == 0) {\n        //偶数\n        System.out.println(\"坐右边\");\n    } else {\n        //奇数\n        System.out.println(\"坐左边\");\n    }\n}else{\n    //票号不合法\n    System.out.println(\"票号不合法\");\n}\n```\n\n### 2.3 if语句格式3\n\n```java\n格式：\nif (关系表达式1) {\n    语句体1;\t\n} else if (关系表达式2) {\n    语句体2;\t\n} \n…\nelse {\n    语句体n+1;\n}\n```\n\n执行流程：\n\n①首先计算关系表达式1的值\n\n②如果值为true就执行语句体1；如果值为false就计算关系表达式2的值\n\n③如果值为true就执行语句体2；如果值为false就计算关系表达式3的值\n\n④…\n\n⑤如果没有任何关系表达式为true，就执行语句体n+1。\n\n![1545616667104](/tupian/1545616667104.png)\n\n#### 练习1：考试奖励\n\n需求：\n\n​\t小明快要期末考试了，小明爸爸对他说，会根据他不同的考试成绩，送他不同的礼物，\n\n假如你可以控制小明的得分，请用程序实现小明到底该获得什么样的礼物，并在控制台输出。\n\n分析：\n\n​\t①小明的考试成绩未知，可以使用键盘录入的方式获取值\n\n​\t②由于奖励种类较多，属于多种判断，采用if...else...if格式实现\n\n​\t③为每种判断设置对应的条件\n\n​\t④为每种判断设置对应的奖励\n\n代码示例：\n\n```java\n//95~100 自行车一辆\n//90~94   游乐场玩一天\n//80 ~ 89 变形金刚一个\n//80 以下  胖揍一顿\n\n//1.键盘录入一个值表示小明的分数\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入小明的成绩\");\nint score = sc.nextInt();\n//2.对分数的有效性进行判断\nif(score >= 0 && score <= 100){\n    //有效的分数\n    //3.对小明的分数进行判断，不同情况执行不同的代码\n    if(score >= 95 && score <= 100){\n        System.out.println(\"送自行车一辆\");\n    }else if(score >= 90 && score <= 94){\n        System.out.println(\"游乐场玩一天\");\n    }else if(score >= 80 && score <= 89){\n        System.out.println(\"变形金刚一个\");\n    }else{\n        System.out.println(\"胖揍一顿\");\n    }\n}else{\n    //无效的分数\n    System.out.println(\"分数不合法\");\n}\n```\n\n## 第三章 switch语句\n\n### 3.1 格式\n\n```java\nswitch (表达式) {\n\tcase 1:\n\t\t语句体1;\n\t\tbreak;\n\tcase 2:\n\t\t语句体2;\n\t\tbreak;\n\t...\n\tdefault:\n\t\t语句体n+1;\n\t\tbreak;\n}\n```\n\n### 3.2 **执行流程：**\n\n- 首先计算出表达式的值 \n- 其次，和case依次比较，一旦有对应的值，就会执行相应的语句，在执行的过程中，遇到break就会结 束。 \n- 最后，如果所有的case都和表达式的值不匹配，就会执行default语句体部分，然后程序结束掉。 \n\n#### 练习：运动计划\n\n- 需求：键盘录入星期数，显示今天的减肥活动。\n\n  周一：跑步  \n\n  周二：游泳  \n\n  周三：慢走  \n\n  周四：动感单车\n\n  周五：拳击  \n\n  周六：爬山  \n\n  周日：好好吃一顿\n\n- 代码示例：\n\n```java\npackage a01switch选择语句;\n\nimport java.util.Scanner;\n\npublic class SwitchDemo2 {\n    public static void main(String[] args) {\n        //1.键盘录入一个整数表示星期\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"请输入一个整数表示星期\");\n        int week = sc.nextInt();\n\n        //2.书写一个switch语句去跟week进行匹配\n        switch (week){\n            case 1:\n                System.out.println(\"跑步\");\n                break;\n            case 2:\n                System.out.println(\"游泳\");\n                break;\n            case 3:\n                System.out.println(\"慢走\");\n                break;\n            case 4:\n                System.out.println(\"动感单车\");\n                break;\n            case 5:\n                System.out.println(\"拳击\");\n                break;\n            case 6:\n                System.out.println(\"爬山\");\n                break;\n            case 7:\n                System.out.println(\"好好吃一顿\");\n                break;\n            default:\n                System.out.println(\"输入错误，没有这个星期\");\n                break;\n        }\n    }\n}\n```\n\n### 3.3 switch的扩展知识：\n\n- default的位置和省略情况\n\n  default可以放在任意位置，也可以省略\n\n- case穿透\n\n  不写break会引发case穿透现象\n\n- switch在JDK12的新特性\n\n```java\nint number = 10;\nswitch (number) {\n    case 1 -> System.out.println(\"一\");\n    case 2 -> System.out.println(\"二\");\n    case 3 -> System.out.println(\"三\");\n    default -> System.out.println(\"其他\");\n}\n```\n\n- switch和if第三种格式各自的使用场景\n\n当我们需要对一个范围进行判断的时候，用if的第三种格式\n\n当我们把有限个数据列举出来，选择其中一个执行的时候，用switch语句\n\n比如：\n\n​\t小明的考试成绩，如果用switch，那么需要写100个case，太麻烦了，所以用if简单。\n\n​\t如果是星期，月份，客服电话中0~9的功能选择就可以用switch\n\n#### 练习：休息日和工作日\n\n需求：键盘录入星期数，输出工作日、休息日。\n\n(1-5) 工作日，(6-7)休息日。\n\n代码示例：\n\n```java\n//分析：\n//1.键盘录入星期数\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入星期\");\nint week = sc.nextInt();//3\n//2.利用switch进行匹配\n----------------------------------------------------\n利用case穿透简化代码\nswitch (week){\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n        System.out.println(\"工作日\");\n        break;\n    case 6:\n    case 7:\n        System.out.println(\"休息日\");\n        break;\n    default:\n        System.out.println(\"没有这个星期\");\n        break;\n}\n----------------------------------------------------\n利用JDK12简化代码书写\nswitch (week) {\n    case 1, 2, 3, 4, 5 -> System.out.println(\"工作日\");\n    case 6, 7 -> System.out.println(\"休息日\");\n    default -> System.out.println(\"没有这个星期\");\n}\n```\n\n## 第四章 循环结构\n\n### 4.1 for循环结构（掌握）\n\n​\t循环语句可以在满足循环条件的情况下，反复执行某一段代码，这段被重复执行的代码被称为循环体语句，当反复 执行这个循环体时，需要在合适的时候把循环判断条件修改为false，从而结束循环，否则循环将一直执行下去，形 成死循环。 \n\n#### 4.1.1 for循环格式：\n\n```java\nfor (初始化语句;条件判断语句;条件控制语句) {\n\t循环体语句;\n}\n```\n\n**格式解释：**\n\n- 初始化语句：  用于表示循环开启时的起始状态，简单说就是循环开始的时候什么样\n- 条件判断语句：用于表示循环反复执行的条件，简单说就是判断循环是否能一直执行下去\n- 循环体语句：  用于表示循环反复执行的内容，简单说就是循环反复执行的事情\n- 条件控制语句：用于表示循环执行中每次变化的内容，简单说就是控制循环是否能执行下去\n\n**执行流程：**\n\n①执行初始化语句\n\n②执行条件判断语句，看其结果是true还是false\n\n​             如果是false，循环结束\n\n​             如果是true，继续执行\n\n③执行循环体语句\n\n④执行条件控制语句\n\n⑤回到②继续\n\n**for循环书写技巧：**\n\n- 确定循环的开始条件\n- 确定循环的结束条件\n- 确定循环要重复执行的代码\n\n代码示例：\n\n```java\n//1.确定循环的开始条件\n//2.确定循环的结束条件\n//3.确定要重复执行的代码\n\n//需求：打印5次HelloWorld\n//开始条件：1\n//结束条件：5\n//重复代码：打印语句\n\nfor (int i = 1; i <= 5; i++) {\n    System.out.println(\"HelloWorld\");\n}\n```\n\n##### for循环练习-输出数据\n\n- 需求：在控制台输出1-5和5-1的数据 \n- 示例代码：\n\n```java\npublic class ForTest01 {\n    public static void main(String[] args) {\n\t\t//需求：输出数据1-5\n        for(int i=1; i<=5; i++) {\n\t\t\tSystem.out.println(i);\n\t\t}\n\t\tSystem.out.println(\"--------\");\n\t\t//需求：输出数据5-1\n\t\tfor(int i=5; i>=1; i--) {\n\t\t\tSystem.out.println(i);\n\t\t}\n    }\n}\n```\n\n\n\n##### for循环练习-求和\n\n- 需求：求1-5之间的数据和，并把求和结果在控制台输出  \n- 示例代码：\n\n```java\npublic class ForTest02 {\n    public static void main(String[] args) {\n\t\t//求和的最终结果必须保存起来，需要定义一个变量，用于保存求和的结果，初始值为0\n\t\tint sum = 0;\n\t\t//从1开始到5结束的数据，使用循环结构完成\n\t\tfor(int i=1; i<=5; i++) {\n\t\t\t//将反复进行的事情写入循环结构内部\n             // 此处反复进行的事情是将数据 i 加到用于保存最终求和的变量 sum 中\n\t\t\tsum = sum + i;\n\t\t\t/*\n\t\t\t\tsum += i;\tsum = sum + i;\n\t\t\t\t第一次：sum = sum + i = 0 + 1 = 1;\n\t\t\t\t第二次：sum = sum + i = 1 + 2 = 3;\n\t\t\t\t第三次：sum = sum + i = 3 + 3 = 6;\n\t\t\t\t第四次：sum = sum + i = 6 + 4 = 10;\n\t\t\t\t第五次：sum = sum + i = 10 + 5 = 15;\n\t\t\t*/\n\t\t}\n\t\t//当循环执行完毕时，将最终数据打印出来\n\t\tSystem.out.println(\"1-5之间的数据和是：\" + sum);\n    }\n}\n```\n\n- 本题要点：\n  - 今后遇到的需求中，如果带有求和二字，请立即联想到求和变量\n  - 求和变量的定义位置，必须在循环外部，如果在循环内部则计算出的数据将是错误的\n\n##### for循环练习-求偶数和\n\n- 需求：求1-100之间的偶数和，并把求和结果在控制台输出 }\n- 示例代码：\n\n```java\npublic class ForTest03 {\n    public static void main(String[] args) {\n\t\t//求和的最终结果必须保存起来，需要定义一个变量，用于保存求和的结果，初始值为0\n\t\tint sum = 0;\n\t\t//对1-100的数据求和与1-5的数据求和几乎完全一样，仅仅是结束条件不同\n\t\tfor(int i=1; i<=100; i++) {\n\t\t\t//对1-100的偶数求和，需要对求和操作添加限制条件，判断是否是偶数\n\t\t\tif(i%2 == 0) {\n                //sum += i；\n\t\t\t\tsum = sum + i;\n\t\t\t}\n\t\t}\n\t\t//当循环执行完毕时，将最终数据打印出来\n\t\tSystem.out.println(\"1-100之间的偶数和是：\" + sum);\n    }\n}\n```\n\n##### for循环练习-统计次数\n\n需求：\n\n​\t  键盘录入两个数字，表示一个范围。\n\n​           统计这个范围中。\n\n​           既能被3整除，又能被5整除数字有多少个？\n\n代码示例：\n\n```java\n\n```\n\n### 4.2 while循环\n\n#### 4.2.1 格式：\n\n```java\n初始化语句;\nwhile(条件判断语句){\n\t循环体;\n\t条件控制语句;\n}\n```\n\n##### 练习1：打印5次HelloWorld\n\n```java\nint i = 1;\nwhile(i <= 5){\n    System.out.println(\"HelloWorld\");\n    i++;\n}\nSystem.out.println(i);\n```\n\n##### 练习2：珠穆朗玛峰\n\n```java\n//1.定义一个变量表示珠穆朗玛峰的高度\nint height = 8844430;\n//2.定义一个变量表示纸张的厚度\ndouble paper = 0.1;\n\n//定义一个计数器（变量），用来统计折叠的次数\nint count = 0;\n\n//3.循环折叠纸张\n//只有纸张的厚度 < 穆朗玛峰的高度 循环才继续，否则循环就停止\n//坑：只有判断为真，循环才会继续\nwhile(paper < height){\n    //折叠纸张\n    paper = paper * 2;\n    count++;\n}\n\n//4.打印一下纸张的厚度\nSystem.out.println(count);//27\n```\n\n### 4.3 do...while循环\n\n本知识点了解即可\n\n格式：\n\n```java\n初始化语句;\ndo{\n    循环体;\n    条件控制语句;\n}while(条件判断语句);\n```\n\n特点：\n\n​\t先执行，再判断。\n\n### 4.4 三种格式的区别：\n\n​\tfor和while循环，是先判断，再执行。\n\n​\tdo...while是先执行，再判断。\n\n​\t当知道循环次数或者循环范围的时候，用for循环。\n\n​\t当不知道循环次数，也不知道循环范围，但是知道循环的结束条件时，用while循环。","source":"_posts/day04-流程控制语句.md","raw":"---\ntitle: day04-流程控制语句\ndate: 2024-12-12 16:38:00\ntags:\n    - 流程控制语句\ncategories: java\nphotos: /tupian/j04.jpg\n---\n\n## 第一章 流程控制语句\n\n在一个程序执行的过程中，各条语句的执行顺序对程序的结果是有直接影响的。所以，我们必须清楚每条语句的执行流程。而且，很多时候要通过控制语句的执行顺序来实现我们想要的功能。\n\n### 1.1 流程控制语句分类\n\n​\t顺序结构\n\n​\t判断和选择结构(if, switch)\n\n​\t循环结构(for, while, do…while)\n\n### 1.2 顺序结构\n\n顺序结构是程序中最简单最基本的流程控制，没有特定的语法结构，按照代码的先后顺序，依次执行，程序中大多数的代码都是这样执行的。\n\n顺序结构执行流程图：\n\n![1545615769372](/tupian/1545615769372.png)\n\n## 第二章 判断语句：if语句\n\n### 2.1 if语句格式1\n\n```java\n格式：\nif (关系表达式) {\n    语句体;\t\n}\n```\n\n执行流程：\n\n①首先计算关系表达式的值\n\n②如果关系表达式的值为true就执行语句体\n\n③如果关系表达式的值为false就不执行语句体\n\n④继续执行后面的语句内容\n\n![1545616039363](/tupian/1545616039363.png)\n\n示例：\n\n```java\npublic class IfDemo {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"开始\");\t\n\t\t//定义两个变量\n\t\tint a = 10;\n\t\tint b = 20;\t\n\t\t//需求：判断a和b的值是否相等，如果相等，就在控制台输出：a等于b\n\t\tif(a == b) {\n\t\t\tSystem.out.println(\"a等于b\");\n\t\t}\t\t\n\t\t//需求：判断a和c的值是否相等，如果相等，就在控制台输出：a等于c\n\t\tint c = 10;\n\t\tif(a == c) {\n\t\t\tSystem.out.println(\"a等于c\");\n\t\t}\t\t\n\t\tSystem.out.println(\"结束\");\n\t}\n}\n```\n\n#### 练习1：老丈人选女婿\n\n需求：\n\n​\t键盘录入女婿的酒量，如果大于2斤，老丈人给出回应，否则没有任何回应\n\n代码示例：\n\n```java\n//分析：\n//1.键盘录入女婿的酒量\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入女婿的酒量\");\nint wine = sc.nextInt();//5\n//2.对酒量进行一个判断即可\nif(wine > 2) {\n    System.out.println(\"不错哟，小伙子！\");\n}\n```\n\n#### 练习2：考试奖励\n\n需求：\n\n​\t键盘录入一个整数，表示小明的考试名次，如果名次为1，小红可以当小明的女朋有了。\n\n代码示例：\n\n```java\n//分析：\n//1.键盘录入一个整数，表示小明的考试名次\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入小明的名次\");\nint rank = sc.nextInt();\n//2.对小明的考试成绩进行判断即可\nif(rank == 1){\n    System.out.println(\"小红成为了小明的女朋友\");\n}\n```\n\n#### 第一种格式的细节：\n\n1. 如果我们要对一个布尔类型的变量进行判断，不要写==，直接把变量写在小括号中即可。\n\n2. 如果大括号中的语句体只有一条，那么大括号可以省略不写\n\n   如果大括号省略了，那么if只能控制距离他最近的那一条语句。\n\n   **建议：**自己不要去写，如果别人这么写了，你要能看懂即可。\n\n### 2.2 if语句格式2\n\n```java\n格式：\nif (关系表达式) {\n    语句体1;\t\n} else {\n    语句体2;\t\n}\n```\n\n执行流程：\n\n①首先计算关系表达式的值\n\n②如果关系表达式的值为true就执行语句体1\n\n③如果关系表达式的值为false就执行语句体2\n\n④继续执行后面的语句内容\n\n![1545616221283](/tupian/1545616221283.png)\n\n示例：\n\n```java\npublic class IfDemo02 {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"开始\");\t\t\n\t\t//定义两个变量\n\t\tint a = 10;\n\t\tint b = 20;\n\t\t//需求：判断a是否大于b，如果是，在控制台输出：a的值大于b，否则，在控制台输出：a的值不大于b\n\t\tif(a > b) {\n\t\t\tSystem.out.println(\"a的值大于b\");\n\t\t} else {\n\t\t\tSystem.out.println(\"a的值不大于b\");\n\t\t}\t\t\n\t\tSystem.out.println(\"结束\");\n\t}\n}\n```\n\n#### 练习1：吃饭\n\n需求：\n\n​\t    键盘录入一个整数，表示身上的钱。\n\n​            如果大于等于100块，就是网红餐厅。\n\n​            否则，就吃经济实惠的沙县小吃。\n\n代码示例：\n\n```java\n//分析：\n//1.键盘录入一个整数。表示身上的钱。\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入一个整数表示身上的钱\");\nint money = sc.nextInt();\n//2.对钱进行判断\nif(money >= 100){\n    System.out.println(\"吃网红餐厅\");\n}else{\n    System.out.println(\"福建大酒店\");\n}\n```\n\n#### 练习2：影院选座\n\n需求：\n\n​\t在实际开发中，电影院选座也会使用到if判断。\n\n​\t假设某影院售卖了100张票，票的序号为1~100。\n\n​\t其中奇数票号坐左侧，偶数票号坐右侧。\n\n​\t键盘录入一个整数表示电影票的票号。\n\n​\t根据不同情况，给出不同的提示：\n\n​\t\t如果票号为奇数，那么打印坐左边。\n\n​\t\t如果票号为偶数，那么打印坐右边。\n\n代码示例：\n\n```java\n//分析：\n//1.键盘录入票号\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入票号\");\nint ticket = sc.nextInt();\nif(ticket >= 1 && ticket <= 100){\n    //合法\n    //2.对票号进行判断\n    if (ticket % 2 == 0) {\n        //偶数\n        System.out.println(\"坐右边\");\n    } else {\n        //奇数\n        System.out.println(\"坐左边\");\n    }\n}else{\n    //票号不合法\n    System.out.println(\"票号不合法\");\n}\n```\n\n### 2.3 if语句格式3\n\n```java\n格式：\nif (关系表达式1) {\n    语句体1;\t\n} else if (关系表达式2) {\n    语句体2;\t\n} \n…\nelse {\n    语句体n+1;\n}\n```\n\n执行流程：\n\n①首先计算关系表达式1的值\n\n②如果值为true就执行语句体1；如果值为false就计算关系表达式2的值\n\n③如果值为true就执行语句体2；如果值为false就计算关系表达式3的值\n\n④…\n\n⑤如果没有任何关系表达式为true，就执行语句体n+1。\n\n![1545616667104](/tupian/1545616667104.png)\n\n#### 练习1：考试奖励\n\n需求：\n\n​\t小明快要期末考试了，小明爸爸对他说，会根据他不同的考试成绩，送他不同的礼物，\n\n假如你可以控制小明的得分，请用程序实现小明到底该获得什么样的礼物，并在控制台输出。\n\n分析：\n\n​\t①小明的考试成绩未知，可以使用键盘录入的方式获取值\n\n​\t②由于奖励种类较多，属于多种判断，采用if...else...if格式实现\n\n​\t③为每种判断设置对应的条件\n\n​\t④为每种判断设置对应的奖励\n\n代码示例：\n\n```java\n//95~100 自行车一辆\n//90~94   游乐场玩一天\n//80 ~ 89 变形金刚一个\n//80 以下  胖揍一顿\n\n//1.键盘录入一个值表示小明的分数\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入小明的成绩\");\nint score = sc.nextInt();\n//2.对分数的有效性进行判断\nif(score >= 0 && score <= 100){\n    //有效的分数\n    //3.对小明的分数进行判断，不同情况执行不同的代码\n    if(score >= 95 && score <= 100){\n        System.out.println(\"送自行车一辆\");\n    }else if(score >= 90 && score <= 94){\n        System.out.println(\"游乐场玩一天\");\n    }else if(score >= 80 && score <= 89){\n        System.out.println(\"变形金刚一个\");\n    }else{\n        System.out.println(\"胖揍一顿\");\n    }\n}else{\n    //无效的分数\n    System.out.println(\"分数不合法\");\n}\n```\n\n## 第三章 switch语句\n\n### 3.1 格式\n\n```java\nswitch (表达式) {\n\tcase 1:\n\t\t语句体1;\n\t\tbreak;\n\tcase 2:\n\t\t语句体2;\n\t\tbreak;\n\t...\n\tdefault:\n\t\t语句体n+1;\n\t\tbreak;\n}\n```\n\n### 3.2 **执行流程：**\n\n- 首先计算出表达式的值 \n- 其次，和case依次比较，一旦有对应的值，就会执行相应的语句，在执行的过程中，遇到break就会结 束。 \n- 最后，如果所有的case都和表达式的值不匹配，就会执行default语句体部分，然后程序结束掉。 \n\n#### 练习：运动计划\n\n- 需求：键盘录入星期数，显示今天的减肥活动。\n\n  周一：跑步  \n\n  周二：游泳  \n\n  周三：慢走  \n\n  周四：动感单车\n\n  周五：拳击  \n\n  周六：爬山  \n\n  周日：好好吃一顿\n\n- 代码示例：\n\n```java\npackage a01switch选择语句;\n\nimport java.util.Scanner;\n\npublic class SwitchDemo2 {\n    public static void main(String[] args) {\n        //1.键盘录入一个整数表示星期\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"请输入一个整数表示星期\");\n        int week = sc.nextInt();\n\n        //2.书写一个switch语句去跟week进行匹配\n        switch (week){\n            case 1:\n                System.out.println(\"跑步\");\n                break;\n            case 2:\n                System.out.println(\"游泳\");\n                break;\n            case 3:\n                System.out.println(\"慢走\");\n                break;\n            case 4:\n                System.out.println(\"动感单车\");\n                break;\n            case 5:\n                System.out.println(\"拳击\");\n                break;\n            case 6:\n                System.out.println(\"爬山\");\n                break;\n            case 7:\n                System.out.println(\"好好吃一顿\");\n                break;\n            default:\n                System.out.println(\"输入错误，没有这个星期\");\n                break;\n        }\n    }\n}\n```\n\n### 3.3 switch的扩展知识：\n\n- default的位置和省略情况\n\n  default可以放在任意位置，也可以省略\n\n- case穿透\n\n  不写break会引发case穿透现象\n\n- switch在JDK12的新特性\n\n```java\nint number = 10;\nswitch (number) {\n    case 1 -> System.out.println(\"一\");\n    case 2 -> System.out.println(\"二\");\n    case 3 -> System.out.println(\"三\");\n    default -> System.out.println(\"其他\");\n}\n```\n\n- switch和if第三种格式各自的使用场景\n\n当我们需要对一个范围进行判断的时候，用if的第三种格式\n\n当我们把有限个数据列举出来，选择其中一个执行的时候，用switch语句\n\n比如：\n\n​\t小明的考试成绩，如果用switch，那么需要写100个case，太麻烦了，所以用if简单。\n\n​\t如果是星期，月份，客服电话中0~9的功能选择就可以用switch\n\n#### 练习：休息日和工作日\n\n需求：键盘录入星期数，输出工作日、休息日。\n\n(1-5) 工作日，(6-7)休息日。\n\n代码示例：\n\n```java\n//分析：\n//1.键盘录入星期数\nScanner sc = new Scanner(System.in);\nSystem.out.println(\"请输入星期\");\nint week = sc.nextInt();//3\n//2.利用switch进行匹配\n----------------------------------------------------\n利用case穿透简化代码\nswitch (week){\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n        System.out.println(\"工作日\");\n        break;\n    case 6:\n    case 7:\n        System.out.println(\"休息日\");\n        break;\n    default:\n        System.out.println(\"没有这个星期\");\n        break;\n}\n----------------------------------------------------\n利用JDK12简化代码书写\nswitch (week) {\n    case 1, 2, 3, 4, 5 -> System.out.println(\"工作日\");\n    case 6, 7 -> System.out.println(\"休息日\");\n    default -> System.out.println(\"没有这个星期\");\n}\n```\n\n## 第四章 循环结构\n\n### 4.1 for循环结构（掌握）\n\n​\t循环语句可以在满足循环条件的情况下，反复执行某一段代码，这段被重复执行的代码被称为循环体语句，当反复 执行这个循环体时，需要在合适的时候把循环判断条件修改为false，从而结束循环，否则循环将一直执行下去，形 成死循环。 \n\n#### 4.1.1 for循环格式：\n\n```java\nfor (初始化语句;条件判断语句;条件控制语句) {\n\t循环体语句;\n}\n```\n\n**格式解释：**\n\n- 初始化语句：  用于表示循环开启时的起始状态，简单说就是循环开始的时候什么样\n- 条件判断语句：用于表示循环反复执行的条件，简单说就是判断循环是否能一直执行下去\n- 循环体语句：  用于表示循环反复执行的内容，简单说就是循环反复执行的事情\n- 条件控制语句：用于表示循环执行中每次变化的内容，简单说就是控制循环是否能执行下去\n\n**执行流程：**\n\n①执行初始化语句\n\n②执行条件判断语句，看其结果是true还是false\n\n​             如果是false，循环结束\n\n​             如果是true，继续执行\n\n③执行循环体语句\n\n④执行条件控制语句\n\n⑤回到②继续\n\n**for循环书写技巧：**\n\n- 确定循环的开始条件\n- 确定循环的结束条件\n- 确定循环要重复执行的代码\n\n代码示例：\n\n```java\n//1.确定循环的开始条件\n//2.确定循环的结束条件\n//3.确定要重复执行的代码\n\n//需求：打印5次HelloWorld\n//开始条件：1\n//结束条件：5\n//重复代码：打印语句\n\nfor (int i = 1; i <= 5; i++) {\n    System.out.println(\"HelloWorld\");\n}\n```\n\n##### for循环练习-输出数据\n\n- 需求：在控制台输出1-5和5-1的数据 \n- 示例代码：\n\n```java\npublic class ForTest01 {\n    public static void main(String[] args) {\n\t\t//需求：输出数据1-5\n        for(int i=1; i<=5; i++) {\n\t\t\tSystem.out.println(i);\n\t\t}\n\t\tSystem.out.println(\"--------\");\n\t\t//需求：输出数据5-1\n\t\tfor(int i=5; i>=1; i--) {\n\t\t\tSystem.out.println(i);\n\t\t}\n    }\n}\n```\n\n\n\n##### for循环练习-求和\n\n- 需求：求1-5之间的数据和，并把求和结果在控制台输出  \n- 示例代码：\n\n```java\npublic class ForTest02 {\n    public static void main(String[] args) {\n\t\t//求和的最终结果必须保存起来，需要定义一个变量，用于保存求和的结果，初始值为0\n\t\tint sum = 0;\n\t\t//从1开始到5结束的数据，使用循环结构完成\n\t\tfor(int i=1; i<=5; i++) {\n\t\t\t//将反复进行的事情写入循环结构内部\n             // 此处反复进行的事情是将数据 i 加到用于保存最终求和的变量 sum 中\n\t\t\tsum = sum + i;\n\t\t\t/*\n\t\t\t\tsum += i;\tsum = sum + i;\n\t\t\t\t第一次：sum = sum + i = 0 + 1 = 1;\n\t\t\t\t第二次：sum = sum + i = 1 + 2 = 3;\n\t\t\t\t第三次：sum = sum + i = 3 + 3 = 6;\n\t\t\t\t第四次：sum = sum + i = 6 + 4 = 10;\n\t\t\t\t第五次：sum = sum + i = 10 + 5 = 15;\n\t\t\t*/\n\t\t}\n\t\t//当循环执行完毕时，将最终数据打印出来\n\t\tSystem.out.println(\"1-5之间的数据和是：\" + sum);\n    }\n}\n```\n\n- 本题要点：\n  - 今后遇到的需求中，如果带有求和二字，请立即联想到求和变量\n  - 求和变量的定义位置，必须在循环外部，如果在循环内部则计算出的数据将是错误的\n\n##### for循环练习-求偶数和\n\n- 需求：求1-100之间的偶数和，并把求和结果在控制台输出 }\n- 示例代码：\n\n```java\npublic class ForTest03 {\n    public static void main(String[] args) {\n\t\t//求和的最终结果必须保存起来，需要定义一个变量，用于保存求和的结果，初始值为0\n\t\tint sum = 0;\n\t\t//对1-100的数据求和与1-5的数据求和几乎完全一样，仅仅是结束条件不同\n\t\tfor(int i=1; i<=100; i++) {\n\t\t\t//对1-100的偶数求和，需要对求和操作添加限制条件，判断是否是偶数\n\t\t\tif(i%2 == 0) {\n                //sum += i；\n\t\t\t\tsum = sum + i;\n\t\t\t}\n\t\t}\n\t\t//当循环执行完毕时，将最终数据打印出来\n\t\tSystem.out.println(\"1-100之间的偶数和是：\" + sum);\n    }\n}\n```\n\n##### for循环练习-统计次数\n\n需求：\n\n​\t  键盘录入两个数字，表示一个范围。\n\n​           统计这个范围中。\n\n​           既能被3整除，又能被5整除数字有多少个？\n\n代码示例：\n\n```java\n\n```\n\n### 4.2 while循环\n\n#### 4.2.1 格式：\n\n```java\n初始化语句;\nwhile(条件判断语句){\n\t循环体;\n\t条件控制语句;\n}\n```\n\n##### 练习1：打印5次HelloWorld\n\n```java\nint i = 1;\nwhile(i <= 5){\n    System.out.println(\"HelloWorld\");\n    i++;\n}\nSystem.out.println(i);\n```\n\n##### 练习2：珠穆朗玛峰\n\n```java\n//1.定义一个变量表示珠穆朗玛峰的高度\nint height = 8844430;\n//2.定义一个变量表示纸张的厚度\ndouble paper = 0.1;\n\n//定义一个计数器（变量），用来统计折叠的次数\nint count = 0;\n\n//3.循环折叠纸张\n//只有纸张的厚度 < 穆朗玛峰的高度 循环才继续，否则循环就停止\n//坑：只有判断为真，循环才会继续\nwhile(paper < height){\n    //折叠纸张\n    paper = paper * 2;\n    count++;\n}\n\n//4.打印一下纸张的厚度\nSystem.out.println(count);//27\n```\n\n### 4.3 do...while循环\n\n本知识点了解即可\n\n格式：\n\n```java\n初始化语句;\ndo{\n    循环体;\n    条件控制语句;\n}while(条件判断语句);\n```\n\n特点：\n\n​\t先执行，再判断。\n\n### 4.4 三种格式的区别：\n\n​\tfor和while循环，是先判断，再执行。\n\n​\tdo...while是先执行，再判断。\n\n​\t当知道循环次数或者循环范围的时候，用for循环。\n\n​\t当不知道循环次数，也不知道循环范围，但是知道循环的结束条件时，用while循环。","slug":"day04-流程控制语句","published":1,"updated":"2024-12-12T09:50:46.151Z","comments":1,"layout":"post","_id":"cm4ld1o8b001lqstoa1hh7r09","content":"<h2 id=\"第一章-流程控制语句\"><a href=\"#第一章-流程控制语句\" class=\"headerlink\" title=\"第一章 流程控制语句\"></a>第一章 流程控制语句</h2><p>在一个程序执行的过程中，各条语句的执行顺序对程序的结果是有直接影响的。所以，我们必须清楚每条语句的执行流程。而且，很多时候要通过控制语句的执行顺序来实现我们想要的功能。</p>\n<h3 id=\"1-1-流程控制语句分类\"><a href=\"#1-1-流程控制语句分类\" class=\"headerlink\" title=\"1.1 流程控制语句分类\"></a>1.1 流程控制语句分类</h3><p>​\t顺序结构</p>\n<p>​\t判断和选择结构(if, switch)</p>\n<p>​\t循环结构(for, while, do…while)</p>\n<h3 id=\"1-2-顺序结构\"><a href=\"#1-2-顺序结构\" class=\"headerlink\" title=\"1.2 顺序结构\"></a>1.2 顺序结构</h3><p>顺序结构是程序中最简单最基本的流程控制，没有特定的语法结构，按照代码的先后顺序，依次执行，程序中大多数的代码都是这样执行的。</p>\n<p>顺序结构执行流程图：</p>\n<p><img src=\"/tupian/1545615769372.png\" alt=\"1545615769372\"></p>\n<h2 id=\"第二章-判断语句：if语句\"><a href=\"#第二章-判断语句：if语句\" class=\"headerlink\" title=\"第二章 判断语句：if语句\"></a>第二章 判断语句：if语句</h2><h3 id=\"2-1-if语句格式1\"><a href=\"#2-1-if语句格式1\" class=\"headerlink\" title=\"2.1 if语句格式1\"></a>2.1 if语句格式1</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：</span><br><span class=\"line\"><span class=\"keyword\">if</span> (关系表达式) &#123;</span><br><span class=\"line\">    语句体;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行流程：</p>\n<p>①首先计算关系表达式的值</p>\n<p>②如果关系表达式的值为true就执行语句体</p>\n<p>③如果关系表达式的值为false就不执行语句体</p>\n<p>④继续执行后面的语句内容</p>\n<p><img src=\"/tupian/1545616039363.png\" alt=\"1545616039363\"></p>\n<p>示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IfDemo</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;开始&quot;</span>);\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//定义两个变量</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//需求：判断a和b的值是否相等，如果相等，就在控制台输出：a等于b</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a == b) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;a等于b&quot;</span>);</span><br><span class=\"line\">\t\t&#125;\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//需求：判断a和c的值是否相等，如果相等，就在控制台输出：a等于c</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a == c) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;a等于c&quot;</span>);</span><br><span class=\"line\">\t\t&#125;\t\t</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;结束&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"练习1：老丈人选女婿\"><a href=\"#练习1：老丈人选女婿\" class=\"headerlink\" title=\"练习1：老丈人选女婿\"></a>练习1：老丈人选女婿</h4><p>需求：</p>\n<p>​\t键盘录入女婿的酒量，如果大于2斤，老丈人给出回应，否则没有任何回应</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.键盘录入女婿的酒量</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入女婿的酒量&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">wine</span> <span class=\"operator\">=</span> sc.nextInt();<span class=\"comment\">//5</span></span><br><span class=\"line\"><span class=\"comment\">//2.对酒量进行一个判断即可</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(wine &gt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;不错哟，小伙子！&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"练习2：考试奖励\"><a href=\"#练习2：考试奖励\" class=\"headerlink\" title=\"练习2：考试奖励\"></a>练习2：考试奖励</h4><p>需求：</p>\n<p>​\t键盘录入一个整数，表示小明的考试名次，如果名次为1，小红可以当小明的女朋有了。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.键盘录入一个整数，表示小明的考试名次</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入小明的名次&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">rank</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\"><span class=\"comment\">//2.对小明的考试成绩进行判断即可</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(rank == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;小红成为了小明的女朋友&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"第一种格式的细节：\"><a href=\"#第一种格式的细节：\" class=\"headerlink\" title=\"第一种格式的细节：\"></a>第一种格式的细节：</h4><ol>\n<li><p>如果我们要对一个布尔类型的变量进行判断，不要写&#x3D;&#x3D;，直接把变量写在小括号中即可。</p>\n</li>\n<li><p>如果大括号中的语句体只有一条，那么大括号可以省略不写</p>\n<p>如果大括号省略了，那么if只能控制距离他最近的那一条语句。</p>\n<p><strong>建议：</strong>自己不要去写，如果别人这么写了，你要能看懂即可。</p>\n</li>\n</ol>\n<h3 id=\"2-2-if语句格式2\"><a href=\"#2-2-if语句格式2\" class=\"headerlink\" title=\"2.2 if语句格式2\"></a>2.2 if语句格式2</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：</span><br><span class=\"line\"><span class=\"keyword\">if</span> (关系表达式) &#123;</span><br><span class=\"line\">    语句体<span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    语句体<span class=\"number\">2</span>;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行流程：</p>\n<p>①首先计算关系表达式的值</p>\n<p>②如果关系表达式的值为true就执行语句体1</p>\n<p>③如果关系表达式的值为false就执行语句体2</p>\n<p>④继续执行后面的语句内容</p>\n<p><img src=\"/tupian/1545616221283.png\" alt=\"1545616221283\"></p>\n<p>示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IfDemo02</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;开始&quot;</span>);\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//定义两个变量</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//需求：判断a是否大于b，如果是，在控制台输出：a的值大于b，否则，在控制台输出：a的值不大于b</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a &gt; b) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;a的值大于b&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;a的值不大于b&quot;</span>);</span><br><span class=\"line\">\t\t&#125;\t\t</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;结束&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"练习1：吃饭\"><a href=\"#练习1：吃饭\" class=\"headerlink\" title=\"练习1：吃饭\"></a>练习1：吃饭</h4><p>需求：</p>\n<p>​\t    键盘录入一个整数，表示身上的钱。</p>\n<p>​            如果大于等于100块，就是网红餐厅。</p>\n<p>​            否则，就吃经济实惠的沙县小吃。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.键盘录入一个整数。表示身上的钱。</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入一个整数表示身上的钱&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">money</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\"><span class=\"comment\">//2.对钱进行判断</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(money &gt;= <span class=\"number\">100</span>)&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;吃网红餐厅&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;福建大酒店&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"练习2：影院选座\"><a href=\"#练习2：影院选座\" class=\"headerlink\" title=\"练习2：影院选座\"></a>练习2：影院选座</h4><p>需求：</p>\n<p>​\t在实际开发中，电影院选座也会使用到if判断。</p>\n<p>​\t假设某影院售卖了100张票，票的序号为1~100。</p>\n<p>​\t其中奇数票号坐左侧，偶数票号坐右侧。</p>\n<p>​\t键盘录入一个整数表示电影票的票号。</p>\n<p>​\t根据不同情况，给出不同的提示：</p>\n<p>​\t\t如果票号为奇数，那么打印坐左边。</p>\n<p>​\t\t如果票号为偶数，那么打印坐右边。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.键盘录入票号</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入票号&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">ticket</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\"><span class=\"keyword\">if</span>(ticket &gt;= <span class=\"number\">1</span> &amp;&amp; ticket &lt;= <span class=\"number\">100</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//合法</span></span><br><span class=\"line\">    <span class=\"comment\">//2.对票号进行判断</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ticket % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//偶数</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;坐右边&quot;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//奇数</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;坐左边&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//票号不合法</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;票号不合法&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-if语句格式3\"><a href=\"#2-3-if语句格式3\" class=\"headerlink\" title=\"2.3 if语句格式3\"></a>2.3 if语句格式3</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：</span><br><span class=\"line\"><span class=\"keyword\">if</span> (关系表达式<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    语句体<span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (关系表达式<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    语句体<span class=\"number\">2</span>;\t</span><br><span class=\"line\">&#125; </span><br><span class=\"line\">…</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    语句体n+<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行流程：</p>\n<p>①首先计算关系表达式1的值</p>\n<p>②如果值为true就执行语句体1；如果值为false就计算关系表达式2的值</p>\n<p>③如果值为true就执行语句体2；如果值为false就计算关系表达式3的值</p>\n<p>④…</p>\n<p>⑤如果没有任何关系表达式为true，就执行语句体n+1。</p>\n<p><img src=\"/tupian/1545616667104.png\" alt=\"1545616667104\"></p>\n<h4 id=\"练习1：考试奖励\"><a href=\"#练习1：考试奖励\" class=\"headerlink\" title=\"练习1：考试奖励\"></a>练习1：考试奖励</h4><p>需求：</p>\n<p>​\t小明快要期末考试了，小明爸爸对他说，会根据他不同的考试成绩，送他不同的礼物，</p>\n<p>假如你可以控制小明的得分，请用程序实现小明到底该获得什么样的礼物，并在控制台输出。</p>\n<p>分析：</p>\n<p>​\t①小明的考试成绩未知，可以使用键盘录入的方式获取值</p>\n<p>​\t②由于奖励种类较多，属于多种判断，采用if…else…if格式实现</p>\n<p>​\t③为每种判断设置对应的条件</p>\n<p>​\t④为每种判断设置对应的奖励</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//95~100 自行车一辆</span></span><br><span class=\"line\"><span class=\"comment\">//90~94   游乐场玩一天</span></span><br><span class=\"line\"><span class=\"comment\">//80 ~ 89 变形金刚一个</span></span><br><span class=\"line\"><span class=\"comment\">//80 以下  胖揍一顿</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//1.键盘录入一个值表示小明的分数</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入小明的成绩&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">score</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\"><span class=\"comment\">//2.对分数的有效性进行判断</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(score &gt;= <span class=\"number\">0</span> &amp;&amp; score &lt;= <span class=\"number\">100</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//有效的分数</span></span><br><span class=\"line\">    <span class=\"comment\">//3.对小明的分数进行判断，不同情况执行不同的代码</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(score &gt;= <span class=\"number\">95</span> &amp;&amp; score &lt;= <span class=\"number\">100</span>)&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;送自行车一辆&quot;</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(score &gt;= <span class=\"number\">90</span> &amp;&amp; score &lt;= <span class=\"number\">94</span>)&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;游乐场玩一天&quot;</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(score &gt;= <span class=\"number\">80</span> &amp;&amp; score &lt;= <span class=\"number\">89</span>)&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;变形金刚一个&quot;</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;胖揍一顿&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//无效的分数</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;分数不合法&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"第三章-switch语句\"><a href=\"#第三章-switch语句\" class=\"headerlink\" title=\"第三章 switch语句\"></a>第三章 switch语句</h2><h3 id=\"3-1-格式\"><a href=\"#3-1-格式\" class=\"headerlink\" title=\"3.1 格式\"></a>3.1 格式</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> (表达式) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">\t\t语句体<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">\t\t语句体<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t语句体n+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-执行流程：\"><a href=\"#3-2-执行流程：\" class=\"headerlink\" title=\"3.2 执行流程：\"></a>3.2 <strong>执行流程：</strong></h3><ul>\n<li>首先计算出表达式的值 </li>\n<li>其次，和case依次比较，一旦有对应的值，就会执行相应的语句，在执行的过程中，遇到break就会结 束。 </li>\n<li>最后，如果所有的case都和表达式的值不匹配，就会执行default语句体部分，然后程序结束掉。</li>\n</ul>\n<h4 id=\"练习：运动计划\"><a href=\"#练习：运动计划\" class=\"headerlink\" title=\"练习：运动计划\"></a>练习：运动计划</h4><ul>\n<li><p>需求：键盘录入星期数，显示今天的减肥活动。</p>\n<p>周一：跑步  </p>\n<p>周二：游泳  </p>\n<p>周三：慢走  </p>\n<p>周四：动感单车</p>\n<p>周五：拳击  </p>\n<p>周六：爬山  </p>\n<p>周日：好好吃一顿</p>\n</li>\n<li><p>代码示例：</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> a01switch选择语句;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SwitchDemo2</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.键盘录入一个整数表示星期</span></span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入一个整数表示星期&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">week</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.书写一个switch语句去跟week进行匹配</span></span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (week)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;跑步&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;游泳&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;慢走&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;动感单车&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;拳击&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;爬山&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;好好吃一顿&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;输入错误，没有这个星期&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-switch的扩展知识：\"><a href=\"#3-3-switch的扩展知识：\" class=\"headerlink\" title=\"3.3 switch的扩展知识：\"></a>3.3 switch的扩展知识：</h3><ul>\n<li><p>default的位置和省略情况</p>\n<p>default可以放在任意位置，也可以省略</p>\n</li>\n<li><p>case穿透</p>\n<p>不写break会引发case穿透现象</p>\n</li>\n<li><p>switch在JDK12的新特性</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">switch</span> (number) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span> -&gt; System.out.println(<span class=\"string\">&quot;一&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span> -&gt; System.out.println(<span class=\"string\">&quot;二&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">3</span> -&gt; System.out.println(<span class=\"string\">&quot;三&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">default</span> -&gt; System.out.println(<span class=\"string\">&quot;其他&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>switch和if第三种格式各自的使用场景</li>\n</ul>\n<p>当我们需要对一个范围进行判断的时候，用if的第三种格式</p>\n<p>当我们把有限个数据列举出来，选择其中一个执行的时候，用switch语句</p>\n<p>比如：</p>\n<p>​\t小明的考试成绩，如果用switch，那么需要写100个case，太麻烦了，所以用if简单。</p>\n<p>​\t如果是星期，月份，客服电话中0~9的功能选择就可以用switch</p>\n<h4 id=\"练习：休息日和工作日\"><a href=\"#练习：休息日和工作日\" class=\"headerlink\" title=\"练习：休息日和工作日\"></a>练习：休息日和工作日</h4><p>需求：键盘录入星期数，输出工作日、休息日。</p>\n<p>(1-5) 工作日，(6-7)休息日。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.键盘录入星期数</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入星期&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">week</span> <span class=\"operator\">=</span> sc.nextInt();<span class=\"comment\">//3</span></span><br><span class=\"line\"><span class=\"comment\">//2.利用switch进行匹配</span></span><br><span class=\"line\">----------------------------------------------------</span><br><span class=\"line\">利用<span class=\"keyword\">case</span>穿透简化代码</span><br><span class=\"line\"><span class=\"keyword\">switch</span> (week)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;工作日&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;休息日&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;没有这个星期&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">----------------------------------------------------</span><br><span class=\"line\">利用JDK12简化代码书写</span><br><span class=\"line\"><span class=\"keyword\">switch</span> (week) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span> -&gt; System.out.println(<span class=\"string\">&quot;工作日&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">6</span>, <span class=\"number\">7</span> -&gt; System.out.println(<span class=\"string\">&quot;休息日&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">default</span> -&gt; System.out.println(<span class=\"string\">&quot;没有这个星期&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"第四章-循环结构\"><a href=\"#第四章-循环结构\" class=\"headerlink\" title=\"第四章 循环结构\"></a>第四章 循环结构</h2><h3 id=\"4-1-for循环结构（掌握）\"><a href=\"#4-1-for循环结构（掌握）\" class=\"headerlink\" title=\"4.1 for循环结构（掌握）\"></a>4.1 for循环结构（掌握）</h3><p>​\t循环语句可以在满足循环条件的情况下，反复执行某一段代码，这段被重复执行的代码被称为循环体语句，当反复 执行这个循环体时，需要在合适的时候把循环判断条件修改为false，从而结束循环，否则循环将一直执行下去，形 成死循环。 </p>\n<h4 id=\"4-1-1-for循环格式：\"><a href=\"#4-1-1-for循环格式：\" class=\"headerlink\" title=\"4.1.1 for循环格式：\"></a>4.1.1 for循环格式：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (初始化语句;条件判断语句;条件控制语句) &#123;</span><br><span class=\"line\">\t循环体语句;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>格式解释：</strong></p>\n<ul>\n<li>初始化语句：  用于表示循环开启时的起始状态，简单说就是循环开始的时候什么样</li>\n<li>条件判断语句：用于表示循环反复执行的条件，简单说就是判断循环是否能一直执行下去</li>\n<li>循环体语句：  用于表示循环反复执行的内容，简单说就是循环反复执行的事情</li>\n<li>条件控制语句：用于表示循环执行中每次变化的内容，简单说就是控制循环是否能执行下去</li>\n</ul>\n<p><strong>执行流程：</strong></p>\n<p>①执行初始化语句</p>\n<p>②执行条件判断语句，看其结果是true还是false</p>\n<p>​             如果是false，循环结束</p>\n<p>​             如果是true，继续执行</p>\n<p>③执行循环体语句</p>\n<p>④执行条件控制语句</p>\n<p>⑤回到②继续</p>\n<p><strong>for循环书写技巧：</strong></p>\n<ul>\n<li>确定循环的开始条件</li>\n<li>确定循环的结束条件</li>\n<li>确定循环要重复执行的代码</li>\n</ul>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.确定循环的开始条件</span></span><br><span class=\"line\"><span class=\"comment\">//2.确定循环的结束条件</span></span><br><span class=\"line\"><span class=\"comment\">//3.确定要重复执行的代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//需求：打印5次HelloWorld</span></span><br><span class=\"line\"><span class=\"comment\">//开始条件：1</span></span><br><span class=\"line\"><span class=\"comment\">//结束条件：5</span></span><br><span class=\"line\"><span class=\"comment\">//重复代码：打印语句</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;HelloWorld&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"for循环练习-输出数据\"><a href=\"#for循环练习-输出数据\" class=\"headerlink\" title=\"for循环练习-输出数据\"></a>for循环练习-输出数据</h5><ul>\n<li>需求：在控制台输出1-5和5-1的数据 </li>\n<li>示例代码：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ForTest01</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//需求：输出数据1-5</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(i);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;--------&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//需求：输出数据5-1</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">5</span>; i&gt;=<span class=\"number\">1</span>; i--) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(i);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"for循环练习-求和\"><a href=\"#for循环练习-求和\" class=\"headerlink\" title=\"for循环练习-求和\"></a>for循环练习-求和</h5><ul>\n<li>需求：求1-5之间的数据和，并把求和结果在控制台输出  </li>\n<li>示例代码：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ForTest02</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//求和的最终结果必须保存起来，需要定义一个变量，用于保存求和的结果，初始值为0</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//从1开始到5结束的数据，使用循环结构完成</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//将反复进行的事情写入循环结构内部</span></span><br><span class=\"line\">             <span class=\"comment\">// 此处反复进行的事情是将数据 i 加到用于保存最终求和的变量 sum 中</span></span><br><span class=\"line\">\t\t\tsum = sum + i;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\tsum += i;\tsum = sum + i;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t第一次：sum = sum + i = 0 + 1 = 1;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t第二次：sum = sum + i = 1 + 2 = 3;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t第三次：sum = sum + i = 3 + 3 = 6;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t第四次：sum = sum + i = 6 + 4 = 10;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t第五次：sum = sum + i = 10 + 5 = 15;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t*/</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//当循环执行完毕时，将最终数据打印出来</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;1-5之间的数据和是：&quot;</span> + sum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>本题要点：<ul>\n<li>今后遇到的需求中，如果带有求和二字，请立即联想到求和变量</li>\n<li>求和变量的定义位置，必须在循环外部，如果在循环内部则计算出的数据将是错误的</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"for循环练习-求偶数和\"><a href=\"#for循环练习-求偶数和\" class=\"headerlink\" title=\"for循环练习-求偶数和\"></a>for循环练习-求偶数和</h5><ul>\n<li>需求：求1-100之间的偶数和，并把求和结果在控制台输出 }</li>\n<li>示例代码：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ForTest03</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//求和的最终结果必须保存起来，需要定义一个变量，用于保存求和的结果，初始值为0</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//对1-100的数据求和与1-5的数据求和几乎完全一样，仅仅是结束条件不同</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//对1-100的偶数求和，需要对求和操作添加限制条件，判断是否是偶数</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(i%<span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//sum += i；</span></span><br><span class=\"line\">\t\t\t\tsum = sum + i;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//当循环执行完毕时，将最终数据打印出来</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;1-100之间的偶数和是：&quot;</span> + sum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"for循环练习-统计次数\"><a href=\"#for循环练习-统计次数\" class=\"headerlink\" title=\"for循环练习-统计次数\"></a>for循环练习-统计次数</h5><p>需求：</p>\n<p>​\t  键盘录入两个数字，表示一个范围。</p>\n<p>​           统计这个范围中。</p>\n<p>​           既能被3整除，又能被5整除数字有多少个？</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-while循环\"><a href=\"#4-2-while循环\" class=\"headerlink\" title=\"4.2 while循环\"></a>4.2 while循环</h3><h4 id=\"4-2-1-格式：\"><a href=\"#4-2-1-格式：\" class=\"headerlink\" title=\"4.2.1 格式：\"></a>4.2.1 格式：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">初始化语句;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(条件判断语句)&#123;</span><br><span class=\"line\">\t循环体;</span><br><span class=\"line\">\t条件控制语句;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"练习1：打印5次HelloWorld\"><a href=\"#练习1：打印5次HelloWorld\" class=\"headerlink\" title=\"练习1：打印5次HelloWorld\"></a>练习1：打印5次HelloWorld</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(i &lt;= <span class=\"number\">5</span>)&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;HelloWorld&quot;</span>);</span><br><span class=\"line\">    i++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">System.out.println(i);</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"练习2：珠穆朗玛峰\"><a href=\"#练习2：珠穆朗玛峰\" class=\"headerlink\" title=\"练习2：珠穆朗玛峰\"></a>练习2：珠穆朗玛峰</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.定义一个变量表示珠穆朗玛峰的高度</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">height</span> <span class=\"operator\">=</span> <span class=\"number\">8844430</span>;</span><br><span class=\"line\"><span class=\"comment\">//2.定义一个变量表示纸张的厚度</span></span><br><span class=\"line\"><span class=\"type\">double</span> <span class=\"variable\">paper</span> <span class=\"operator\">=</span> <span class=\"number\">0.1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//定义一个计数器（变量），用来统计折叠的次数</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3.循环折叠纸张</span></span><br><span class=\"line\"><span class=\"comment\">//只有纸张的厚度 &lt; 穆朗玛峰的高度 循环才继续，否则循环就停止</span></span><br><span class=\"line\"><span class=\"comment\">//坑：只有判断为真，循环才会继续</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(paper &lt; height)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//折叠纸张</span></span><br><span class=\"line\">    paper = paper * <span class=\"number\">2</span>;</span><br><span class=\"line\">    count++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//4.打印一下纸张的厚度</span></span><br><span class=\"line\">System.out.println(count);<span class=\"comment\">//27</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-do…while循环\"><a href=\"#4-3-do…while循环\" class=\"headerlink\" title=\"4.3 do…while循环\"></a>4.3 do…while循环</h3><p>本知识点了解即可</p>\n<p>格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">初始化语句;</span><br><span class=\"line\"><span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">    循环体;</span><br><span class=\"line\">    条件控制语句;</span><br><span class=\"line\">&#125;<span class=\"keyword\">while</span>(条件判断语句);</span><br></pre></td></tr></table></figure>\n\n<p>特点：</p>\n<p>​\t先执行，再判断。</p>\n<h3 id=\"4-4-三种格式的区别：\"><a href=\"#4-4-三种格式的区别：\" class=\"headerlink\" title=\"4.4 三种格式的区别：\"></a>4.4 三种格式的区别：</h3><p>​\tfor和while循环，是先判断，再执行。</p>\n<p>​\tdo…while是先执行，再判断。</p>\n<p>​\t当知道循环次数或者循环范围的时候，用for循环。</p>\n<p>​\t当不知道循环次数，也不知道循环范围，但是知道循环的结束条件时，用while循环。</p>\n","length":8912,"excerpt":"","more":"<h2 id=\"第一章-流程控制语句\"><a href=\"#第一章-流程控制语句\" class=\"headerlink\" title=\"第一章 流程控制语句\"></a>第一章 流程控制语句</h2><p>在一个程序执行的过程中，各条语句的执行顺序对程序的结果是有直接影响的。所以，我们必须清楚每条语句的执行流程。而且，很多时候要通过控制语句的执行顺序来实现我们想要的功能。</p>\n<h3 id=\"1-1-流程控制语句分类\"><a href=\"#1-1-流程控制语句分类\" class=\"headerlink\" title=\"1.1 流程控制语句分类\"></a>1.1 流程控制语句分类</h3><p>​\t顺序结构</p>\n<p>​\t判断和选择结构(if, switch)</p>\n<p>​\t循环结构(for, while, do…while)</p>\n<h3 id=\"1-2-顺序结构\"><a href=\"#1-2-顺序结构\" class=\"headerlink\" title=\"1.2 顺序结构\"></a>1.2 顺序结构</h3><p>顺序结构是程序中最简单最基本的流程控制，没有特定的语法结构，按照代码的先后顺序，依次执行，程序中大多数的代码都是这样执行的。</p>\n<p>顺序结构执行流程图：</p>\n<p><img src=\"/tupian/1545615769372.png\" alt=\"1545615769372\"></p>\n<h2 id=\"第二章-判断语句：if语句\"><a href=\"#第二章-判断语句：if语句\" class=\"headerlink\" title=\"第二章 判断语句：if语句\"></a>第二章 判断语句：if语句</h2><h3 id=\"2-1-if语句格式1\"><a href=\"#2-1-if语句格式1\" class=\"headerlink\" title=\"2.1 if语句格式1\"></a>2.1 if语句格式1</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：</span><br><span class=\"line\"><span class=\"keyword\">if</span> (关系表达式) &#123;</span><br><span class=\"line\">    语句体;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行流程：</p>\n<p>①首先计算关系表达式的值</p>\n<p>②如果关系表达式的值为true就执行语句体</p>\n<p>③如果关系表达式的值为false就不执行语句体</p>\n<p>④继续执行后面的语句内容</p>\n<p><img src=\"/tupian/1545616039363.png\" alt=\"1545616039363\"></p>\n<p>示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IfDemo</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;开始&quot;</span>);\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//定义两个变量</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//需求：判断a和b的值是否相等，如果相等，就在控制台输出：a等于b</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a == b) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;a等于b&quot;</span>);</span><br><span class=\"line\">\t\t&#125;\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//需求：判断a和c的值是否相等，如果相等，就在控制台输出：a等于c</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a == c) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;a等于c&quot;</span>);</span><br><span class=\"line\">\t\t&#125;\t\t</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;结束&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"练习1：老丈人选女婿\"><a href=\"#练习1：老丈人选女婿\" class=\"headerlink\" title=\"练习1：老丈人选女婿\"></a>练习1：老丈人选女婿</h4><p>需求：</p>\n<p>​\t键盘录入女婿的酒量，如果大于2斤，老丈人给出回应，否则没有任何回应</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.键盘录入女婿的酒量</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入女婿的酒量&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">wine</span> <span class=\"operator\">=</span> sc.nextInt();<span class=\"comment\">//5</span></span><br><span class=\"line\"><span class=\"comment\">//2.对酒量进行一个判断即可</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(wine &gt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;不错哟，小伙子！&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"练习2：考试奖励\"><a href=\"#练习2：考试奖励\" class=\"headerlink\" title=\"练习2：考试奖励\"></a>练习2：考试奖励</h4><p>需求：</p>\n<p>​\t键盘录入一个整数，表示小明的考试名次，如果名次为1，小红可以当小明的女朋有了。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.键盘录入一个整数，表示小明的考试名次</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入小明的名次&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">rank</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\"><span class=\"comment\">//2.对小明的考试成绩进行判断即可</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(rank == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;小红成为了小明的女朋友&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"第一种格式的细节：\"><a href=\"#第一种格式的细节：\" class=\"headerlink\" title=\"第一种格式的细节：\"></a>第一种格式的细节：</h4><ol>\n<li><p>如果我们要对一个布尔类型的变量进行判断，不要写&#x3D;&#x3D;，直接把变量写在小括号中即可。</p>\n</li>\n<li><p>如果大括号中的语句体只有一条，那么大括号可以省略不写</p>\n<p>如果大括号省略了，那么if只能控制距离他最近的那一条语句。</p>\n<p><strong>建议：</strong>自己不要去写，如果别人这么写了，你要能看懂即可。</p>\n</li>\n</ol>\n<h3 id=\"2-2-if语句格式2\"><a href=\"#2-2-if语句格式2\" class=\"headerlink\" title=\"2.2 if语句格式2\"></a>2.2 if语句格式2</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：</span><br><span class=\"line\"><span class=\"keyword\">if</span> (关系表达式) &#123;</span><br><span class=\"line\">    语句体<span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    语句体<span class=\"number\">2</span>;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行流程：</p>\n<p>①首先计算关系表达式的值</p>\n<p>②如果关系表达式的值为true就执行语句体1</p>\n<p>③如果关系表达式的值为false就执行语句体2</p>\n<p>④继续执行后面的语句内容</p>\n<p><img src=\"/tupian/1545616221283.png\" alt=\"1545616221283\"></p>\n<p>示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IfDemo02</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;开始&quot;</span>);\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//定义两个变量</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//需求：判断a是否大于b，如果是，在控制台输出：a的值大于b，否则，在控制台输出：a的值不大于b</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a &gt; b) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;a的值大于b&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;a的值不大于b&quot;</span>);</span><br><span class=\"line\">\t\t&#125;\t\t</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;结束&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"练习1：吃饭\"><a href=\"#练习1：吃饭\" class=\"headerlink\" title=\"练习1：吃饭\"></a>练习1：吃饭</h4><p>需求：</p>\n<p>​\t    键盘录入一个整数，表示身上的钱。</p>\n<p>​            如果大于等于100块，就是网红餐厅。</p>\n<p>​            否则，就吃经济实惠的沙县小吃。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.键盘录入一个整数。表示身上的钱。</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入一个整数表示身上的钱&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">money</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\"><span class=\"comment\">//2.对钱进行判断</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(money &gt;= <span class=\"number\">100</span>)&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;吃网红餐厅&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;福建大酒店&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"练习2：影院选座\"><a href=\"#练习2：影院选座\" class=\"headerlink\" title=\"练习2：影院选座\"></a>练习2：影院选座</h4><p>需求：</p>\n<p>​\t在实际开发中，电影院选座也会使用到if判断。</p>\n<p>​\t假设某影院售卖了100张票，票的序号为1~100。</p>\n<p>​\t其中奇数票号坐左侧，偶数票号坐右侧。</p>\n<p>​\t键盘录入一个整数表示电影票的票号。</p>\n<p>​\t根据不同情况，给出不同的提示：</p>\n<p>​\t\t如果票号为奇数，那么打印坐左边。</p>\n<p>​\t\t如果票号为偶数，那么打印坐右边。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.键盘录入票号</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入票号&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">ticket</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\"><span class=\"keyword\">if</span>(ticket &gt;= <span class=\"number\">1</span> &amp;&amp; ticket &lt;= <span class=\"number\">100</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//合法</span></span><br><span class=\"line\">    <span class=\"comment\">//2.对票号进行判断</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ticket % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//偶数</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;坐右边&quot;</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//奇数</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;坐左边&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//票号不合法</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;票号不合法&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-if语句格式3\"><a href=\"#2-3-if语句格式3\" class=\"headerlink\" title=\"2.3 if语句格式3\"></a>2.3 if语句格式3</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：</span><br><span class=\"line\"><span class=\"keyword\">if</span> (关系表达式<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    语句体<span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (关系表达式<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    语句体<span class=\"number\">2</span>;\t</span><br><span class=\"line\">&#125; </span><br><span class=\"line\">…</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    语句体n+<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行流程：</p>\n<p>①首先计算关系表达式1的值</p>\n<p>②如果值为true就执行语句体1；如果值为false就计算关系表达式2的值</p>\n<p>③如果值为true就执行语句体2；如果值为false就计算关系表达式3的值</p>\n<p>④…</p>\n<p>⑤如果没有任何关系表达式为true，就执行语句体n+1。</p>\n<p><img src=\"/tupian/1545616667104.png\" alt=\"1545616667104\"></p>\n<h4 id=\"练习1：考试奖励\"><a href=\"#练习1：考试奖励\" class=\"headerlink\" title=\"练习1：考试奖励\"></a>练习1：考试奖励</h4><p>需求：</p>\n<p>​\t小明快要期末考试了，小明爸爸对他说，会根据他不同的考试成绩，送他不同的礼物，</p>\n<p>假如你可以控制小明的得分，请用程序实现小明到底该获得什么样的礼物，并在控制台输出。</p>\n<p>分析：</p>\n<p>​\t①小明的考试成绩未知，可以使用键盘录入的方式获取值</p>\n<p>​\t②由于奖励种类较多，属于多种判断，采用if…else…if格式实现</p>\n<p>​\t③为每种判断设置对应的条件</p>\n<p>​\t④为每种判断设置对应的奖励</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//95~100 自行车一辆</span></span><br><span class=\"line\"><span class=\"comment\">//90~94   游乐场玩一天</span></span><br><span class=\"line\"><span class=\"comment\">//80 ~ 89 变形金刚一个</span></span><br><span class=\"line\"><span class=\"comment\">//80 以下  胖揍一顿</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//1.键盘录入一个值表示小明的分数</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入小明的成绩&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">score</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\"><span class=\"comment\">//2.对分数的有效性进行判断</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(score &gt;= <span class=\"number\">0</span> &amp;&amp; score &lt;= <span class=\"number\">100</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//有效的分数</span></span><br><span class=\"line\">    <span class=\"comment\">//3.对小明的分数进行判断，不同情况执行不同的代码</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(score &gt;= <span class=\"number\">95</span> &amp;&amp; score &lt;= <span class=\"number\">100</span>)&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;送自行车一辆&quot;</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(score &gt;= <span class=\"number\">90</span> &amp;&amp; score &lt;= <span class=\"number\">94</span>)&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;游乐场玩一天&quot;</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(score &gt;= <span class=\"number\">80</span> &amp;&amp; score &lt;= <span class=\"number\">89</span>)&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;变形金刚一个&quot;</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;胖揍一顿&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//无效的分数</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;分数不合法&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"第三章-switch语句\"><a href=\"#第三章-switch语句\" class=\"headerlink\" title=\"第三章 switch语句\"></a>第三章 switch语句</h2><h3 id=\"3-1-格式\"><a href=\"#3-1-格式\" class=\"headerlink\" title=\"3.1 格式\"></a>3.1 格式</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> (表达式) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">\t\t语句体<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">\t\t语句体<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t...</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t语句体n+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-执行流程：\"><a href=\"#3-2-执行流程：\" class=\"headerlink\" title=\"3.2 执行流程：\"></a>3.2 <strong>执行流程：</strong></h3><ul>\n<li>首先计算出表达式的值 </li>\n<li>其次，和case依次比较，一旦有对应的值，就会执行相应的语句，在执行的过程中，遇到break就会结 束。 </li>\n<li>最后，如果所有的case都和表达式的值不匹配，就会执行default语句体部分，然后程序结束掉。</li>\n</ul>\n<h4 id=\"练习：运动计划\"><a href=\"#练习：运动计划\" class=\"headerlink\" title=\"练习：运动计划\"></a>练习：运动计划</h4><ul>\n<li><p>需求：键盘录入星期数，显示今天的减肥活动。</p>\n<p>周一：跑步  </p>\n<p>周二：游泳  </p>\n<p>周三：慢走  </p>\n<p>周四：动感单车</p>\n<p>周五：拳击  </p>\n<p>周六：爬山  </p>\n<p>周日：好好吃一顿</p>\n</li>\n<li><p>代码示例：</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> a01switch选择语句;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SwitchDemo2</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.键盘录入一个整数表示星期</span></span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入一个整数表示星期&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">week</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.书写一个switch语句去跟week进行匹配</span></span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (week)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;跑步&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;游泳&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;慢走&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;动感单车&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;拳击&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;爬山&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;好好吃一顿&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;输入错误，没有这个星期&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-3-switch的扩展知识：\"><a href=\"#3-3-switch的扩展知识：\" class=\"headerlink\" title=\"3.3 switch的扩展知识：\"></a>3.3 switch的扩展知识：</h3><ul>\n<li><p>default的位置和省略情况</p>\n<p>default可以放在任意位置，也可以省略</p>\n</li>\n<li><p>case穿透</p>\n<p>不写break会引发case穿透现象</p>\n</li>\n<li><p>switch在JDK12的新特性</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">switch</span> (number) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span> -&gt; System.out.println(<span class=\"string\">&quot;一&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span> -&gt; System.out.println(<span class=\"string\">&quot;二&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">3</span> -&gt; System.out.println(<span class=\"string\">&quot;三&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">default</span> -&gt; System.out.println(<span class=\"string\">&quot;其他&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>switch和if第三种格式各自的使用场景</li>\n</ul>\n<p>当我们需要对一个范围进行判断的时候，用if的第三种格式</p>\n<p>当我们把有限个数据列举出来，选择其中一个执行的时候，用switch语句</p>\n<p>比如：</p>\n<p>​\t小明的考试成绩，如果用switch，那么需要写100个case，太麻烦了，所以用if简单。</p>\n<p>​\t如果是星期，月份，客服电话中0~9的功能选择就可以用switch</p>\n<h4 id=\"练习：休息日和工作日\"><a href=\"#练习：休息日和工作日\" class=\"headerlink\" title=\"练习：休息日和工作日\"></a>练习：休息日和工作日</h4><p>需求：键盘录入星期数，输出工作日、休息日。</p>\n<p>(1-5) 工作日，(6-7)休息日。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分析：</span></span><br><span class=\"line\"><span class=\"comment\">//1.键盘录入星期数</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请输入星期&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">week</span> <span class=\"operator\">=</span> sc.nextInt();<span class=\"comment\">//3</span></span><br><span class=\"line\"><span class=\"comment\">//2.利用switch进行匹配</span></span><br><span class=\"line\">----------------------------------------------------</span><br><span class=\"line\">利用<span class=\"keyword\">case</span>穿透简化代码</span><br><span class=\"line\"><span class=\"keyword\">switch</span> (week)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;工作日&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;休息日&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;没有这个星期&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">----------------------------------------------------</span><br><span class=\"line\">利用JDK12简化代码书写</span><br><span class=\"line\"><span class=\"keyword\">switch</span> (week) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span> -&gt; System.out.println(<span class=\"string\">&quot;工作日&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"number\">6</span>, <span class=\"number\">7</span> -&gt; System.out.println(<span class=\"string\">&quot;休息日&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">default</span> -&gt; System.out.println(<span class=\"string\">&quot;没有这个星期&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"第四章-循环结构\"><a href=\"#第四章-循环结构\" class=\"headerlink\" title=\"第四章 循环结构\"></a>第四章 循环结构</h2><h3 id=\"4-1-for循环结构（掌握）\"><a href=\"#4-1-for循环结构（掌握）\" class=\"headerlink\" title=\"4.1 for循环结构（掌握）\"></a>4.1 for循环结构（掌握）</h3><p>​\t循环语句可以在满足循环条件的情况下，反复执行某一段代码，这段被重复执行的代码被称为循环体语句，当反复 执行这个循环体时，需要在合适的时候把循环判断条件修改为false，从而结束循环，否则循环将一直执行下去，形 成死循环。 </p>\n<h4 id=\"4-1-1-for循环格式：\"><a href=\"#4-1-1-for循环格式：\" class=\"headerlink\" title=\"4.1.1 for循环格式：\"></a>4.1.1 for循环格式：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (初始化语句;条件判断语句;条件控制语句) &#123;</span><br><span class=\"line\">\t循环体语句;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>格式解释：</strong></p>\n<ul>\n<li>初始化语句：  用于表示循环开启时的起始状态，简单说就是循环开始的时候什么样</li>\n<li>条件判断语句：用于表示循环反复执行的条件，简单说就是判断循环是否能一直执行下去</li>\n<li>循环体语句：  用于表示循环反复执行的内容，简单说就是循环反复执行的事情</li>\n<li>条件控制语句：用于表示循环执行中每次变化的内容，简单说就是控制循环是否能执行下去</li>\n</ul>\n<p><strong>执行流程：</strong></p>\n<p>①执行初始化语句</p>\n<p>②执行条件判断语句，看其结果是true还是false</p>\n<p>​             如果是false，循环结束</p>\n<p>​             如果是true，继续执行</p>\n<p>③执行循环体语句</p>\n<p>④执行条件控制语句</p>\n<p>⑤回到②继续</p>\n<p><strong>for循环书写技巧：</strong></p>\n<ul>\n<li>确定循环的开始条件</li>\n<li>确定循环的结束条件</li>\n<li>确定循环要重复执行的代码</li>\n</ul>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.确定循环的开始条件</span></span><br><span class=\"line\"><span class=\"comment\">//2.确定循环的结束条件</span></span><br><span class=\"line\"><span class=\"comment\">//3.确定要重复执行的代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//需求：打印5次HelloWorld</span></span><br><span class=\"line\"><span class=\"comment\">//开始条件：1</span></span><br><span class=\"line\"><span class=\"comment\">//结束条件：5</span></span><br><span class=\"line\"><span class=\"comment\">//重复代码：打印语句</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;HelloWorld&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"for循环练习-输出数据\"><a href=\"#for循环练习-输出数据\" class=\"headerlink\" title=\"for循环练习-输出数据\"></a>for循环练习-输出数据</h5><ul>\n<li>需求：在控制台输出1-5和5-1的数据 </li>\n<li>示例代码：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ForTest01</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//需求：输出数据1-5</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(i);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;--------&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//需求：输出数据5-1</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">5</span>; i&gt;=<span class=\"number\">1</span>; i--) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(i);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"for循环练习-求和\"><a href=\"#for循环练习-求和\" class=\"headerlink\" title=\"for循环练习-求和\"></a>for循环练习-求和</h5><ul>\n<li>需求：求1-5之间的数据和，并把求和结果在控制台输出  </li>\n<li>示例代码：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ForTest02</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//求和的最终结果必须保存起来，需要定义一个变量，用于保存求和的结果，初始值为0</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//从1开始到5结束的数据，使用循环结构完成</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//将反复进行的事情写入循环结构内部</span></span><br><span class=\"line\">             <span class=\"comment\">// 此处反复进行的事情是将数据 i 加到用于保存最终求和的变量 sum 中</span></span><br><span class=\"line\">\t\t\tsum = sum + i;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\tsum += i;\tsum = sum + i;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t第一次：sum = sum + i = 0 + 1 = 1;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t第二次：sum = sum + i = 1 + 2 = 3;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t第三次：sum = sum + i = 3 + 3 = 6;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t第四次：sum = sum + i = 6 + 4 = 10;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t\t第五次：sum = sum + i = 10 + 5 = 15;</span></span><br><span class=\"line\"><span class=\"comment\">\t\t\t*/</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//当循环执行完毕时，将最终数据打印出来</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;1-5之间的数据和是：&quot;</span> + sum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>本题要点：<ul>\n<li>今后遇到的需求中，如果带有求和二字，请立即联想到求和变量</li>\n<li>求和变量的定义位置，必须在循环外部，如果在循环内部则计算出的数据将是错误的</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"for循环练习-求偶数和\"><a href=\"#for循环练习-求偶数和\" class=\"headerlink\" title=\"for循环练习-求偶数和\"></a>for循环练习-求偶数和</h5><ul>\n<li>需求：求1-100之间的偶数和，并把求和结果在控制台输出 }</li>\n<li>示例代码：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ForTest03</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//求和的最终结果必须保存起来，需要定义一个变量，用于保存求和的结果，初始值为0</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//对1-100的数据求和与1-5的数据求和几乎完全一样，仅仅是结束条件不同</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//对1-100的偶数求和，需要对求和操作添加限制条件，判断是否是偶数</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(i%<span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//sum += i；</span></span><br><span class=\"line\">\t\t\t\tsum = sum + i;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//当循环执行完毕时，将最终数据打印出来</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;1-100之间的偶数和是：&quot;</span> + sum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"for循环练习-统计次数\"><a href=\"#for循环练习-统计次数\" class=\"headerlink\" title=\"for循环练习-统计次数\"></a>for循环练习-统计次数</h5><p>需求：</p>\n<p>​\t  键盘录入两个数字，表示一个范围。</p>\n<p>​           统计这个范围中。</p>\n<p>​           既能被3整除，又能被5整除数字有多少个？</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-while循环\"><a href=\"#4-2-while循环\" class=\"headerlink\" title=\"4.2 while循环\"></a>4.2 while循环</h3><h4 id=\"4-2-1-格式：\"><a href=\"#4-2-1-格式：\" class=\"headerlink\" title=\"4.2.1 格式：\"></a>4.2.1 格式：</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">初始化语句;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(条件判断语句)&#123;</span><br><span class=\"line\">\t循环体;</span><br><span class=\"line\">\t条件控制语句;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"练习1：打印5次HelloWorld\"><a href=\"#练习1：打印5次HelloWorld\" class=\"headerlink\" title=\"练习1：打印5次HelloWorld\"></a>练习1：打印5次HelloWorld</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(i &lt;= <span class=\"number\">5</span>)&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;HelloWorld&quot;</span>);</span><br><span class=\"line\">    i++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">System.out.println(i);</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"练习2：珠穆朗玛峰\"><a href=\"#练习2：珠穆朗玛峰\" class=\"headerlink\" title=\"练习2：珠穆朗玛峰\"></a>练习2：珠穆朗玛峰</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.定义一个变量表示珠穆朗玛峰的高度</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">height</span> <span class=\"operator\">=</span> <span class=\"number\">8844430</span>;</span><br><span class=\"line\"><span class=\"comment\">//2.定义一个变量表示纸张的厚度</span></span><br><span class=\"line\"><span class=\"type\">double</span> <span class=\"variable\">paper</span> <span class=\"operator\">=</span> <span class=\"number\">0.1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//定义一个计数器（变量），用来统计折叠的次数</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3.循环折叠纸张</span></span><br><span class=\"line\"><span class=\"comment\">//只有纸张的厚度 &lt; 穆朗玛峰的高度 循环才继续，否则循环就停止</span></span><br><span class=\"line\"><span class=\"comment\">//坑：只有判断为真，循环才会继续</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(paper &lt; height)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//折叠纸张</span></span><br><span class=\"line\">    paper = paper * <span class=\"number\">2</span>;</span><br><span class=\"line\">    count++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//4.打印一下纸张的厚度</span></span><br><span class=\"line\">System.out.println(count);<span class=\"comment\">//27</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-do…while循环\"><a href=\"#4-3-do…while循环\" class=\"headerlink\" title=\"4.3 do…while循环\"></a>4.3 do…while循环</h3><p>本知识点了解即可</p>\n<p>格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">初始化语句;</span><br><span class=\"line\"><span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">    循环体;</span><br><span class=\"line\">    条件控制语句;</span><br><span class=\"line\">&#125;<span class=\"keyword\">while</span>(条件判断语句);</span><br></pre></td></tr></table></figure>\n\n<p>特点：</p>\n<p>​\t先执行，再判断。</p>\n<h3 id=\"4-4-三种格式的区别：\"><a href=\"#4-4-三种格式的区别：\" class=\"headerlink\" title=\"4.4 三种格式的区别：\"></a>4.4 三种格式的区别：</h3><p>​\tfor和while循环，是先判断，再执行。</p>\n<p>​\tdo…while是先执行，再判断。</p>\n<p>​\t当知道循环次数或者循环范围的时候，用for循环。</p>\n<p>​\t当不知道循环次数，也不知道循环范围，但是知道循环的结束条件时，用while循环。</p>\n"},{"title":"day06-方法","date":"2024-12-12T08:40:00.000Z","photos":["/tupian/j06.jpg"],"_content":"## 1. 方法概述\n\n### 1.1 方法的概念\n\n​\t方法（method）是程序中最小的执行单元\n\n* 注意：\n  * 方法必须先创建才可以使用，该过程成为方法定义\n  * 方法创建后并不是直接可以运行的，需要手动使用后，才执行，该过程成为方法调用\n\n## 2. 方法的定义和调用\n\n### 2.1 无参数方法定义和调用\n\n* 定义格式：\n\n  ```java\n  public static void 方法名 (   ) {\n  \t// 方法体;\n  }\n  ```\n\n* 范例：\n\n  ```java\n  public static void method (    ) {\n  \t// 方法体;\n  }\n  ```\n\n* 调用格式：\n\n  ```java\n  方法名();\n  ```\n\n* 范例：\n\n  ```java\n  method();\n  ```\n\n* 注意：\n\n  ​\t方法必须先定义，后调用，否则程序将报错\n\n### 2.3 无参数方法的练习\n\n* 需求：设计一个方法用于打印两个数中的较大数 \n* 思路：\n  * ①定义一个方法，用于打印两个数字中的较大数，例如getMax() \n  * ②方法中定义两个变量，用于保存两个数字 \n  * ③使用分支语句分两种情况对两个数字的大小关系进行处理 \n  * ④在main()方法中调用定义好的方法 \n* 代码：\n\n```java\npublic class MethodTest {\n    public static void main(String[] args) {\n        //在main()方法中调用定义好的方法\n        getMax();\n    }\n\n    //定义一个方法，用于打印两个数字中的较大数，例如getMax()\n    public static void getMax() {\n        //方法中定义两个变量，用于保存两个数字\n        int a = 10;\n        int b = 20;\n\n        //使用分支语句分两种情况对两个数字的大小关系进行处理\n        if(a > b) {\n            System.out.println(a);\n        } else {\n            System.out.println(b);\n        }\n    }\n}\n```\n\n## 3. 带参数方法定义和调用\n\n### 3.1 带参数方法定义和调用\n\n* 定义格式：\n\n  参数：由数据类型和变量名组成 -  数据类型 变量名\n\n  参数范例：int a\n\n  ```java\n  public static void 方法名 (参数1) {\n  \t方法体;\n  }\n  \n  public static void 方法名 (参数1, 参数2, 参数3...) {\n  \t方法体;\n  }\n  ```\n\n* 范例：\n\n  ```java\n  public static void isEvenNumber(int number){\n      ...\n  }\n  public static void getMax(int num1, int num2){\n      ...\n  }\n  ```\n\n  * 注意：\n\n  \t\t方法定义时，参数中的数据类型与变量名都不能缺少，缺少任意一个程序将报错\n\t\t\t\n  \t\t方法定义时，多个参数之间使用逗号( ，)分隔\n\n* 调用格式：\n\n  ```java\n  方法名(参数)；\n  \n  方法名(参数1,参数2);\n  ```\n\n* 范例：\n\n  ```java\n  isEvenNumber(10);\n  \n  getMax(10,20);\n  ```\n\n  * 方法调用时，参数的数量与类型必须与方法定义中的设置相匹配，否则程序将报错 \n\n### 3.2 形参和实参\n\n1. 形参：方法定义中的参数\n\n​          等同于变量定义格式，例如：int number\n\n2. 实参：方法调用中的参数\n\n​          等同于使用变量或常量，例如： 10  number\n\n### 3.3 带参数方法练习\n\n* 需求：设计一个方法用于打印两个数中的较大数，数据来自于方法参数 }\n* 思路：\n  * ①定义一个方法，用于打印两个数字中的较大数，例如getMax() \n  * ②为方法定义两个参数，用于接收两个数字 \n  * ③使用分支语句分两种情况对两个数字的大小关系进行处理 \n  * ④在main()方法中调用定义好的方法（使用常量）\n  * ⑤在main()方法中调用定义好的方法（使用变量） \n* 代码：\n\n```java\npublic class MethodTest {\n    public static void main(String[] args) {\n        //在main()方法中调用定义好的方法（使用常量）\n        getMax(10,20);\n        //调用方法的时候，人家要几个，你就给几个，人家要什么类型的，你就给什么类型的\n        //getMax(30);\n        //getMax(10.0,20.0);\n\n        //在main()方法中调用定义好的方法（使用变量）\n        int a = 10;\n        int b = 20;\n        getMax(a, b);\n    }\n\n    //定义一个方法，用于打印两个数字中的较大数，例如getMax()\n    //为方法定义两个参数，用于接收两个数字\n    public static void getMax(int a, int b) {\n        //使用分支语句分两种情况对两个数字的大小关系进行处理\n        if(a > b) {\n            System.out.println(a);\n        } else {\n            System.out.println(b);\n        }\n    }\n}\n```\n\n## 4. 带返回值方法的定义和调用\n\n### 4.1 带返回值方法定义和调用\n\n* 定义格式\n\n  ```java\n  public static 数据类型 方法名 ( 参数 ) { \n  \treturn 数据 ;\n  }\n  ```\n\n* 范例\n\n  ```java\n  public static boolean isEvenNumber( int number ) {           \n  \treturn true ;\n  }\n  public static int getMax( int a, int b ) {\n  \treturn  100 ;\n  }\n  ```\n\n  * 注意：\n    * 方法定义时return后面的返回值与方法定义上的数据类型要匹配，否则程序将报错\n\n* 调用格式\n\n  ```java\n  方法名 ( 参数 ) ;\n  数据类型 变量名 = 方法名 ( 参数 ) ;\n  ```\n\n* 范例\n\n  ```java\n  isEvenNumber ( 5 ) ;\n  boolean  flag =  isEvenNumber ( 5 ); \n  ```\n\n  * 注意：\n    * 方法的返回值通常会使用变量接收，否则该返回值将无意义\n\n### 4.2 带返回值方法练习1\n\n* 需求：设计一个方法可以获取两个数的较大值，数据来自于参数\n\n* 思路：\n\n  * ①定义一个方法，用于获取两个数字中的较大数 \n  * ②使用分支语句分两种情况对两个数字的大小关系进行处理 \n  * ③根据题设分别设置两种情况下对应的返回结果 \n  * ④在main()方法中调用定义好的方法并使用变量保存 \n  * ⑤在main()方法中调用定义好的方法并直接打印结果 \n\n* 代码：\n\n  ```java\n  public class MethodTest {\n      public static void main(String[] args) {\n          //在main()方法中调用定义好的方法并使用变量保存\n          int result = getMax(10,20);\n          System.out.println(result);\n  \n          //在main()方法中调用定义好的方法并直接打印结果\n          System.out.println(getMax(10,20));\n      }\n  \n      //定义一个方法，用于获取两个数字中的较大数\n      public static int getMax(int a, int b) {\n          //使用分支语句分两种情况对两个数字的大小关系进行处理\n          //根据题设分别设置两种情况下对应的返回结果\n          if(a > b) {\n              return a;\n          } else {\n              return b;\n          }\n      }\n  }\n  ```\n\n### 4.3 带返回值方法练习2\n\n需求：\n\n​\t定义一个方法，求一家商场每个季度的营业额。根据方法结果再计算出全年营业额。\n\n代码示例：\n\n```java\npackage com.itheima.demo;\n\npublic class MethodDemo9 {\n    public static void main(String[] args) {\n        /*需求：定义一个方法，求一家商场每个季度的营业额。\n        根据方法结果再计算出全年营业额。*/\n        int sum1 = getSum(10, 20, 30);\n        int sum2 = getSum(10, 20, 30);\n        int sum3 = getSum(10, 20, 30);\n        int sum4 = getSum(10, 20, 30);\n\n        int sum = sum1 + sum2 + sum3 + sum4;\n        System.out.println(sum);\n\n    }\n\n    //心得：\n    //1.我要干嘛？  决定了方法体   每个季度的营业额\n    //2.我干这件事情，需要什么才能完成？ 决定了形参 需要三个月的营业额 a b c\n    //3.我干完这件事情，看调用处是否需要使用方法的结果。   决定了返回值\n    //如果需要使用，那么必须返回\n    //如果不需要使用，可以返回也可以不返回\n    public static int getSum(int month1,int month2,int month3){\n        int sum = month1 + month2 + month3;\n        //因为方法的调用处，需要继续使用这个结果\n        //所以我们必须要把sum返回\n        return sum;\n    }\n}\n\n```\n\n### 4.4 带返回值方法练习3\n\n需求：\n\n​\t键盘录入两个圆的半径（整数），比较两个圆的面积。\n\n代码示例：\n\n```java\nimport java.util.Scanner;\n\npublic class MethodDemo10 {\n    public static void main(String[] args) {\n        //需求：键盘录入两个圆的半径（整数），比较两个圆的面积。\n        //键盘录入圆的半径\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"请输入圆的半径\");\n        int radii1 = sc.nextInt();\n\n        System.out.println(\"请输入第二个圆的半径\");\n        int radii2 = sc.nextInt();\n        double area1 = getArea(radii1);\n        double area2 = getArea(radii2);\n        if(area1 > area2){\n            System.out.println(\"第一个圆更大\");\n        }else{\n            System.out.println(\"第二个圆更大\");\n        }\n    }\n\n    //心得：\n    //1.我要干嘛？   求圆的面积\n    //2.我干这件事情，需要什么才能完成？        半径\n    //3.方法的调用处，是否需要继续使用方法的结果    要比较\n    public static double getArea(int radii) {\n        double area = 3.14 * radii * radii;\n        return area;\n    }\n}\n```\n\n## 5. 方法的注意事项\n\n### 5.1 方法的注意事项\n\n* 方法不能嵌套定义\n\n  * 示例代码：\n\n    ```java\n    public class MethodDemo {\n        public static void main(String[] args) {\n    \n        }\n    \n        public static void methodOne() {\n    \t\tpublic static void methodTwo() {\n           \t\t// 这里会引发编译错误!!!\n        \t}\n        }\n    }\n    ```\n\n* void表示无返回值，可以省略return，也可以单独的书写return，后面不加数据\n\n  * 示例代码：\n\n    ```java\n    public class MethodDemo {\n        public static void main(String[] args) {\n    \n        }\n        public static void methodTwo() {\n            //return 100; 编译错误，因为没有具体返回值类型\n            return;\t\n            //System.out.println(100); return语句后面不能跟数据或代码\n        }\n    }\n    ```\n\n### 5.2 方法的通用格式\n\n* 格式：\n\n  ```java\n  public static 返回值类型 方法名(参数) {\n     方法体; \n     return 数据 ;\n  }\n  ```\n\n* 解释：\n\n  * public static \t修饰符，目前先记住这个格式\n\n  \t 返回值类型\t方法操作完毕之后返回的数据的数据类型\n\n    ​\t\t\t如果方法操作完毕，没有数据返回，这里写void，而且方法体中一般不写return\n\n  \t 方法名\t\t调用方法时候使用的标识\n\n  \t 参数\t\t由数据类型和变量名组成，多个参数之间用逗号隔开\n\n  \t 方法体\t\t完成功能的代码块\n\n  \t return\t\t如果方法操作完毕，有数据返回，用于把数据返回给调用者\n\n* 定义方法时，要做到两个明确\n\n  * 明确返回值类型：主要是明确方法操作完毕之后是否有数据返回，如果没有，写void；如果有，写对应的数据类型\n  * 明确参数：主要是明确参数的类型和数量\n\n* 调用方法时的注意：\n\n  * void类型的方法，直接调用即可\n  * 非void类型的方法，推荐用变量接收调用\n\n## 6. 方法重载\n\n### 6.1 方法重载\n\n* 方法重载概念\n\n  方法重载指同一个类中定义的多个方法之间的关系，满足下列条件的多个方法相互构成重载\n\n  * 多个方法在同一个类中\n  * 多个方法具有相同的方法名\n  * 多个方法的参数不相同，类型不同或者数量不同\n\n* 注意：\n\n  * 重载仅对应方法的定义，与方法的调用无关，调用方式参照标准格式\n  * 重载仅针对同一个类中方法的名称与参数进行识别，与返回值无关，换句话说不能通过返回值来判定两个方法是否相互构成重载\n\n* 正确范例：\n\n  ```java\n  public class MethodDemo {\n  \tpublic static void fn(int a) {\n      \t//方法体\n      }\n      public static int fn(double a) {\n      \t//方法体\n      }\n  }\n  \n  public class MethodDemo {\n  \tpublic static float fn(int a) {\n      \t//方法体\n      }\n      public static int fn(int a , int b) {\n      \t//方法体\n      }\n  }\n  ```\n\n* 错误范例：\n\n  ```java\n  public class MethodDemo {\n  \tpublic static void fn(int a) {\n      \t//方法体\n      }\n      public static int fn(int a) { \t/*错误原因：重载与返回值无关*/\n      \t//方法体\n      }\n  }\n  \n  public class MethodDemo01 {\n      public static void fn(int a) {\n          //方法体\n      }\n  } \n  public class MethodDemo02 {\n      public static int fn(double a) { /*错误原因：这是两个类的两个fn方法*/\n          //方法体\n      }\n  }\n  ```\n\n### 6.2 方法重载练习\n\n* 需求：使用方法重载的思想，设计比较两个整数是否相同的方法，兼容全整数类型（byte,short,int,long） \n\n* 思路：\n\n  * ①定义比较两个数字的是否相同的方法compare()方法，参数选择两个int型参数\n  * ②定义对应的重载方法，变更对应的参数类型，参数变更为两个long型参数\n  * ③定义所有的重载方法，两个byte类型与两个short类型参数 \n  * ④完成方法的调用，测试运行结果 \n\n* 代码：\n\n  ```java\n  public class MethodTest {\n      public static void main(String[] args) {\n          //调用方法\n          System.out.println(compare(10, 20));\n          System.out.println(compare((byte) 10, (byte) 20));\n          System.out.println(compare((short) 10, (short) 20));\n          System.out.println(compare(10L, 20L));\n      }\n  \n      //int\n      public static boolean compare(int a, int b) {\n          System.out.println(\"int\");\n          return a == b;\n      }\n  \n      //byte\n      public static boolean compare(byte a, byte b) {\n          System.out.println(\"byte\");\n          return a == b;\n      }\n  \n      //short\n      public static boolean compare(short a, short b) {\n          System.out.println(\"short\");\n          return a == b;\n      }\n  \n      //long\n      public static boolean compare(long a, long b) {\n          System.out.println(\"long\");\n          return a == b;\n      }\n  \n  }\n  ```\n\n### 7.3 数组遍历\n\n* 需求：设计一个方法用于数组遍历，要求遍历的结果是在一行上的。例如：[11, 22, 33, 44, 55] \n\n* 思路：\n\n  * ①因为要求结果在一行上输出，所以这里需要在学习一个新的输出语句System.out.print(“内容”);\n\n    System.out.println(“内容”); 输出内容并换行\n\n    System.out.print(“内容”); 输出内容不换行\n\n    System.out.println(); 起到换行的作用\n\n  * ②定义一个数组，用静态初始化完成数组元素初始化\n\n  * ③定义一个方法，用数组遍历通用格式对数组进行遍历\n\n  * ④用新的输出语句修改遍历操作\n\n  * ⑤调用遍历方法\n\n* 代码：\n\n  ```java\n  public class Test1 {\n      public static void main(String[] args) {\n        /*  //先打印数据，再进行换行\n          System.out.println(\"aaa\");\n          //只打印不换行\n          System.out.print(\"bbb\");\n          System.out.print(\"ddd\");\n          //不打印任何内容，只换行\n          System.out.println();\n          System.out.print(\"cc\");*/\n          //设计一个方法用于数组遍历，要求遍历的结果是在一行上的。例如：[11, 22, 33, 44, 55]\n          int[] arr = {1,2,3,4,5};\n          printArr(arr);\n      }\n      //1.我要遍历数组\n      //2.需要什么？  数组\n      //3.调用处是否需要使用方法的结果。\n      public static void printArr(int[] arr){\n          System.out.print(\"[\");\n          for (int i = 0; i < arr.length; i++) {\n              if(i == arr.length - 1){\n                  System.out.println(arr[i] + \"]\");\n              }else{\n                  System.out.print(arr[i] + \", \");\n              }\n          }\n      }\n  }\n  ```\n\n### 7.4 数组最大值\n\n* 需求：设计一个方法用于获取数组中元素的最大值 \n\n* 思路：\n\n  * ①定义一个数组，用静态初始化完成数组元素初始化\n  * ②定义一个方法，用来获取数组中的最大值，最值的认知和讲解我们在数组中已经讲解过了\n  * ③调用获取最大值方法，用变量接收返回结果\n  * ④把结果输出在控制台\n\n* 代码：\n\n  ```java\n  public class MethodTest02 {\n      public static void main(String[] args) {\n          //定义一个数组，用静态初始化完成数组元素初始化\n          int[] arr = {12, 45, 98, 73, 60};\n  \n          //调用获取最大值方法，用变量接收返回结果\n          int number = getMax(arr);\n  \n          //把结果输出在控制台\n          System.out.println(\"number:\" + number);\n      }\n  \n      //定义一个方法，用来获取数组中的最大值\n      /*\n          两个明确：\n              返回值类型：int\n              参数：int[] arr\n       */\n      public static int getMax(int[] arr) {\n          int max = arr[0];\n  \n          for(int x=1; x<arr.length; x++) {\n              if(arr[x] > max) {\n                  max = arr[x];\n              }\n          }\n          return max;\n      }\n  }\n  ```\n\n### 7.6 获取索引\n\n需求：\n\n​\t定义一个方法获取数字，在数组中的索引位置，将结果返回给调用处，如果有重复的，只要获取第一个即可。\n\n代码示例：\n\n```java\npackage com.itheima.demo;\n\npublic class Test4 {\n    public static void main(String[] args) {\n        //定义一个方法获取数字，在数组中的索引位置，将结果返回给调用处\n        //如果有重复的，只要获取第一个即可\n\n        int[] arr = {1,2,3,4,5};\n        int index = contains(arr, 3);\n        System.out.println(index);\n    }\n\n    //1. 我要干嘛？判断数组中的某一个数是否存在\n    //2. 需要什么？数组 数字\n    //3. 调用处是否需要继续使用？返回\n    //获取number在arr中的位置\n    public static int contains(int[] arr, int number) {\n        //遍历arr得到每一个元素\n        for (int i = 0; i < arr.length; i++) {\n            //拿着每一个元素跟number比较\n            if(arr[i] == number){\n                //如果相等，表示找到了\n                return i;\n            }\n        }\n        //当循环结束之后，如果还不能返回索引，表示数组中不存在该数据\n        //可以返回-1\n        return -1;\n    }\n}\n\n```\n\n\n\n\n\n","source":"_posts/day06-方法.md","raw":"---\ntitle: day06-方法\ndate: 2024-12-12 16:40:00\ntags:\n    - 方法\ncategories: java\nphotos: /tupian/j06.jpg\n---\n## 1. 方法概述\n\n### 1.1 方法的概念\n\n​\t方法（method）是程序中最小的执行单元\n\n* 注意：\n  * 方法必须先创建才可以使用，该过程成为方法定义\n  * 方法创建后并不是直接可以运行的，需要手动使用后，才执行，该过程成为方法调用\n\n## 2. 方法的定义和调用\n\n### 2.1 无参数方法定义和调用\n\n* 定义格式：\n\n  ```java\n  public static void 方法名 (   ) {\n  \t// 方法体;\n  }\n  ```\n\n* 范例：\n\n  ```java\n  public static void method (    ) {\n  \t// 方法体;\n  }\n  ```\n\n* 调用格式：\n\n  ```java\n  方法名();\n  ```\n\n* 范例：\n\n  ```java\n  method();\n  ```\n\n* 注意：\n\n  ​\t方法必须先定义，后调用，否则程序将报错\n\n### 2.3 无参数方法的练习\n\n* 需求：设计一个方法用于打印两个数中的较大数 \n* 思路：\n  * ①定义一个方法，用于打印两个数字中的较大数，例如getMax() \n  * ②方法中定义两个变量，用于保存两个数字 \n  * ③使用分支语句分两种情况对两个数字的大小关系进行处理 \n  * ④在main()方法中调用定义好的方法 \n* 代码：\n\n```java\npublic class MethodTest {\n    public static void main(String[] args) {\n        //在main()方法中调用定义好的方法\n        getMax();\n    }\n\n    //定义一个方法，用于打印两个数字中的较大数，例如getMax()\n    public static void getMax() {\n        //方法中定义两个变量，用于保存两个数字\n        int a = 10;\n        int b = 20;\n\n        //使用分支语句分两种情况对两个数字的大小关系进行处理\n        if(a > b) {\n            System.out.println(a);\n        } else {\n            System.out.println(b);\n        }\n    }\n}\n```\n\n## 3. 带参数方法定义和调用\n\n### 3.1 带参数方法定义和调用\n\n* 定义格式：\n\n  参数：由数据类型和变量名组成 -  数据类型 变量名\n\n  参数范例：int a\n\n  ```java\n  public static void 方法名 (参数1) {\n  \t方法体;\n  }\n  \n  public static void 方法名 (参数1, 参数2, 参数3...) {\n  \t方法体;\n  }\n  ```\n\n* 范例：\n\n  ```java\n  public static void isEvenNumber(int number){\n      ...\n  }\n  public static void getMax(int num1, int num2){\n      ...\n  }\n  ```\n\n  * 注意：\n\n  \t\t方法定义时，参数中的数据类型与变量名都不能缺少，缺少任意一个程序将报错\n\t\t\t\n  \t\t方法定义时，多个参数之间使用逗号( ，)分隔\n\n* 调用格式：\n\n  ```java\n  方法名(参数)；\n  \n  方法名(参数1,参数2);\n  ```\n\n* 范例：\n\n  ```java\n  isEvenNumber(10);\n  \n  getMax(10,20);\n  ```\n\n  * 方法调用时，参数的数量与类型必须与方法定义中的设置相匹配，否则程序将报错 \n\n### 3.2 形参和实参\n\n1. 形参：方法定义中的参数\n\n​          等同于变量定义格式，例如：int number\n\n2. 实参：方法调用中的参数\n\n​          等同于使用变量或常量，例如： 10  number\n\n### 3.3 带参数方法练习\n\n* 需求：设计一个方法用于打印两个数中的较大数，数据来自于方法参数 }\n* 思路：\n  * ①定义一个方法，用于打印两个数字中的较大数，例如getMax() \n  * ②为方法定义两个参数，用于接收两个数字 \n  * ③使用分支语句分两种情况对两个数字的大小关系进行处理 \n  * ④在main()方法中调用定义好的方法（使用常量）\n  * ⑤在main()方法中调用定义好的方法（使用变量） \n* 代码：\n\n```java\npublic class MethodTest {\n    public static void main(String[] args) {\n        //在main()方法中调用定义好的方法（使用常量）\n        getMax(10,20);\n        //调用方法的时候，人家要几个，你就给几个，人家要什么类型的，你就给什么类型的\n        //getMax(30);\n        //getMax(10.0,20.0);\n\n        //在main()方法中调用定义好的方法（使用变量）\n        int a = 10;\n        int b = 20;\n        getMax(a, b);\n    }\n\n    //定义一个方法，用于打印两个数字中的较大数，例如getMax()\n    //为方法定义两个参数，用于接收两个数字\n    public static void getMax(int a, int b) {\n        //使用分支语句分两种情况对两个数字的大小关系进行处理\n        if(a > b) {\n            System.out.println(a);\n        } else {\n            System.out.println(b);\n        }\n    }\n}\n```\n\n## 4. 带返回值方法的定义和调用\n\n### 4.1 带返回值方法定义和调用\n\n* 定义格式\n\n  ```java\n  public static 数据类型 方法名 ( 参数 ) { \n  \treturn 数据 ;\n  }\n  ```\n\n* 范例\n\n  ```java\n  public static boolean isEvenNumber( int number ) {           \n  \treturn true ;\n  }\n  public static int getMax( int a, int b ) {\n  \treturn  100 ;\n  }\n  ```\n\n  * 注意：\n    * 方法定义时return后面的返回值与方法定义上的数据类型要匹配，否则程序将报错\n\n* 调用格式\n\n  ```java\n  方法名 ( 参数 ) ;\n  数据类型 变量名 = 方法名 ( 参数 ) ;\n  ```\n\n* 范例\n\n  ```java\n  isEvenNumber ( 5 ) ;\n  boolean  flag =  isEvenNumber ( 5 ); \n  ```\n\n  * 注意：\n    * 方法的返回值通常会使用变量接收，否则该返回值将无意义\n\n### 4.2 带返回值方法练习1\n\n* 需求：设计一个方法可以获取两个数的较大值，数据来自于参数\n\n* 思路：\n\n  * ①定义一个方法，用于获取两个数字中的较大数 \n  * ②使用分支语句分两种情况对两个数字的大小关系进行处理 \n  * ③根据题设分别设置两种情况下对应的返回结果 \n  * ④在main()方法中调用定义好的方法并使用变量保存 \n  * ⑤在main()方法中调用定义好的方法并直接打印结果 \n\n* 代码：\n\n  ```java\n  public class MethodTest {\n      public static void main(String[] args) {\n          //在main()方法中调用定义好的方法并使用变量保存\n          int result = getMax(10,20);\n          System.out.println(result);\n  \n          //在main()方法中调用定义好的方法并直接打印结果\n          System.out.println(getMax(10,20));\n      }\n  \n      //定义一个方法，用于获取两个数字中的较大数\n      public static int getMax(int a, int b) {\n          //使用分支语句分两种情况对两个数字的大小关系进行处理\n          //根据题设分别设置两种情况下对应的返回结果\n          if(a > b) {\n              return a;\n          } else {\n              return b;\n          }\n      }\n  }\n  ```\n\n### 4.3 带返回值方法练习2\n\n需求：\n\n​\t定义一个方法，求一家商场每个季度的营业额。根据方法结果再计算出全年营业额。\n\n代码示例：\n\n```java\npackage com.itheima.demo;\n\npublic class MethodDemo9 {\n    public static void main(String[] args) {\n        /*需求：定义一个方法，求一家商场每个季度的营业额。\n        根据方法结果再计算出全年营业额。*/\n        int sum1 = getSum(10, 20, 30);\n        int sum2 = getSum(10, 20, 30);\n        int sum3 = getSum(10, 20, 30);\n        int sum4 = getSum(10, 20, 30);\n\n        int sum = sum1 + sum2 + sum3 + sum4;\n        System.out.println(sum);\n\n    }\n\n    //心得：\n    //1.我要干嘛？  决定了方法体   每个季度的营业额\n    //2.我干这件事情，需要什么才能完成？ 决定了形参 需要三个月的营业额 a b c\n    //3.我干完这件事情，看调用处是否需要使用方法的结果。   决定了返回值\n    //如果需要使用，那么必须返回\n    //如果不需要使用，可以返回也可以不返回\n    public static int getSum(int month1,int month2,int month3){\n        int sum = month1 + month2 + month3;\n        //因为方法的调用处，需要继续使用这个结果\n        //所以我们必须要把sum返回\n        return sum;\n    }\n}\n\n```\n\n### 4.4 带返回值方法练习3\n\n需求：\n\n​\t键盘录入两个圆的半径（整数），比较两个圆的面积。\n\n代码示例：\n\n```java\nimport java.util.Scanner;\n\npublic class MethodDemo10 {\n    public static void main(String[] args) {\n        //需求：键盘录入两个圆的半径（整数），比较两个圆的面积。\n        //键盘录入圆的半径\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"请输入圆的半径\");\n        int radii1 = sc.nextInt();\n\n        System.out.println(\"请输入第二个圆的半径\");\n        int radii2 = sc.nextInt();\n        double area1 = getArea(radii1);\n        double area2 = getArea(radii2);\n        if(area1 > area2){\n            System.out.println(\"第一个圆更大\");\n        }else{\n            System.out.println(\"第二个圆更大\");\n        }\n    }\n\n    //心得：\n    //1.我要干嘛？   求圆的面积\n    //2.我干这件事情，需要什么才能完成？        半径\n    //3.方法的调用处，是否需要继续使用方法的结果    要比较\n    public static double getArea(int radii) {\n        double area = 3.14 * radii * radii;\n        return area;\n    }\n}\n```\n\n## 5. 方法的注意事项\n\n### 5.1 方法的注意事项\n\n* 方法不能嵌套定义\n\n  * 示例代码：\n\n    ```java\n    public class MethodDemo {\n        public static void main(String[] args) {\n    \n        }\n    \n        public static void methodOne() {\n    \t\tpublic static void methodTwo() {\n           \t\t// 这里会引发编译错误!!!\n        \t}\n        }\n    }\n    ```\n\n* void表示无返回值，可以省略return，也可以单独的书写return，后面不加数据\n\n  * 示例代码：\n\n    ```java\n    public class MethodDemo {\n        public static void main(String[] args) {\n    \n        }\n        public static void methodTwo() {\n            //return 100; 编译错误，因为没有具体返回值类型\n            return;\t\n            //System.out.println(100); return语句后面不能跟数据或代码\n        }\n    }\n    ```\n\n### 5.2 方法的通用格式\n\n* 格式：\n\n  ```java\n  public static 返回值类型 方法名(参数) {\n     方法体; \n     return 数据 ;\n  }\n  ```\n\n* 解释：\n\n  * public static \t修饰符，目前先记住这个格式\n\n  \t 返回值类型\t方法操作完毕之后返回的数据的数据类型\n\n    ​\t\t\t如果方法操作完毕，没有数据返回，这里写void，而且方法体中一般不写return\n\n  \t 方法名\t\t调用方法时候使用的标识\n\n  \t 参数\t\t由数据类型和变量名组成，多个参数之间用逗号隔开\n\n  \t 方法体\t\t完成功能的代码块\n\n  \t return\t\t如果方法操作完毕，有数据返回，用于把数据返回给调用者\n\n* 定义方法时，要做到两个明确\n\n  * 明确返回值类型：主要是明确方法操作完毕之后是否有数据返回，如果没有，写void；如果有，写对应的数据类型\n  * 明确参数：主要是明确参数的类型和数量\n\n* 调用方法时的注意：\n\n  * void类型的方法，直接调用即可\n  * 非void类型的方法，推荐用变量接收调用\n\n## 6. 方法重载\n\n### 6.1 方法重载\n\n* 方法重载概念\n\n  方法重载指同一个类中定义的多个方法之间的关系，满足下列条件的多个方法相互构成重载\n\n  * 多个方法在同一个类中\n  * 多个方法具有相同的方法名\n  * 多个方法的参数不相同，类型不同或者数量不同\n\n* 注意：\n\n  * 重载仅对应方法的定义，与方法的调用无关，调用方式参照标准格式\n  * 重载仅针对同一个类中方法的名称与参数进行识别，与返回值无关，换句话说不能通过返回值来判定两个方法是否相互构成重载\n\n* 正确范例：\n\n  ```java\n  public class MethodDemo {\n  \tpublic static void fn(int a) {\n      \t//方法体\n      }\n      public static int fn(double a) {\n      \t//方法体\n      }\n  }\n  \n  public class MethodDemo {\n  \tpublic static float fn(int a) {\n      \t//方法体\n      }\n      public static int fn(int a , int b) {\n      \t//方法体\n      }\n  }\n  ```\n\n* 错误范例：\n\n  ```java\n  public class MethodDemo {\n  \tpublic static void fn(int a) {\n      \t//方法体\n      }\n      public static int fn(int a) { \t/*错误原因：重载与返回值无关*/\n      \t//方法体\n      }\n  }\n  \n  public class MethodDemo01 {\n      public static void fn(int a) {\n          //方法体\n      }\n  } \n  public class MethodDemo02 {\n      public static int fn(double a) { /*错误原因：这是两个类的两个fn方法*/\n          //方法体\n      }\n  }\n  ```\n\n### 6.2 方法重载练习\n\n* 需求：使用方法重载的思想，设计比较两个整数是否相同的方法，兼容全整数类型（byte,short,int,long） \n\n* 思路：\n\n  * ①定义比较两个数字的是否相同的方法compare()方法，参数选择两个int型参数\n  * ②定义对应的重载方法，变更对应的参数类型，参数变更为两个long型参数\n  * ③定义所有的重载方法，两个byte类型与两个short类型参数 \n  * ④完成方法的调用，测试运行结果 \n\n* 代码：\n\n  ```java\n  public class MethodTest {\n      public static void main(String[] args) {\n          //调用方法\n          System.out.println(compare(10, 20));\n          System.out.println(compare((byte) 10, (byte) 20));\n          System.out.println(compare((short) 10, (short) 20));\n          System.out.println(compare(10L, 20L));\n      }\n  \n      //int\n      public static boolean compare(int a, int b) {\n          System.out.println(\"int\");\n          return a == b;\n      }\n  \n      //byte\n      public static boolean compare(byte a, byte b) {\n          System.out.println(\"byte\");\n          return a == b;\n      }\n  \n      //short\n      public static boolean compare(short a, short b) {\n          System.out.println(\"short\");\n          return a == b;\n      }\n  \n      //long\n      public static boolean compare(long a, long b) {\n          System.out.println(\"long\");\n          return a == b;\n      }\n  \n  }\n  ```\n\n### 7.3 数组遍历\n\n* 需求：设计一个方法用于数组遍历，要求遍历的结果是在一行上的。例如：[11, 22, 33, 44, 55] \n\n* 思路：\n\n  * ①因为要求结果在一行上输出，所以这里需要在学习一个新的输出语句System.out.print(“内容”);\n\n    System.out.println(“内容”); 输出内容并换行\n\n    System.out.print(“内容”); 输出内容不换行\n\n    System.out.println(); 起到换行的作用\n\n  * ②定义一个数组，用静态初始化完成数组元素初始化\n\n  * ③定义一个方法，用数组遍历通用格式对数组进行遍历\n\n  * ④用新的输出语句修改遍历操作\n\n  * ⑤调用遍历方法\n\n* 代码：\n\n  ```java\n  public class Test1 {\n      public static void main(String[] args) {\n        /*  //先打印数据，再进行换行\n          System.out.println(\"aaa\");\n          //只打印不换行\n          System.out.print(\"bbb\");\n          System.out.print(\"ddd\");\n          //不打印任何内容，只换行\n          System.out.println();\n          System.out.print(\"cc\");*/\n          //设计一个方法用于数组遍历，要求遍历的结果是在一行上的。例如：[11, 22, 33, 44, 55]\n          int[] arr = {1,2,3,4,5};\n          printArr(arr);\n      }\n      //1.我要遍历数组\n      //2.需要什么？  数组\n      //3.调用处是否需要使用方法的结果。\n      public static void printArr(int[] arr){\n          System.out.print(\"[\");\n          for (int i = 0; i < arr.length; i++) {\n              if(i == arr.length - 1){\n                  System.out.println(arr[i] + \"]\");\n              }else{\n                  System.out.print(arr[i] + \", \");\n              }\n          }\n      }\n  }\n  ```\n\n### 7.4 数组最大值\n\n* 需求：设计一个方法用于获取数组中元素的最大值 \n\n* 思路：\n\n  * ①定义一个数组，用静态初始化完成数组元素初始化\n  * ②定义一个方法，用来获取数组中的最大值，最值的认知和讲解我们在数组中已经讲解过了\n  * ③调用获取最大值方法，用变量接收返回结果\n  * ④把结果输出在控制台\n\n* 代码：\n\n  ```java\n  public class MethodTest02 {\n      public static void main(String[] args) {\n          //定义一个数组，用静态初始化完成数组元素初始化\n          int[] arr = {12, 45, 98, 73, 60};\n  \n          //调用获取最大值方法，用变量接收返回结果\n          int number = getMax(arr);\n  \n          //把结果输出在控制台\n          System.out.println(\"number:\" + number);\n      }\n  \n      //定义一个方法，用来获取数组中的最大值\n      /*\n          两个明确：\n              返回值类型：int\n              参数：int[] arr\n       */\n      public static int getMax(int[] arr) {\n          int max = arr[0];\n  \n          for(int x=1; x<arr.length; x++) {\n              if(arr[x] > max) {\n                  max = arr[x];\n              }\n          }\n          return max;\n      }\n  }\n  ```\n\n### 7.6 获取索引\n\n需求：\n\n​\t定义一个方法获取数字，在数组中的索引位置，将结果返回给调用处，如果有重复的，只要获取第一个即可。\n\n代码示例：\n\n```java\npackage com.itheima.demo;\n\npublic class Test4 {\n    public static void main(String[] args) {\n        //定义一个方法获取数字，在数组中的索引位置，将结果返回给调用处\n        //如果有重复的，只要获取第一个即可\n\n        int[] arr = {1,2,3,4,5};\n        int index = contains(arr, 3);\n        System.out.println(index);\n    }\n\n    //1. 我要干嘛？判断数组中的某一个数是否存在\n    //2. 需要什么？数组 数字\n    //3. 调用处是否需要继续使用？返回\n    //获取number在arr中的位置\n    public static int contains(int[] arr, int number) {\n        //遍历arr得到每一个元素\n        for (int i = 0; i < arr.length; i++) {\n            //拿着每一个元素跟number比较\n            if(arr[i] == number){\n                //如果相等，表示找到了\n                return i;\n            }\n        }\n        //当循环结束之后，如果还不能返回索引，表示数组中不存在该数据\n        //可以返回-1\n        return -1;\n    }\n}\n\n```\n\n\n\n\n\n","slug":"day06-方法","published":1,"updated":"2024-12-12T08:49:02.268Z","comments":1,"layout":"post","_id":"cm4ld1o8c001mqsto7029a5ve","content":"<h2 id=\"1-方法概述\"><a href=\"#1-方法概述\" class=\"headerlink\" title=\"1. 方法概述\"></a>1. 方法概述</h2><h3 id=\"1-1-方法的概念\"><a href=\"#1-1-方法的概念\" class=\"headerlink\" title=\"1.1 方法的概念\"></a>1.1 方法的概念</h3><p>​\t方法（method）是程序中最小的执行单元</p>\n<ul>\n<li>注意：<ul>\n<li>方法必须先创建才可以使用，该过程成为方法定义</li>\n<li>方法创建后并不是直接可以运行的，需要手动使用后，才执行，该过程成为方法调用</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-方法的定义和调用\"><a href=\"#2-方法的定义和调用\" class=\"headerlink\" title=\"2. 方法的定义和调用\"></a>2. 方法的定义和调用</h2><h3 id=\"2-1-无参数方法定义和调用\"><a href=\"#2-1-无参数方法定义和调用\" class=\"headerlink\" title=\"2.1 无参数方法定义和调用\"></a>2.1 无参数方法定义和调用</h3><ul>\n<li><p>定义格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> 方法名 (   ) &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 方法体;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>范例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">method</span> <span class=\"params\">(    )</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 方法体;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>调用格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方法名();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>范例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">method();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>注意：</p>\n<p>​\t方法必须先定义，后调用，否则程序将报错</p>\n</li>\n</ul>\n<h3 id=\"2-3-无参数方法的练习\"><a href=\"#2-3-无参数方法的练习\" class=\"headerlink\" title=\"2.3 无参数方法的练习\"></a>2.3 无参数方法的练习</h3><ul>\n<li>需求：设计一个方法用于打印两个数中的较大数 </li>\n<li>思路：<ul>\n<li>①定义一个方法，用于打印两个数字中的较大数，例如getMax() </li>\n<li>②方法中定义两个变量，用于保存两个数字 </li>\n<li>③使用分支语句分两种情况对两个数字的大小关系进行处理 </li>\n<li>④在main()方法中调用定义好的方法</li>\n</ul>\n</li>\n<li>代码：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//在main()方法中调用定义好的方法</span></span><br><span class=\"line\">        getMax();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//定义一个方法，用于打印两个数字中的较大数，例如getMax()</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">getMax</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//方法中定义两个变量，用于保存两个数字</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//使用分支语句分两种情况对两个数字的大小关系进行处理</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a &gt; b) &#123;</span><br><span class=\"line\">            System.out.println(a);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(b);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-带参数方法定义和调用\"><a href=\"#3-带参数方法定义和调用\" class=\"headerlink\" title=\"3. 带参数方法定义和调用\"></a>3. 带参数方法定义和调用</h2><h3 id=\"3-1-带参数方法定义和调用\"><a href=\"#3-1-带参数方法定义和调用\" class=\"headerlink\" title=\"3.1 带参数方法定义和调用\"></a>3.1 带参数方法定义和调用</h3><ul>\n<li><p>定义格式：</p>\n<p>参数：由数据类型和变量名组成 -  数据类型 变量名</p>\n<p>参数范例：int a</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> 方法名 (参数<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t方法体;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> 方法名 (参数<span class=\"number\">1</span>, 参数<span class=\"number\">2</span>, 参数<span class=\"number\">3.</span>..) &#123;</span><br><span class=\"line\">\t方法体;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>范例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">isEvenNumber</span><span class=\"params\">(<span class=\"type\">int</span> number)</span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">getMax</span><span class=\"params\">(<span class=\"type\">int</span> num1, <span class=\"type\">int</span> num2)</span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>注意：</p>\n<pre><code>  方法定义时，参数中的数据类型与变量名都不能缺少，缺少任意一个程序将报错\n    \n  方法定义时，多个参数之间使用逗号( ，)分隔\n</code></pre>\n</li>\n</ul>\n</li>\n<li><p>调用格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方法名(参数)；</span><br><span class=\"line\"></span><br><span class=\"line\">方法名(参数<span class=\"number\">1</span>,参数<span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>范例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">isEvenNumber(<span class=\"number\">10</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">getMax(<span class=\"number\">10</span>,<span class=\"number\">20</span>);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>方法调用时，参数的数量与类型必须与方法定义中的设置相匹配，否则程序将报错</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-2-形参和实参\"><a href=\"#3-2-形参和实参\" class=\"headerlink\" title=\"3.2 形参和实参\"></a>3.2 形参和实参</h3><ol>\n<li>形参：方法定义中的参数</li>\n</ol>\n<p>​          等同于变量定义格式，例如：int number</p>\n<ol start=\"2\">\n<li>实参：方法调用中的参数</li>\n</ol>\n<p>​          等同于使用变量或常量，例如： 10  number</p>\n<h3 id=\"3-3-带参数方法练习\"><a href=\"#3-3-带参数方法练习\" class=\"headerlink\" title=\"3.3 带参数方法练习\"></a>3.3 带参数方法练习</h3><ul>\n<li>需求：设计一个方法用于打印两个数中的较大数，数据来自于方法参数 }</li>\n<li>思路：<ul>\n<li>①定义一个方法，用于打印两个数字中的较大数，例如getMax() </li>\n<li>②为方法定义两个参数，用于接收两个数字 </li>\n<li>③使用分支语句分两种情况对两个数字的大小关系进行处理 </li>\n<li>④在main()方法中调用定义好的方法（使用常量）</li>\n<li>⑤在main()方法中调用定义好的方法（使用变量）</li>\n</ul>\n</li>\n<li>代码：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//在main()方法中调用定义好的方法（使用常量）</span></span><br><span class=\"line\">        getMax(<span class=\"number\">10</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\">        <span class=\"comment\">//调用方法的时候，人家要几个，你就给几个，人家要什么类型的，你就给什么类型的</span></span><br><span class=\"line\">        <span class=\"comment\">//getMax(30);</span></span><br><span class=\"line\">        <span class=\"comment\">//getMax(10.0,20.0);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//在main()方法中调用定义好的方法（使用变量）</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">        getMax(a, b);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//定义一个方法，用于打印两个数字中的较大数，例如getMax()</span></span><br><span class=\"line\">    <span class=\"comment\">//为方法定义两个参数，用于接收两个数字</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">getMax</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//使用分支语句分两种情况对两个数字的大小关系进行处理</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a &gt; b) &#123;</span><br><span class=\"line\">            System.out.println(a);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(b);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-带返回值方法的定义和调用\"><a href=\"#4-带返回值方法的定义和调用\" class=\"headerlink\" title=\"4. 带返回值方法的定义和调用\"></a>4. 带返回值方法的定义和调用</h2><h3 id=\"4-1-带返回值方法定义和调用\"><a href=\"#4-1-带返回值方法定义和调用\" class=\"headerlink\" title=\"4.1 带返回值方法定义和调用\"></a>4.1 带返回值方法定义和调用</h3><ul>\n<li><p>定义格式</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> 数据类型 方法名 ( 参数 ) &#123; </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> 数据 ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>范例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isEvenNumber</span><span class=\"params\">( <span class=\"type\">int</span> number )</span> &#123;           </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span> ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">getMax</span><span class=\"params\">( <span class=\"type\">int</span> a, <span class=\"type\">int</span> b )</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>  <span class=\"number\">100</span> ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>注意：<ul>\n<li>方法定义时return后面的返回值与方法定义上的数据类型要匹配，否则程序将报错</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>调用格式</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方法名 ( 参数 ) ;</span><br><span class=\"line\">数据类型 变量名 = 方法名 ( 参数 ) ;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>范例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">isEvenNumber ( <span class=\"number\">5</span> ) ;</span><br><span class=\"line\"><span class=\"type\">boolean</span>  <span class=\"variable\">flag</span> <span class=\"operator\">=</span>  isEvenNumber ( <span class=\"number\">5</span> ); </span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>注意：<ul>\n<li>方法的返回值通常会使用变量接收，否则该返回值将无意义</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-2-带返回值方法练习1\"><a href=\"#4-2-带返回值方法练习1\" class=\"headerlink\" title=\"4.2 带返回值方法练习1\"></a>4.2 带返回值方法练习1</h3><ul>\n<li><p>需求：设计一个方法可以获取两个数的较大值，数据来自于参数</p>\n</li>\n<li><p>思路：</p>\n<ul>\n<li>①定义一个方法，用于获取两个数字中的较大数 </li>\n<li>②使用分支语句分两种情况对两个数字的大小关系进行处理 </li>\n<li>③根据题设分别设置两种情况下对应的返回结果 </li>\n<li>④在main()方法中调用定义好的方法并使用变量保存 </li>\n<li>⑤在main()方法中调用定义好的方法并直接打印结果</li>\n</ul>\n</li>\n<li><p>代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//在main()方法中调用定义好的方法并使用变量保存</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> getMax(<span class=\"number\">10</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\">        System.out.println(result);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//在main()方法中调用定义好的方法并直接打印结果</span></span><br><span class=\"line\">        System.out.println(getMax(<span class=\"number\">10</span>,<span class=\"number\">20</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//定义一个方法，用于获取两个数字中的较大数</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">getMax</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//使用分支语句分两种情况对两个数字的大小关系进行处理</span></span><br><span class=\"line\">        <span class=\"comment\">//根据题设分别设置两种情况下对应的返回结果</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a &gt; b) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"4-3-带返回值方法练习2\"><a href=\"#4-3-带返回值方法练习2\" class=\"headerlink\" title=\"4.3 带返回值方法练习2\"></a>4.3 带返回值方法练习2</h3><p>需求：</p>\n<p>​\t定义一个方法，求一家商场每个季度的营业额。根据方法结果再计算出全年营业额。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.demo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodDemo9</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">/*需求：定义一个方法，求一家商场每个季度的营业额。</span></span><br><span class=\"line\"><span class=\"comment\">        根据方法结果再计算出全年营业额。*/</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">sum1</span> <span class=\"operator\">=</span> getSum(<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">sum2</span> <span class=\"operator\">=</span> getSum(<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">sum3</span> <span class=\"operator\">=</span> getSum(<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">sum4</span> <span class=\"operator\">=</span> getSum(<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> sum1 + sum2 + sum3 + sum4;</span><br><span class=\"line\">        System.out.println(sum);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//心得：</span></span><br><span class=\"line\">    <span class=\"comment\">//1.我要干嘛？  决定了方法体   每个季度的营业额</span></span><br><span class=\"line\">    <span class=\"comment\">//2.我干这件事情，需要什么才能完成？ 决定了形参 需要三个月的营业额 a b c</span></span><br><span class=\"line\">    <span class=\"comment\">//3.我干完这件事情，看调用处是否需要使用方法的结果。   决定了返回值</span></span><br><span class=\"line\">    <span class=\"comment\">//如果需要使用，那么必须返回</span></span><br><span class=\"line\">    <span class=\"comment\">//如果不需要使用，可以返回也可以不返回</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">getSum</span><span class=\"params\">(<span class=\"type\">int</span> month1,<span class=\"type\">int</span> month2,<span class=\"type\">int</span> month3)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> month1 + month2 + month3;</span><br><span class=\"line\">        <span class=\"comment\">//因为方法的调用处，需要继续使用这个结果</span></span><br><span class=\"line\">        <span class=\"comment\">//所以我们必须要把sum返回</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-4-带返回值方法练习3\"><a href=\"#4-4-带返回值方法练习3\" class=\"headerlink\" title=\"4.4 带返回值方法练习3\"></a>4.4 带返回值方法练习3</h3><p>需求：</p>\n<p>​\t键盘录入两个圆的半径（整数），比较两个圆的面积。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodDemo10</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//需求：键盘录入两个圆的半径（整数），比较两个圆的面积。</span></span><br><span class=\"line\">        <span class=\"comment\">//键盘录入圆的半径</span></span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入圆的半径&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">radii1</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入第二个圆的半径&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">radii2</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">area1</span> <span class=\"operator\">=</span> getArea(radii1);</span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">area2</span> <span class=\"operator\">=</span> getArea(radii2);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(area1 &gt; area2)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;第一个圆更大&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;第二个圆更大&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//心得：</span></span><br><span class=\"line\">    <span class=\"comment\">//1.我要干嘛？   求圆的面积</span></span><br><span class=\"line\">    <span class=\"comment\">//2.我干这件事情，需要什么才能完成？        半径</span></span><br><span class=\"line\">    <span class=\"comment\">//3.方法的调用处，是否需要继续使用方法的结果    要比较</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">double</span> <span class=\"title function_\">getArea</span><span class=\"params\">(<span class=\"type\">int</span> radii)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">area</span> <span class=\"operator\">=</span> <span class=\"number\">3.14</span> * radii * radii;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> area;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-方法的注意事项\"><a href=\"#5-方法的注意事项\" class=\"headerlink\" title=\"5. 方法的注意事项\"></a>5. 方法的注意事项</h2><h3 id=\"5-1-方法的注意事项\"><a href=\"#5-1-方法的注意事项\" class=\"headerlink\" title=\"5.1 方法的注意事项\"></a>5.1 方法的注意事项</h3><ul>\n<li><p>方法不能嵌套定义</p>\n<ul>\n<li><p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">methodOne</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">methodTwo</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">       \t\t<span class=\"comment\">// 这里会引发编译错误!!!</span></span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>void表示无返回值，可以省略return，也可以单独的书写return，后面不加数据</p>\n<ul>\n<li><p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">methodTwo</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//return 100; 编译错误，因为没有具体返回值类型</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span>;\t</span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(100); return语句后面不能跟数据或代码</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-2-方法的通用格式\"><a href=\"#5-2-方法的通用格式\" class=\"headerlink\" title=\"5.2 方法的通用格式\"></a>5.2 方法的通用格式</h3><ul>\n<li><p>格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> 返回值类型 方法名(参数) &#123;</span><br><span class=\"line\">   方法体; </span><br><span class=\"line\">   <span class=\"keyword\">return</span> 数据 ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解释：</p>\n<ul>\n<li><p>public static \t修饰符，目前先记住这个格式</p>\n<p>   返回值类型\t方法操作完毕之后返回的数据的数据类型</p>\n<p>​\t\t\t如果方法操作完毕，没有数据返回，这里写void，而且方法体中一般不写return</p>\n<p>   方法名\t\t调用方法时候使用的标识</p>\n<p>   参数\t\t由数据类型和变量名组成，多个参数之间用逗号隔开</p>\n<p>   方法体\t\t完成功能的代码块</p>\n<p>   return\t\t如果方法操作完毕，有数据返回，用于把数据返回给调用者</p>\n</li>\n</ul>\n</li>\n<li><p>定义方法时，要做到两个明确</p>\n<ul>\n<li>明确返回值类型：主要是明确方法操作完毕之后是否有数据返回，如果没有，写void；如果有，写对应的数据类型</li>\n<li>明确参数：主要是明确参数的类型和数量</li>\n</ul>\n</li>\n<li><p>调用方法时的注意：</p>\n<ul>\n<li>void类型的方法，直接调用即可</li>\n<li>非void类型的方法，推荐用变量接收调用</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-方法重载\"><a href=\"#6-方法重载\" class=\"headerlink\" title=\"6. 方法重载\"></a>6. 方法重载</h2><h3 id=\"6-1-方法重载\"><a href=\"#6-1-方法重载\" class=\"headerlink\" title=\"6.1 方法重载\"></a>6.1 方法重载</h3><ul>\n<li><p>方法重载概念</p>\n<p>方法重载指同一个类中定义的多个方法之间的关系，满足下列条件的多个方法相互构成重载</p>\n<ul>\n<li>多个方法在同一个类中</li>\n<li>多个方法具有相同的方法名</li>\n<li>多个方法的参数不相同，类型不同或者数量不同</li>\n</ul>\n</li>\n<li><p>注意：</p>\n<ul>\n<li>重载仅对应方法的定义，与方法的调用无关，调用方式参照标准格式</li>\n<li>重载仅针对同一个类中方法的名称与参数进行识别，与返回值无关，换句话说不能通过返回值来判定两个方法是否相互构成重载</li>\n</ul>\n</li>\n<li><p>正确范例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodDemo</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">fn</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> &#123;</span><br><span class=\"line\">    \t<span class=\"comment\">//方法体</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">fn</span><span class=\"params\">(<span class=\"type\">double</span> a)</span> &#123;</span><br><span class=\"line\">    \t<span class=\"comment\">//方法体</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodDemo</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">float</span> <span class=\"title function_\">fn</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> &#123;</span><br><span class=\"line\">    \t<span class=\"comment\">//方法体</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">fn</span><span class=\"params\">(<span class=\"type\">int</span> a , <span class=\"type\">int</span> b)</span> &#123;</span><br><span class=\"line\">    \t<span class=\"comment\">//方法体</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>错误范例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodDemo</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">fn</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> &#123;</span><br><span class=\"line\">    \t<span class=\"comment\">//方法体</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">fn</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> &#123; \t<span class=\"comment\">/*错误原因：重载与返回值无关*/</span></span><br><span class=\"line\">    \t<span class=\"comment\">//方法体</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodDemo01</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">fn</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//方法体</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodDemo02</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">fn</span><span class=\"params\">(<span class=\"type\">double</span> a)</span> &#123; <span class=\"comment\">/*错误原因：这是两个类的两个fn方法*/</span></span><br><span class=\"line\">        <span class=\"comment\">//方法体</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"6-2-方法重载练习\"><a href=\"#6-2-方法重载练习\" class=\"headerlink\" title=\"6.2 方法重载练习\"></a>6.2 方法重载练习</h3><ul>\n<li><p>需求：使用方法重载的思想，设计比较两个整数是否相同的方法，兼容全整数类型（byte,short,int,long） </p>\n</li>\n<li><p>思路：</p>\n<ul>\n<li>①定义比较两个数字的是否相同的方法compare()方法，参数选择两个int型参数</li>\n<li>②定义对应的重载方法，变更对应的参数类型，参数变更为两个long型参数</li>\n<li>③定义所有的重载方法，两个byte类型与两个short类型参数 </li>\n<li>④完成方法的调用，测试运行结果</li>\n</ul>\n</li>\n<li><p>代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//调用方法</span></span><br><span class=\"line\">        System.out.println(compare(<span class=\"number\">10</span>, <span class=\"number\">20</span>));</span><br><span class=\"line\">        System.out.println(compare((<span class=\"type\">byte</span>) <span class=\"number\">10</span>, (<span class=\"type\">byte</span>) <span class=\"number\">20</span>));</span><br><span class=\"line\">        System.out.println(compare((<span class=\"type\">short</span>) <span class=\"number\">10</span>, (<span class=\"type\">short</span>) <span class=\"number\">20</span>));</span><br><span class=\"line\">        System.out.println(compare(<span class=\"number\">10L</span>, <span class=\"number\">20L</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//int</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">compare</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;int&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a == b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//byte</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">compare</span><span class=\"params\">(<span class=\"type\">byte</span> a, <span class=\"type\">byte</span> b)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;byte&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a == b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//short</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">compare</span><span class=\"params\">(<span class=\"type\">short</span> a, <span class=\"type\">short</span> b)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;short&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a == b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//long</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">compare</span><span class=\"params\">(<span class=\"type\">long</span> a, <span class=\"type\">long</span> b)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;long&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a == b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"7-3-数组遍历\"><a href=\"#7-3-数组遍历\" class=\"headerlink\" title=\"7.3 数组遍历\"></a>7.3 数组遍历</h3><ul>\n<li><p>需求：设计一个方法用于数组遍历，要求遍历的结果是在一行上的。例如：[11, 22, 33, 44, 55] </p>\n</li>\n<li><p>思路：</p>\n<ul>\n<li><p>①因为要求结果在一行上输出，所以这里需要在学习一个新的输出语句System.out.print(“内容”);</p>\n<p>System.out.println(“内容”); 输出内容并换行</p>\n<p>System.out.print(“内容”); 输出内容不换行</p>\n<p>System.out.println(); 起到换行的作用</p>\n</li>\n<li><p>②定义一个数组，用静态初始化完成数组元素初始化</p>\n</li>\n<li><p>③定义一个方法，用数组遍历通用格式对数组进行遍历</p>\n</li>\n<li><p>④用新的输出语句修改遍历操作</p>\n</li>\n<li><p>⑤调用遍历方法</p>\n</li>\n</ul>\n</li>\n<li><p>代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test1</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">/*  //先打印数据，再进行换行</span></span><br><span class=\"line\"><span class=\"comment\">        System.out.println(&quot;aaa&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">        //只打印不换行</span></span><br><span class=\"line\"><span class=\"comment\">        System.out.print(&quot;bbb&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">        System.out.print(&quot;ddd&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">        //不打印任何内容，只换行</span></span><br><span class=\"line\"><span class=\"comment\">        System.out.println();</span></span><br><span class=\"line\"><span class=\"comment\">        System.out.print(&quot;cc&quot;);*/</span></span><br><span class=\"line\">        <span class=\"comment\">//设计一个方法用于数组遍历，要求遍历的结果是在一行上的。例如：[11, 22, 33, 44, 55]</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">        printArr(arr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//1.我要遍历数组</span></span><br><span class=\"line\">    <span class=\"comment\">//2.需要什么？  数组</span></span><br><span class=\"line\">    <span class=\"comment\">//3.调用处是否需要使用方法的结果。</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">printArr</span><span class=\"params\">(<span class=\"type\">int</span>[] arr)</span>&#123;</span><br><span class=\"line\">        System.out.print(<span class=\"string\">&quot;[&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i == arr.length - <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                System.out.println(arr[i] + <span class=\"string\">&quot;]&quot;</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                System.out.print(arr[i] + <span class=\"string\">&quot;, &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"7-4-数组最大值\"><a href=\"#7-4-数组最大值\" class=\"headerlink\" title=\"7.4 数组最大值\"></a>7.4 数组最大值</h3><ul>\n<li><p>需求：设计一个方法用于获取数组中元素的最大值 </p>\n</li>\n<li><p>思路：</p>\n<ul>\n<li>①定义一个数组，用静态初始化完成数组元素初始化</li>\n<li>②定义一个方法，用来获取数组中的最大值，最值的认知和讲解我们在数组中已经讲解过了</li>\n<li>③调用获取最大值方法，用变量接收返回结果</li>\n<li>④把结果输出在控制台</li>\n</ul>\n</li>\n<li><p>代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodTest02</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//定义一个数组，用静态初始化完成数组元素初始化</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">12</span>, <span class=\"number\">45</span>, <span class=\"number\">98</span>, <span class=\"number\">73</span>, <span class=\"number\">60</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//调用获取最大值方法，用变量接收返回结果</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> getMax(arr);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//把结果输出在控制台</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;number:&quot;</span> + number);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//定义一个方法，用来获取数组中的最大值</span></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">        两个明确：</span></span><br><span class=\"line\"><span class=\"comment\">            返回值类型：int</span></span><br><span class=\"line\"><span class=\"comment\">            参数：int[] arr</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">getMax</span><span class=\"params\">(<span class=\"type\">int</span>[] arr)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">max</span> <span class=\"operator\">=</span> arr[<span class=\"number\">0</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> x=<span class=\"number\">1</span>; x&lt;arr.length; x++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(arr[x] &gt; max) &#123;</span><br><span class=\"line\">                max = arr[x];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"7-6-获取索引\"><a href=\"#7-6-获取索引\" class=\"headerlink\" title=\"7.6 获取索引\"></a>7.6 获取索引</h3><p>需求：</p>\n<p>​\t定义一个方法获取数字，在数组中的索引位置，将结果返回给调用处，如果有重复的，只要获取第一个即可。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.demo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test4</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//定义一个方法获取数字，在数组中的索引位置，将结果返回给调用处</span></span><br><span class=\"line\">        <span class=\"comment\">//如果有重复的，只要获取第一个即可</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">index</span> <span class=\"operator\">=</span> contains(arr, <span class=\"number\">3</span>);</span><br><span class=\"line\">        System.out.println(index);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1. 我要干嘛？判断数组中的某一个数是否存在</span></span><br><span class=\"line\">    <span class=\"comment\">//2. 需要什么？数组 数字</span></span><br><span class=\"line\">    <span class=\"comment\">//3. 调用处是否需要继续使用？返回</span></span><br><span class=\"line\">    <span class=\"comment\">//获取number在arr中的位置</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">contains</span><span class=\"params\">(<span class=\"type\">int</span>[] arr, <span class=\"type\">int</span> number)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//遍历arr得到每一个元素</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//拿着每一个元素跟number比较</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(arr[i] == number)&#123;</span><br><span class=\"line\">                <span class=\"comment\">//如果相等，表示找到了</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//当循环结束之后，如果还不能返回索引，表示数组中不存在该数据</span></span><br><span class=\"line\">        <span class=\"comment\">//可以返回-1</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n","length":9090,"excerpt":"","more":"<h2 id=\"1-方法概述\"><a href=\"#1-方法概述\" class=\"headerlink\" title=\"1. 方法概述\"></a>1. 方法概述</h2><h3 id=\"1-1-方法的概念\"><a href=\"#1-1-方法的概念\" class=\"headerlink\" title=\"1.1 方法的概念\"></a>1.1 方法的概念</h3><p>​\t方法（method）是程序中最小的执行单元</p>\n<ul>\n<li>注意：<ul>\n<li>方法必须先创建才可以使用，该过程成为方法定义</li>\n<li>方法创建后并不是直接可以运行的，需要手动使用后，才执行，该过程成为方法调用</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-方法的定义和调用\"><a href=\"#2-方法的定义和调用\" class=\"headerlink\" title=\"2. 方法的定义和调用\"></a>2. 方法的定义和调用</h2><h3 id=\"2-1-无参数方法定义和调用\"><a href=\"#2-1-无参数方法定义和调用\" class=\"headerlink\" title=\"2.1 无参数方法定义和调用\"></a>2.1 无参数方法定义和调用</h3><ul>\n<li><p>定义格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> 方法名 (   ) &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 方法体;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>范例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">method</span> <span class=\"params\">(    )</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 方法体;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>调用格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方法名();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>范例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">method();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>注意：</p>\n<p>​\t方法必须先定义，后调用，否则程序将报错</p>\n</li>\n</ul>\n<h3 id=\"2-3-无参数方法的练习\"><a href=\"#2-3-无参数方法的练习\" class=\"headerlink\" title=\"2.3 无参数方法的练习\"></a>2.3 无参数方法的练习</h3><ul>\n<li>需求：设计一个方法用于打印两个数中的较大数 </li>\n<li>思路：<ul>\n<li>①定义一个方法，用于打印两个数字中的较大数，例如getMax() </li>\n<li>②方法中定义两个变量，用于保存两个数字 </li>\n<li>③使用分支语句分两种情况对两个数字的大小关系进行处理 </li>\n<li>④在main()方法中调用定义好的方法</li>\n</ul>\n</li>\n<li>代码：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//在main()方法中调用定义好的方法</span></span><br><span class=\"line\">        getMax();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//定义一个方法，用于打印两个数字中的较大数，例如getMax()</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">getMax</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//方法中定义两个变量，用于保存两个数字</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//使用分支语句分两种情况对两个数字的大小关系进行处理</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a &gt; b) &#123;</span><br><span class=\"line\">            System.out.println(a);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(b);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-带参数方法定义和调用\"><a href=\"#3-带参数方法定义和调用\" class=\"headerlink\" title=\"3. 带参数方法定义和调用\"></a>3. 带参数方法定义和调用</h2><h3 id=\"3-1-带参数方法定义和调用\"><a href=\"#3-1-带参数方法定义和调用\" class=\"headerlink\" title=\"3.1 带参数方法定义和调用\"></a>3.1 带参数方法定义和调用</h3><ul>\n<li><p>定义格式：</p>\n<p>参数：由数据类型和变量名组成 -  数据类型 变量名</p>\n<p>参数范例：int a</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> 方法名 (参数<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t方法体;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> 方法名 (参数<span class=\"number\">1</span>, 参数<span class=\"number\">2</span>, 参数<span class=\"number\">3.</span>..) &#123;</span><br><span class=\"line\">\t方法体;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>范例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">isEvenNumber</span><span class=\"params\">(<span class=\"type\">int</span> number)</span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">getMax</span><span class=\"params\">(<span class=\"type\">int</span> num1, <span class=\"type\">int</span> num2)</span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>注意：</p>\n<pre><code>  方法定义时，参数中的数据类型与变量名都不能缺少，缺少任意一个程序将报错\n    \n  方法定义时，多个参数之间使用逗号( ，)分隔\n</code></pre>\n</li>\n</ul>\n</li>\n<li><p>调用格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方法名(参数)；</span><br><span class=\"line\"></span><br><span class=\"line\">方法名(参数<span class=\"number\">1</span>,参数<span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>范例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">isEvenNumber(<span class=\"number\">10</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">getMax(<span class=\"number\">10</span>,<span class=\"number\">20</span>);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>方法调用时，参数的数量与类型必须与方法定义中的设置相匹配，否则程序将报错</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-2-形参和实参\"><a href=\"#3-2-形参和实参\" class=\"headerlink\" title=\"3.2 形参和实参\"></a>3.2 形参和实参</h3><ol>\n<li>形参：方法定义中的参数</li>\n</ol>\n<p>​          等同于变量定义格式，例如：int number</p>\n<ol start=\"2\">\n<li>实参：方法调用中的参数</li>\n</ol>\n<p>​          等同于使用变量或常量，例如： 10  number</p>\n<h3 id=\"3-3-带参数方法练习\"><a href=\"#3-3-带参数方法练习\" class=\"headerlink\" title=\"3.3 带参数方法练习\"></a>3.3 带参数方法练习</h3><ul>\n<li>需求：设计一个方法用于打印两个数中的较大数，数据来自于方法参数 }</li>\n<li>思路：<ul>\n<li>①定义一个方法，用于打印两个数字中的较大数，例如getMax() </li>\n<li>②为方法定义两个参数，用于接收两个数字 </li>\n<li>③使用分支语句分两种情况对两个数字的大小关系进行处理 </li>\n<li>④在main()方法中调用定义好的方法（使用常量）</li>\n<li>⑤在main()方法中调用定义好的方法（使用变量）</li>\n</ul>\n</li>\n<li>代码：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//在main()方法中调用定义好的方法（使用常量）</span></span><br><span class=\"line\">        getMax(<span class=\"number\">10</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\">        <span class=\"comment\">//调用方法的时候，人家要几个，你就给几个，人家要什么类型的，你就给什么类型的</span></span><br><span class=\"line\">        <span class=\"comment\">//getMax(30);</span></span><br><span class=\"line\">        <span class=\"comment\">//getMax(10.0,20.0);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//在main()方法中调用定义好的方法（使用变量）</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">        getMax(a, b);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//定义一个方法，用于打印两个数字中的较大数，例如getMax()</span></span><br><span class=\"line\">    <span class=\"comment\">//为方法定义两个参数，用于接收两个数字</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">getMax</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//使用分支语句分两种情况对两个数字的大小关系进行处理</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a &gt; b) &#123;</span><br><span class=\"line\">            System.out.println(a);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(b);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-带返回值方法的定义和调用\"><a href=\"#4-带返回值方法的定义和调用\" class=\"headerlink\" title=\"4. 带返回值方法的定义和调用\"></a>4. 带返回值方法的定义和调用</h2><h3 id=\"4-1-带返回值方法定义和调用\"><a href=\"#4-1-带返回值方法定义和调用\" class=\"headerlink\" title=\"4.1 带返回值方法定义和调用\"></a>4.1 带返回值方法定义和调用</h3><ul>\n<li><p>定义格式</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> 数据类型 方法名 ( 参数 ) &#123; </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> 数据 ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>范例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isEvenNumber</span><span class=\"params\">( <span class=\"type\">int</span> number )</span> &#123;           </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span> ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">getMax</span><span class=\"params\">( <span class=\"type\">int</span> a, <span class=\"type\">int</span> b )</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>  <span class=\"number\">100</span> ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>注意：<ul>\n<li>方法定义时return后面的返回值与方法定义上的数据类型要匹配，否则程序将报错</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>调用格式</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方法名 ( 参数 ) ;</span><br><span class=\"line\">数据类型 变量名 = 方法名 ( 参数 ) ;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>范例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">isEvenNumber ( <span class=\"number\">5</span> ) ;</span><br><span class=\"line\"><span class=\"type\">boolean</span>  <span class=\"variable\">flag</span> <span class=\"operator\">=</span>  isEvenNumber ( <span class=\"number\">5</span> ); </span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>注意：<ul>\n<li>方法的返回值通常会使用变量接收，否则该返回值将无意义</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-2-带返回值方法练习1\"><a href=\"#4-2-带返回值方法练习1\" class=\"headerlink\" title=\"4.2 带返回值方法练习1\"></a>4.2 带返回值方法练习1</h3><ul>\n<li><p>需求：设计一个方法可以获取两个数的较大值，数据来自于参数</p>\n</li>\n<li><p>思路：</p>\n<ul>\n<li>①定义一个方法，用于获取两个数字中的较大数 </li>\n<li>②使用分支语句分两种情况对两个数字的大小关系进行处理 </li>\n<li>③根据题设分别设置两种情况下对应的返回结果 </li>\n<li>④在main()方法中调用定义好的方法并使用变量保存 </li>\n<li>⑤在main()方法中调用定义好的方法并直接打印结果</li>\n</ul>\n</li>\n<li><p>代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//在main()方法中调用定义好的方法并使用变量保存</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> getMax(<span class=\"number\">10</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\">        System.out.println(result);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//在main()方法中调用定义好的方法并直接打印结果</span></span><br><span class=\"line\">        System.out.println(getMax(<span class=\"number\">10</span>,<span class=\"number\">20</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//定义一个方法，用于获取两个数字中的较大数</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">getMax</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//使用分支语句分两种情况对两个数字的大小关系进行处理</span></span><br><span class=\"line\">        <span class=\"comment\">//根据题设分别设置两种情况下对应的返回结果</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a &gt; b) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"4-3-带返回值方法练习2\"><a href=\"#4-3-带返回值方法练习2\" class=\"headerlink\" title=\"4.3 带返回值方法练习2\"></a>4.3 带返回值方法练习2</h3><p>需求：</p>\n<p>​\t定义一个方法，求一家商场每个季度的营业额。根据方法结果再计算出全年营业额。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.demo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodDemo9</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">/*需求：定义一个方法，求一家商场每个季度的营业额。</span></span><br><span class=\"line\"><span class=\"comment\">        根据方法结果再计算出全年营业额。*/</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">sum1</span> <span class=\"operator\">=</span> getSum(<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">sum2</span> <span class=\"operator\">=</span> getSum(<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">sum3</span> <span class=\"operator\">=</span> getSum(<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">sum4</span> <span class=\"operator\">=</span> getSum(<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> sum1 + sum2 + sum3 + sum4;</span><br><span class=\"line\">        System.out.println(sum);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//心得：</span></span><br><span class=\"line\">    <span class=\"comment\">//1.我要干嘛？  决定了方法体   每个季度的营业额</span></span><br><span class=\"line\">    <span class=\"comment\">//2.我干这件事情，需要什么才能完成？ 决定了形参 需要三个月的营业额 a b c</span></span><br><span class=\"line\">    <span class=\"comment\">//3.我干完这件事情，看调用处是否需要使用方法的结果。   决定了返回值</span></span><br><span class=\"line\">    <span class=\"comment\">//如果需要使用，那么必须返回</span></span><br><span class=\"line\">    <span class=\"comment\">//如果不需要使用，可以返回也可以不返回</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">getSum</span><span class=\"params\">(<span class=\"type\">int</span> month1,<span class=\"type\">int</span> month2,<span class=\"type\">int</span> month3)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> month1 + month2 + month3;</span><br><span class=\"line\">        <span class=\"comment\">//因为方法的调用处，需要继续使用这个结果</span></span><br><span class=\"line\">        <span class=\"comment\">//所以我们必须要把sum返回</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-4-带返回值方法练习3\"><a href=\"#4-4-带返回值方法练习3\" class=\"headerlink\" title=\"4.4 带返回值方法练习3\"></a>4.4 带返回值方法练习3</h3><p>需求：</p>\n<p>​\t键盘录入两个圆的半径（整数），比较两个圆的面积。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodDemo10</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//需求：键盘录入两个圆的半径（整数），比较两个圆的面积。</span></span><br><span class=\"line\">        <span class=\"comment\">//键盘录入圆的半径</span></span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入圆的半径&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">radii1</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入第二个圆的半径&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">radii2</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">area1</span> <span class=\"operator\">=</span> getArea(radii1);</span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">area2</span> <span class=\"operator\">=</span> getArea(radii2);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(area1 &gt; area2)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;第一个圆更大&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;第二个圆更大&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//心得：</span></span><br><span class=\"line\">    <span class=\"comment\">//1.我要干嘛？   求圆的面积</span></span><br><span class=\"line\">    <span class=\"comment\">//2.我干这件事情，需要什么才能完成？        半径</span></span><br><span class=\"line\">    <span class=\"comment\">//3.方法的调用处，是否需要继续使用方法的结果    要比较</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">double</span> <span class=\"title function_\">getArea</span><span class=\"params\">(<span class=\"type\">int</span> radii)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">area</span> <span class=\"operator\">=</span> <span class=\"number\">3.14</span> * radii * radii;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> area;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-方法的注意事项\"><a href=\"#5-方法的注意事项\" class=\"headerlink\" title=\"5. 方法的注意事项\"></a>5. 方法的注意事项</h2><h3 id=\"5-1-方法的注意事项\"><a href=\"#5-1-方法的注意事项\" class=\"headerlink\" title=\"5.1 方法的注意事项\"></a>5.1 方法的注意事项</h3><ul>\n<li><p>方法不能嵌套定义</p>\n<ul>\n<li><p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">methodOne</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">methodTwo</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">       \t\t<span class=\"comment\">// 这里会引发编译错误!!!</span></span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>void表示无返回值，可以省略return，也可以单独的书写return，后面不加数据</p>\n<ul>\n<li><p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">methodTwo</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//return 100; 编译错误，因为没有具体返回值类型</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span>;\t</span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(100); return语句后面不能跟数据或代码</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-2-方法的通用格式\"><a href=\"#5-2-方法的通用格式\" class=\"headerlink\" title=\"5.2 方法的通用格式\"></a>5.2 方法的通用格式</h3><ul>\n<li><p>格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> 返回值类型 方法名(参数) &#123;</span><br><span class=\"line\">   方法体; </span><br><span class=\"line\">   <span class=\"keyword\">return</span> 数据 ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解释：</p>\n<ul>\n<li><p>public static \t修饰符，目前先记住这个格式</p>\n<p>   返回值类型\t方法操作完毕之后返回的数据的数据类型</p>\n<p>​\t\t\t如果方法操作完毕，没有数据返回，这里写void，而且方法体中一般不写return</p>\n<p>   方法名\t\t调用方法时候使用的标识</p>\n<p>   参数\t\t由数据类型和变量名组成，多个参数之间用逗号隔开</p>\n<p>   方法体\t\t完成功能的代码块</p>\n<p>   return\t\t如果方法操作完毕，有数据返回，用于把数据返回给调用者</p>\n</li>\n</ul>\n</li>\n<li><p>定义方法时，要做到两个明确</p>\n<ul>\n<li>明确返回值类型：主要是明确方法操作完毕之后是否有数据返回，如果没有，写void；如果有，写对应的数据类型</li>\n<li>明确参数：主要是明确参数的类型和数量</li>\n</ul>\n</li>\n<li><p>调用方法时的注意：</p>\n<ul>\n<li>void类型的方法，直接调用即可</li>\n<li>非void类型的方法，推荐用变量接收调用</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-方法重载\"><a href=\"#6-方法重载\" class=\"headerlink\" title=\"6. 方法重载\"></a>6. 方法重载</h2><h3 id=\"6-1-方法重载\"><a href=\"#6-1-方法重载\" class=\"headerlink\" title=\"6.1 方法重载\"></a>6.1 方法重载</h3><ul>\n<li><p>方法重载概念</p>\n<p>方法重载指同一个类中定义的多个方法之间的关系，满足下列条件的多个方法相互构成重载</p>\n<ul>\n<li>多个方法在同一个类中</li>\n<li>多个方法具有相同的方法名</li>\n<li>多个方法的参数不相同，类型不同或者数量不同</li>\n</ul>\n</li>\n<li><p>注意：</p>\n<ul>\n<li>重载仅对应方法的定义，与方法的调用无关，调用方式参照标准格式</li>\n<li>重载仅针对同一个类中方法的名称与参数进行识别，与返回值无关，换句话说不能通过返回值来判定两个方法是否相互构成重载</li>\n</ul>\n</li>\n<li><p>正确范例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodDemo</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">fn</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> &#123;</span><br><span class=\"line\">    \t<span class=\"comment\">//方法体</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">fn</span><span class=\"params\">(<span class=\"type\">double</span> a)</span> &#123;</span><br><span class=\"line\">    \t<span class=\"comment\">//方法体</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodDemo</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">float</span> <span class=\"title function_\">fn</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> &#123;</span><br><span class=\"line\">    \t<span class=\"comment\">//方法体</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">fn</span><span class=\"params\">(<span class=\"type\">int</span> a , <span class=\"type\">int</span> b)</span> &#123;</span><br><span class=\"line\">    \t<span class=\"comment\">//方法体</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>错误范例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodDemo</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">fn</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> &#123;</span><br><span class=\"line\">    \t<span class=\"comment\">//方法体</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">fn</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> &#123; \t<span class=\"comment\">/*错误原因：重载与返回值无关*/</span></span><br><span class=\"line\">    \t<span class=\"comment\">//方法体</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodDemo01</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">fn</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//方法体</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodDemo02</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">fn</span><span class=\"params\">(<span class=\"type\">double</span> a)</span> &#123; <span class=\"comment\">/*错误原因：这是两个类的两个fn方法*/</span></span><br><span class=\"line\">        <span class=\"comment\">//方法体</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"6-2-方法重载练习\"><a href=\"#6-2-方法重载练习\" class=\"headerlink\" title=\"6.2 方法重载练习\"></a>6.2 方法重载练习</h3><ul>\n<li><p>需求：使用方法重载的思想，设计比较两个整数是否相同的方法，兼容全整数类型（byte,short,int,long） </p>\n</li>\n<li><p>思路：</p>\n<ul>\n<li>①定义比较两个数字的是否相同的方法compare()方法，参数选择两个int型参数</li>\n<li>②定义对应的重载方法，变更对应的参数类型，参数变更为两个long型参数</li>\n<li>③定义所有的重载方法，两个byte类型与两个short类型参数 </li>\n<li>④完成方法的调用，测试运行结果</li>\n</ul>\n</li>\n<li><p>代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//调用方法</span></span><br><span class=\"line\">        System.out.println(compare(<span class=\"number\">10</span>, <span class=\"number\">20</span>));</span><br><span class=\"line\">        System.out.println(compare((<span class=\"type\">byte</span>) <span class=\"number\">10</span>, (<span class=\"type\">byte</span>) <span class=\"number\">20</span>));</span><br><span class=\"line\">        System.out.println(compare((<span class=\"type\">short</span>) <span class=\"number\">10</span>, (<span class=\"type\">short</span>) <span class=\"number\">20</span>));</span><br><span class=\"line\">        System.out.println(compare(<span class=\"number\">10L</span>, <span class=\"number\">20L</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//int</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">compare</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;int&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a == b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//byte</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">compare</span><span class=\"params\">(<span class=\"type\">byte</span> a, <span class=\"type\">byte</span> b)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;byte&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a == b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//short</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">compare</span><span class=\"params\">(<span class=\"type\">short</span> a, <span class=\"type\">short</span> b)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;short&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a == b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//long</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">compare</span><span class=\"params\">(<span class=\"type\">long</span> a, <span class=\"type\">long</span> b)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;long&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a == b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"7-3-数组遍历\"><a href=\"#7-3-数组遍历\" class=\"headerlink\" title=\"7.3 数组遍历\"></a>7.3 数组遍历</h3><ul>\n<li><p>需求：设计一个方法用于数组遍历，要求遍历的结果是在一行上的。例如：[11, 22, 33, 44, 55] </p>\n</li>\n<li><p>思路：</p>\n<ul>\n<li><p>①因为要求结果在一行上输出，所以这里需要在学习一个新的输出语句System.out.print(“内容”);</p>\n<p>System.out.println(“内容”); 输出内容并换行</p>\n<p>System.out.print(“内容”); 输出内容不换行</p>\n<p>System.out.println(); 起到换行的作用</p>\n</li>\n<li><p>②定义一个数组，用静态初始化完成数组元素初始化</p>\n</li>\n<li><p>③定义一个方法，用数组遍历通用格式对数组进行遍历</p>\n</li>\n<li><p>④用新的输出语句修改遍历操作</p>\n</li>\n<li><p>⑤调用遍历方法</p>\n</li>\n</ul>\n</li>\n<li><p>代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test1</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">/*  //先打印数据，再进行换行</span></span><br><span class=\"line\"><span class=\"comment\">        System.out.println(&quot;aaa&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">        //只打印不换行</span></span><br><span class=\"line\"><span class=\"comment\">        System.out.print(&quot;bbb&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">        System.out.print(&quot;ddd&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">        //不打印任何内容，只换行</span></span><br><span class=\"line\"><span class=\"comment\">        System.out.println();</span></span><br><span class=\"line\"><span class=\"comment\">        System.out.print(&quot;cc&quot;);*/</span></span><br><span class=\"line\">        <span class=\"comment\">//设计一个方法用于数组遍历，要求遍历的结果是在一行上的。例如：[11, 22, 33, 44, 55]</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">        printArr(arr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//1.我要遍历数组</span></span><br><span class=\"line\">    <span class=\"comment\">//2.需要什么？  数组</span></span><br><span class=\"line\">    <span class=\"comment\">//3.调用处是否需要使用方法的结果。</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">printArr</span><span class=\"params\">(<span class=\"type\">int</span>[] arr)</span>&#123;</span><br><span class=\"line\">        System.out.print(<span class=\"string\">&quot;[&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i == arr.length - <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                System.out.println(arr[i] + <span class=\"string\">&quot;]&quot;</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                System.out.print(arr[i] + <span class=\"string\">&quot;, &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"7-4-数组最大值\"><a href=\"#7-4-数组最大值\" class=\"headerlink\" title=\"7.4 数组最大值\"></a>7.4 数组最大值</h3><ul>\n<li><p>需求：设计一个方法用于获取数组中元素的最大值 </p>\n</li>\n<li><p>思路：</p>\n<ul>\n<li>①定义一个数组，用静态初始化完成数组元素初始化</li>\n<li>②定义一个方法，用来获取数组中的最大值，最值的认知和讲解我们在数组中已经讲解过了</li>\n<li>③调用获取最大值方法，用变量接收返回结果</li>\n<li>④把结果输出在控制台</li>\n</ul>\n</li>\n<li><p>代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MethodTest02</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//定义一个数组，用静态初始化完成数组元素初始化</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">12</span>, <span class=\"number\">45</span>, <span class=\"number\">98</span>, <span class=\"number\">73</span>, <span class=\"number\">60</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//调用获取最大值方法，用变量接收返回结果</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> getMax(arr);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//把结果输出在控制台</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;number:&quot;</span> + number);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//定义一个方法，用来获取数组中的最大值</span></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">        两个明确：</span></span><br><span class=\"line\"><span class=\"comment\">            返回值类型：int</span></span><br><span class=\"line\"><span class=\"comment\">            参数：int[] arr</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">getMax</span><span class=\"params\">(<span class=\"type\">int</span>[] arr)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">max</span> <span class=\"operator\">=</span> arr[<span class=\"number\">0</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> x=<span class=\"number\">1</span>; x&lt;arr.length; x++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(arr[x] &gt; max) &#123;</span><br><span class=\"line\">                max = arr[x];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"7-6-获取索引\"><a href=\"#7-6-获取索引\" class=\"headerlink\" title=\"7.6 获取索引\"></a>7.6 获取索引</h3><p>需求：</p>\n<p>​\t定义一个方法获取数字，在数组中的索引位置，将结果返回给调用处，如果有重复的，只要获取第一个即可。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.demo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test4</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//定义一个方法获取数字，在数组中的索引位置，将结果返回给调用处</span></span><br><span class=\"line\">        <span class=\"comment\">//如果有重复的，只要获取第一个即可</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">index</span> <span class=\"operator\">=</span> contains(arr, <span class=\"number\">3</span>);</span><br><span class=\"line\">        System.out.println(index);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1. 我要干嘛？判断数组中的某一个数是否存在</span></span><br><span class=\"line\">    <span class=\"comment\">//2. 需要什么？数组 数字</span></span><br><span class=\"line\">    <span class=\"comment\">//3. 调用处是否需要继续使用？返回</span></span><br><span class=\"line\">    <span class=\"comment\">//获取number在arr中的位置</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">contains</span><span class=\"params\">(<span class=\"type\">int</span>[] arr, <span class=\"type\">int</span> number)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//遍历arr得到每一个元素</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//拿着每一个元素跟number比较</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(arr[i] == number)&#123;</span><br><span class=\"line\">                <span class=\"comment\">//如果相等，表示找到了</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//当循环结束之后，如果还不能返回索引，表示数组中不存在该数据</span></span><br><span class=\"line\">        <span class=\"comment\">//可以返回-1</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n"},{"title":"day08-面向对象","date":"2024-12-12T08:41:00.000Z","photos":["/tupian/j08.jpg"],"_content":"## 1. 类和对象\n\n### 1.1 类和对象的理解\n\n客观存在的事物皆为对象 ，所以我们也常常说万物皆对象。\n\n* 类\n  * 类的理解\n    * 类是对现实生活中一类具有共同属性和行为的事物的抽象\n    * 类是对象的数据类型，类是具有相同属性和行为的一组对象的集合\n    * 简单理解：类就是对现实事物的一种描述\n  * 类的组成\n    * 属性：指事物的特征，例如：手机事物（品牌，价格，尺寸）\n    * 行为：指事物能执行的操作，例如：手机事物（打电话，发短信）\n* 类和对象的关系\n  * 类：类是对现实生活中一类具有共同属性和行为的事物的抽象\n  * 对象：是能够看得到摸的着的真实存在的实体\n  * 简单理解：**类是对事物的一种描述，对象则为具体存在的事物**\n\n### 1.2 类的定义\n\n类的组成是由属性和行为两部分组成\n\n* 属性：在类中通过成员变量来体现（类中方法外的变量）\n* 行为：在类中通过成员方法来体现（和前面的方法相比去掉static关键字即可）\n\n类的定义步骤：\n\n①定义类\n\n②编写类的成员变量\n\n③编写类的成员方法\n\n```java\npublic class 类名 {\n\t// 成员变量\n\t变量1的数据类型 变量1；\n\t变量2的数据类型 变量2;\n\t…\n\t// 成员方法\n\t方法1;\n\t方法2;\t\n}\n```\n\n示例代码：\n\n```java\n/*\n    手机类：\n        类名：\n        手机(Phone)\n\n        成员变量：\n        品牌(brand)\n        价格(price)\n\n        成员方法：\n        打电话(call)\n        发短信(sendMessage)\n */\npublic class Phone {\n    //成员变量\n    String brand;\n    int price;\n\n    //成员方法\n    public void call() {\n        System.out.println(\"打电话\");\n    }\n\n    public void sendMessage() {\n        System.out.println(\"发短信\");\n    }\n}\n\n```\n\n### 1.3 对象的使用\n\n* 创建对象的格式：\n  * 类名 对象名 = new 类名();\n* 调用成员的格式：\n  * 对象名.成员变量\n  * 对象名.成员方法();\n* 示例代码\n\n```java\n/*\n    创建对象\n        格式：类名 对象名 = new 类名();\n        范例：Phone p = new Phone();\n\n    使用对象\n        1：使用成员变量\n            格式：对象名.变量名\n            范例：p.brand\n        2：使用成员方法\n            格式：对象名.方法名()\n            范例：p.call()\n */\npublic class PhoneDemo {\n    public static void main(String[] args) {\n        //创建对象\n        Phone p = new Phone();\n\n        //使用成员变量\n        System.out.println(p.brand);\n        System.out.println(p.price);\n\n        p.brand = \"小米\";\n        p.price = 2999;\n\n        System.out.println(p.brand);\n        System.out.println(p.price);\n\n        //使用成员方法\n        p.call();\n        p.sendMessage();\n    }\n}\n```\n\n### 1.4 学生对象-练习\n\n* 需求：首先定义一个学生类，然后定义一个学生测试类，在学生测试类中通过对象完成成员变量和成员方法的使用\n* 分析：\n  * 成员变量：姓名，年龄…\n  * 成员方法：学习，做作业…\n* 示例代码：\n\n```java\npublic class Student {\n    //成员变量\n    String name;\n    int age;\n\n    //成员方法\n    public void study() {\n        System.out.println(\"好好学习，天天向上\");\n    }\n\n    public void doHomework() {\n        System.out.println(\"键盘敲烂，月薪过万\");\n    }\n}\n/*\n    学生测试类\n */\npublic class StudentDemo {\n    public static void main(String[] args) {\n        //创建对象\n        Student s = new Student();\n\n        //使用对象\n        System.out.println(s.name + \",\" + s.age);\n\n        s.name = \"林青霞\";\n        s.age = 30;\n\n        System.out.println(s.name + \",\" + s.age);\n\n        s.study();\n        s.doHomework();\n    }\n}\n```\n\n## 2. 对象内存图\n\n### 2.1 单个对象内存图\n\n* 成员变量使用过程\n\n![1](/tupian/1(1).png)\n\n* 成员方法调用过程\n\n![2](/tupian/2(1).png)\n\n### 2.2 多个对象内存图\n\n* 成员变量使用过程\n\n![3](/tupian/3(1).png)\n\n* 成员方法调用过程\n\n![4](/tupian/4(1).png)\n\n* 总结：\n\n  多个对象在堆内存中，都有不同的内存划分，成员变量存储在各自的内存区域中，成员方法多个对象共用的一份\n\n## 3. 成员变量和局部变量\n\n### 3.1 成员变量和局部变量的区别\n\n* 类中位置不同：成员变量（类中方法外）局部变量（方法内部或方法声明上）\n* 内存中位置不同：成员变量（堆内存）局部变量（栈内存）\n* 生命周期不同：成员变量（随着对象的存在而存在，随着对象的消失而消失）局部变量（随着方法的调用而存在，醉着方法的调用完毕而消失）\n* 初始化值不同：成员变量（有默认初始化值）局部变量（没有默认初始化值，必须先定义，赋值才能使用）\n\n## 4. 封装\n\n### 4.1 封装思想\n\n1. 封装概述\n   是面向对象三大特征之一（封装，继承，多态）\n\n   **对象代表什么，就得封装对应的数据，并提供数据对应的行为** \n\n2. 封装代码实现\n   将类的某些信息隐藏在类内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对隐藏信息的操作和访问\n   成员变量private，提供对应的getXxx()/setXxx()方法\n\n### 4.2 private关键字\n\nprivate是一个修饰符，可以用来修饰成员（成员变量，成员方法）\n\n* 被private修饰的成员，只能在本类进行访问，针对private修饰的成员变量，如果需要被其他类使用，提供相应的操作\n  * 提供“get变量名()”方法，用于获取成员变量的值，方法用public修饰\n  * 提供“set变量名(参数)”方法，用于设置成员变量的值，方法用public修饰\n\n* 示例代码：\n\n  ```java\n  /*\n      学生类\n   */\n  class Student {\n      //成员变量\n      String name;\n      private int age;\n  \n      //提供get/set方法\n      public void setAge(int a) {\n          if(a<0 || a>120) {\n              System.out.println(\"你给的年龄有误\");\n          } else {\n              age = a;\n          }\n      }\n  \n      public int getAge() {\n          return age;\n      }\n  \n      //成员方法\n      public void show() {\n          System.out.println(name + \",\" + age);\n      }\n  }\n  /*\n      学生测试类\n   */\n  public class StudentDemo {\n      public static void main(String[] args) {\n          //创建对象\n          Student s = new Student();\n          //给成员变量赋值\n          s.name = \"林青霞\";\n          s.setAge(30);\n          //调用show方法\n          s.show();\n      }\n  }\n  ```\n\n### 4.3 private的使用\n\n* 需求：定义标准的学生类，要求name和age使用private修饰，并提供set和get方法以及便于显示数据的show方法，测试类中创建对象并使用，最终控制台输出  林青霞，30 \n\n* 示例代码：\n\n  ```java\n  /*\n      学生类\n   */\n  class Student {\n      //成员变量\n      private String name;\n      private int age;\n  \n      //get/set方法\n      public void setName(String n) {\n          name = n;\n      }\n  \n      public String getName() {\n          return name;\n      }\n  \n      public void setAge(int a) {\n          age = a;\n      }\n  \n      public int getAge() {\n          return age;\n      }\n  \n      public void show() {\n          System.out.println(name + \",\" + age);\n      }\n  }\n  /*\n      学生测试类\n   */\n  public class StudentDemo {\n      public static void main(String[] args) {\n          //创建对象\n          Student s = new Student();\n  \n          //使用set方法给成员变量赋值\n          s.setName(\"林青霞\");\n          s.setAge(30);\n  \n          s.show();\n  \n          //使用get方法获取成员变量的值\n          System.out.println(s.getName() + \"---\" + s.getAge());\n          System.out.println(s.getName() + \",\" + s.getAge());\n  \n      }\n  }\n  ```\n\n### 4.4 this关键字\n\n* this修饰的变量用于指代成员变量，其主要作用是（区分局部变量和成员变量的重名问题）\n  * 方法的形参如果与成员变量同名，不带this修饰的变量指的是形参，而不是成员变量\n  * 方法的形参没有与成员变量同名，不带this修饰的变量指的是成员变量\n\n```java\npublic class Student {\n    private String name;\n    private int age;\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void show() {\n        System.out.println(name + \",\" + age);\n    }\n}\n```\n\n## 5. 构造方法\n\n### 5.1 构造方法概述\n\n构造方法是一种特殊的方法\n\n* 作用：创建对象   Student stu = **new Student();**\n\n* 格式：\n\n  public class 类名{\n\n  ​        修饰符 类名( 参数 ) {\n\n  ​        }\n\n  }\n\n* 功能：主要是完成对象数据的初始化\n\n* 示例代码：\n\n```java\nclass Student {\n    private String name;\n    private int age;\n\n    //构造方法\n    public Student() {\n        System.out.println(\"无参构造方法\");\n    }\n\n    public void show() {\n        System.out.println(name + \",\" + age);\n    }\n}\n/*\n    测试类\n */\npublic class StudentDemo {\n    public static void main(String[] args) {\n        //创建对象\n        Student s = new Student();\n        s.show();\n    }\n}\n```\n\n### 5.2 构造方法的注意事项\n\n* 构造方法的创建\n\n如果没有定义构造方法，系统将给出一个默认的无参数构造方法\n如果定义了构造方法，系统将不再提供默认的构造方法\n\n* 构造方法的重载\n\n如果自定义了带参构造方法，还要使用无参数构造方法，就必须再写一个无参数构造方法\n\n* 推荐的使用方式\n\n无论是否使用，都手工书写无参数构造方法\n\n* 重要功能！\n\n可以使用带参构造，为成员变量进行初始化\n\n* 示例代码\n\n```java\n/*\n    学生类\n */\nclass Student {\n    private String name;\n    private int age;\n\n    public Student() {}\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public Student(int age) {\n        this.age = age;\n    }\n\n    public Student(String name,int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public void show() {\n        System.out.println(name + \",\" + age);\n    }\n}\n/*\n    测试类\n */\npublic class StudentDemo {\n    public static void main(String[] args) {\n        //创建对象\n        Student s1 = new Student();\n        s1.show();\n\n        //public Student(String name)\n        Student s2 = new Student(\"林青霞\");\n        s2.show();\n\n        //public Student(int age)\n        Student s3 = new Student(30);\n        s3.show();\n\n        //public Student(String name,int age)\n        Student s4 = new Student(\"林青霞\",30);\n        s4.show();\n    }\n}\n```\n\n### 5.3 标准类制作\n\n① 类名需要见名知意\n\n② 成员变量使用private修饰\n\n③ 提供至少两个构造方法 \n\n* 无参构造方法\n* 带全部参数的构造方法\n\n④ get和set方法 \n\n​\t提供每一个成员变量对应的setXxx()/getXxx()\n\n⑤ 如果还有其他行为，也需要写上\n\n### 5.4 练习1\n\n需求：\n\n​\t定义标准学生类，要求分别使用空参和有参构造方法创建对象，空参创建的对象通过setXxx赋值，有参创建的对象直接赋值，并通过show方法展示数据。 \n\n* 示例代码：\n\n```java\nclass Student {\n    //成员变量\n    private String name;\n    private int age;\n\n    //构造方法\n    public Student() {\n    }\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    //成员方法\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void show() {\n        System.out.println(name + \",\" + age);\n    }\n}\n/*\n    创建对象并为其成员变量赋值的两种方式\n        1:无参构造方法创建对象后使用setXxx()赋值\n        2:使用带参构造方法直接创建带有属性值的对象\n*/\npublic class StudentDemo {\n    public static void main(String[] args) {\n        //无参构造方法创建对象后使用setXxx()赋值\n        Student s1 = new Student();\n        s1.setName(\"林青霞\");\n        s1.setAge(30);\n        s1.show();\n\n        //使用带参构造方法直接创建带有属性值的对象\n        Student s2 = new Student(\"林青霞\",30);\n        s2.show();\n    }\n}\n```\n\n### 5.4 练习2\n\n![111](/tupian/111.jpg)\n\n```java\npublic class User {\n    //1.私有化全部的成员变量\n    //2.空参构造\n    //3.带全部参数的构造\n    //4.针对于每一个私有化的成员变量都要提供其对应的get和set方法\n    //5.如果当前事物还有其他行为，那么也要写出来，比如学生的吃饭，睡觉等行为\n\n    private String username;//用户名\n    private String password;//密码\n    private String email;//邮箱\n    private char gender;//性别\n    private int age;//年龄\n\n    //空参构造方法\n    public User() {\n    }\n\n    //带全部参数的构造\n    public User(String username, String password, String email, char gender, int age) {\n        this.username = username;\n        this.password = password;\n        this.email = email;\n        this.gender = gender;\n        this.age = age;\n    }\n\n    //get和set\n\n    public String getUsername() {\n        return username;\n    }\n\n    public void setUsername(String username) {\n        this.username = username;\n    }\n\n    public String getPassword() {\n        return password;\n    }\n\n    public void setPassword(String password) {\n        this.password = password;\n    }\n\n    public String getEmail() {\n        return email;\n    }\n\n    public void setEmail(String email) {\n        this.email = email;\n    }\n\n    public char getGender() {\n        return gender;\n    }\n\n    public void setGender(char gender) {\n        this.gender = gender;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n    public void eat(){\n        System.out.println(username + \"在吃饭\");\n    }\n}\n\npublic class Test {\n    public static void main(String[] args) {\n        //写一个标准的javabean类\n        //咱们在课后只要能把这个标准的javabean能自己写出来，那么就表示今天的知识点就ok了\n\n\n        //利用空参构造创建对象\n        User u1 = new User();\n        //如果利用空参创建对象，还想赋值只能用set方法赋值\n        u1.setUsername(\"zhangsan\");\n        u1.setPassword(\"1234qwer\");\n        u1.setEmail(\"itheima@itcast.cn\");\n        u1.setGender('男');\n        u1.setAge(23);\n        //获取属性的值并打印\n        System.out.println(u1.getUsername() + \", \" + u1.getPassword()\n                + \", \" + u1.getEmail() + \", \" + u1.getGender() + \", \" + u1.getAge());\n        u1.eat();\n\n        System.out.println(\"=============================\");\n\n        //简单的办法\n        //利用带全部参数的构造来创建对象\n        //快捷键:ctrl + p\n        User u2 = new User(\"lisi\",\"12345678\",\"lisi@itcast.cn\",'女',24);\n        System.out.println(u2.getUsername() + \", \" + u2.getPassword()\n                + \", \" + u2.getEmail() + \", \" + u2.getGender() + \", \" + u2.getAge());\n        u2.eat();\n    }\n}\n\n```\n\n","source":"_posts/day08-面向对象.md","raw":"---\ntitle: day08-面向对象\ndate: 2024-12-12 16:41:00\ntags:\n    - 面向对象\ncategories: java\nphotos: /tupian/j08.jpg\n---\n## 1. 类和对象\n\n### 1.1 类和对象的理解\n\n客观存在的事物皆为对象 ，所以我们也常常说万物皆对象。\n\n* 类\n  * 类的理解\n    * 类是对现实生活中一类具有共同属性和行为的事物的抽象\n    * 类是对象的数据类型，类是具有相同属性和行为的一组对象的集合\n    * 简单理解：类就是对现实事物的一种描述\n  * 类的组成\n    * 属性：指事物的特征，例如：手机事物（品牌，价格，尺寸）\n    * 行为：指事物能执行的操作，例如：手机事物（打电话，发短信）\n* 类和对象的关系\n  * 类：类是对现实生活中一类具有共同属性和行为的事物的抽象\n  * 对象：是能够看得到摸的着的真实存在的实体\n  * 简单理解：**类是对事物的一种描述，对象则为具体存在的事物**\n\n### 1.2 类的定义\n\n类的组成是由属性和行为两部分组成\n\n* 属性：在类中通过成员变量来体现（类中方法外的变量）\n* 行为：在类中通过成员方法来体现（和前面的方法相比去掉static关键字即可）\n\n类的定义步骤：\n\n①定义类\n\n②编写类的成员变量\n\n③编写类的成员方法\n\n```java\npublic class 类名 {\n\t// 成员变量\n\t变量1的数据类型 变量1；\n\t变量2的数据类型 变量2;\n\t…\n\t// 成员方法\n\t方法1;\n\t方法2;\t\n}\n```\n\n示例代码：\n\n```java\n/*\n    手机类：\n        类名：\n        手机(Phone)\n\n        成员变量：\n        品牌(brand)\n        价格(price)\n\n        成员方法：\n        打电话(call)\n        发短信(sendMessage)\n */\npublic class Phone {\n    //成员变量\n    String brand;\n    int price;\n\n    //成员方法\n    public void call() {\n        System.out.println(\"打电话\");\n    }\n\n    public void sendMessage() {\n        System.out.println(\"发短信\");\n    }\n}\n\n```\n\n### 1.3 对象的使用\n\n* 创建对象的格式：\n  * 类名 对象名 = new 类名();\n* 调用成员的格式：\n  * 对象名.成员变量\n  * 对象名.成员方法();\n* 示例代码\n\n```java\n/*\n    创建对象\n        格式：类名 对象名 = new 类名();\n        范例：Phone p = new Phone();\n\n    使用对象\n        1：使用成员变量\n            格式：对象名.变量名\n            范例：p.brand\n        2：使用成员方法\n            格式：对象名.方法名()\n            范例：p.call()\n */\npublic class PhoneDemo {\n    public static void main(String[] args) {\n        //创建对象\n        Phone p = new Phone();\n\n        //使用成员变量\n        System.out.println(p.brand);\n        System.out.println(p.price);\n\n        p.brand = \"小米\";\n        p.price = 2999;\n\n        System.out.println(p.brand);\n        System.out.println(p.price);\n\n        //使用成员方法\n        p.call();\n        p.sendMessage();\n    }\n}\n```\n\n### 1.4 学生对象-练习\n\n* 需求：首先定义一个学生类，然后定义一个学生测试类，在学生测试类中通过对象完成成员变量和成员方法的使用\n* 分析：\n  * 成员变量：姓名，年龄…\n  * 成员方法：学习，做作业…\n* 示例代码：\n\n```java\npublic class Student {\n    //成员变量\n    String name;\n    int age;\n\n    //成员方法\n    public void study() {\n        System.out.println(\"好好学习，天天向上\");\n    }\n\n    public void doHomework() {\n        System.out.println(\"键盘敲烂，月薪过万\");\n    }\n}\n/*\n    学生测试类\n */\npublic class StudentDemo {\n    public static void main(String[] args) {\n        //创建对象\n        Student s = new Student();\n\n        //使用对象\n        System.out.println(s.name + \",\" + s.age);\n\n        s.name = \"林青霞\";\n        s.age = 30;\n\n        System.out.println(s.name + \",\" + s.age);\n\n        s.study();\n        s.doHomework();\n    }\n}\n```\n\n## 2. 对象内存图\n\n### 2.1 单个对象内存图\n\n* 成员变量使用过程\n\n![1](/tupian/1(1).png)\n\n* 成员方法调用过程\n\n![2](/tupian/2(1).png)\n\n### 2.2 多个对象内存图\n\n* 成员变量使用过程\n\n![3](/tupian/3(1).png)\n\n* 成员方法调用过程\n\n![4](/tupian/4(1).png)\n\n* 总结：\n\n  多个对象在堆内存中，都有不同的内存划分，成员变量存储在各自的内存区域中，成员方法多个对象共用的一份\n\n## 3. 成员变量和局部变量\n\n### 3.1 成员变量和局部变量的区别\n\n* 类中位置不同：成员变量（类中方法外）局部变量（方法内部或方法声明上）\n* 内存中位置不同：成员变量（堆内存）局部变量（栈内存）\n* 生命周期不同：成员变量（随着对象的存在而存在，随着对象的消失而消失）局部变量（随着方法的调用而存在，醉着方法的调用完毕而消失）\n* 初始化值不同：成员变量（有默认初始化值）局部变量（没有默认初始化值，必须先定义，赋值才能使用）\n\n## 4. 封装\n\n### 4.1 封装思想\n\n1. 封装概述\n   是面向对象三大特征之一（封装，继承，多态）\n\n   **对象代表什么，就得封装对应的数据，并提供数据对应的行为** \n\n2. 封装代码实现\n   将类的某些信息隐藏在类内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对隐藏信息的操作和访问\n   成员变量private，提供对应的getXxx()/setXxx()方法\n\n### 4.2 private关键字\n\nprivate是一个修饰符，可以用来修饰成员（成员变量，成员方法）\n\n* 被private修饰的成员，只能在本类进行访问，针对private修饰的成员变量，如果需要被其他类使用，提供相应的操作\n  * 提供“get变量名()”方法，用于获取成员变量的值，方法用public修饰\n  * 提供“set变量名(参数)”方法，用于设置成员变量的值，方法用public修饰\n\n* 示例代码：\n\n  ```java\n  /*\n      学生类\n   */\n  class Student {\n      //成员变量\n      String name;\n      private int age;\n  \n      //提供get/set方法\n      public void setAge(int a) {\n          if(a<0 || a>120) {\n              System.out.println(\"你给的年龄有误\");\n          } else {\n              age = a;\n          }\n      }\n  \n      public int getAge() {\n          return age;\n      }\n  \n      //成员方法\n      public void show() {\n          System.out.println(name + \",\" + age);\n      }\n  }\n  /*\n      学生测试类\n   */\n  public class StudentDemo {\n      public static void main(String[] args) {\n          //创建对象\n          Student s = new Student();\n          //给成员变量赋值\n          s.name = \"林青霞\";\n          s.setAge(30);\n          //调用show方法\n          s.show();\n      }\n  }\n  ```\n\n### 4.3 private的使用\n\n* 需求：定义标准的学生类，要求name和age使用private修饰，并提供set和get方法以及便于显示数据的show方法，测试类中创建对象并使用，最终控制台输出  林青霞，30 \n\n* 示例代码：\n\n  ```java\n  /*\n      学生类\n   */\n  class Student {\n      //成员变量\n      private String name;\n      private int age;\n  \n      //get/set方法\n      public void setName(String n) {\n          name = n;\n      }\n  \n      public String getName() {\n          return name;\n      }\n  \n      public void setAge(int a) {\n          age = a;\n      }\n  \n      public int getAge() {\n          return age;\n      }\n  \n      public void show() {\n          System.out.println(name + \",\" + age);\n      }\n  }\n  /*\n      学生测试类\n   */\n  public class StudentDemo {\n      public static void main(String[] args) {\n          //创建对象\n          Student s = new Student();\n  \n          //使用set方法给成员变量赋值\n          s.setName(\"林青霞\");\n          s.setAge(30);\n  \n          s.show();\n  \n          //使用get方法获取成员变量的值\n          System.out.println(s.getName() + \"---\" + s.getAge());\n          System.out.println(s.getName() + \",\" + s.getAge());\n  \n      }\n  }\n  ```\n\n### 4.4 this关键字\n\n* this修饰的变量用于指代成员变量，其主要作用是（区分局部变量和成员变量的重名问题）\n  * 方法的形参如果与成员变量同名，不带this修饰的变量指的是形参，而不是成员变量\n  * 方法的形参没有与成员变量同名，不带this修饰的变量指的是成员变量\n\n```java\npublic class Student {\n    private String name;\n    private int age;\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void show() {\n        System.out.println(name + \",\" + age);\n    }\n}\n```\n\n## 5. 构造方法\n\n### 5.1 构造方法概述\n\n构造方法是一种特殊的方法\n\n* 作用：创建对象   Student stu = **new Student();**\n\n* 格式：\n\n  public class 类名{\n\n  ​        修饰符 类名( 参数 ) {\n\n  ​        }\n\n  }\n\n* 功能：主要是完成对象数据的初始化\n\n* 示例代码：\n\n```java\nclass Student {\n    private String name;\n    private int age;\n\n    //构造方法\n    public Student() {\n        System.out.println(\"无参构造方法\");\n    }\n\n    public void show() {\n        System.out.println(name + \",\" + age);\n    }\n}\n/*\n    测试类\n */\npublic class StudentDemo {\n    public static void main(String[] args) {\n        //创建对象\n        Student s = new Student();\n        s.show();\n    }\n}\n```\n\n### 5.2 构造方法的注意事项\n\n* 构造方法的创建\n\n如果没有定义构造方法，系统将给出一个默认的无参数构造方法\n如果定义了构造方法，系统将不再提供默认的构造方法\n\n* 构造方法的重载\n\n如果自定义了带参构造方法，还要使用无参数构造方法，就必须再写一个无参数构造方法\n\n* 推荐的使用方式\n\n无论是否使用，都手工书写无参数构造方法\n\n* 重要功能！\n\n可以使用带参构造，为成员变量进行初始化\n\n* 示例代码\n\n```java\n/*\n    学生类\n */\nclass Student {\n    private String name;\n    private int age;\n\n    public Student() {}\n\n    public Student(String name) {\n        this.name = name;\n    }\n\n    public Student(int age) {\n        this.age = age;\n    }\n\n    public Student(String name,int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public void show() {\n        System.out.println(name + \",\" + age);\n    }\n}\n/*\n    测试类\n */\npublic class StudentDemo {\n    public static void main(String[] args) {\n        //创建对象\n        Student s1 = new Student();\n        s1.show();\n\n        //public Student(String name)\n        Student s2 = new Student(\"林青霞\");\n        s2.show();\n\n        //public Student(int age)\n        Student s3 = new Student(30);\n        s3.show();\n\n        //public Student(String name,int age)\n        Student s4 = new Student(\"林青霞\",30);\n        s4.show();\n    }\n}\n```\n\n### 5.3 标准类制作\n\n① 类名需要见名知意\n\n② 成员变量使用private修饰\n\n③ 提供至少两个构造方法 \n\n* 无参构造方法\n* 带全部参数的构造方法\n\n④ get和set方法 \n\n​\t提供每一个成员变量对应的setXxx()/getXxx()\n\n⑤ 如果还有其他行为，也需要写上\n\n### 5.4 练习1\n\n需求：\n\n​\t定义标准学生类，要求分别使用空参和有参构造方法创建对象，空参创建的对象通过setXxx赋值，有参创建的对象直接赋值，并通过show方法展示数据。 \n\n* 示例代码：\n\n```java\nclass Student {\n    //成员变量\n    private String name;\n    private int age;\n\n    //构造方法\n    public Student() {\n    }\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    //成员方法\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void show() {\n        System.out.println(name + \",\" + age);\n    }\n}\n/*\n    创建对象并为其成员变量赋值的两种方式\n        1:无参构造方法创建对象后使用setXxx()赋值\n        2:使用带参构造方法直接创建带有属性值的对象\n*/\npublic class StudentDemo {\n    public static void main(String[] args) {\n        //无参构造方法创建对象后使用setXxx()赋值\n        Student s1 = new Student();\n        s1.setName(\"林青霞\");\n        s1.setAge(30);\n        s1.show();\n\n        //使用带参构造方法直接创建带有属性值的对象\n        Student s2 = new Student(\"林青霞\",30);\n        s2.show();\n    }\n}\n```\n\n### 5.4 练习2\n\n![111](/tupian/111.jpg)\n\n```java\npublic class User {\n    //1.私有化全部的成员变量\n    //2.空参构造\n    //3.带全部参数的构造\n    //4.针对于每一个私有化的成员变量都要提供其对应的get和set方法\n    //5.如果当前事物还有其他行为，那么也要写出来，比如学生的吃饭，睡觉等行为\n\n    private String username;//用户名\n    private String password;//密码\n    private String email;//邮箱\n    private char gender;//性别\n    private int age;//年龄\n\n    //空参构造方法\n    public User() {\n    }\n\n    //带全部参数的构造\n    public User(String username, String password, String email, char gender, int age) {\n        this.username = username;\n        this.password = password;\n        this.email = email;\n        this.gender = gender;\n        this.age = age;\n    }\n\n    //get和set\n\n    public String getUsername() {\n        return username;\n    }\n\n    public void setUsername(String username) {\n        this.username = username;\n    }\n\n    public String getPassword() {\n        return password;\n    }\n\n    public void setPassword(String password) {\n        this.password = password;\n    }\n\n    public String getEmail() {\n        return email;\n    }\n\n    public void setEmail(String email) {\n        this.email = email;\n    }\n\n    public char getGender() {\n        return gender;\n    }\n\n    public void setGender(char gender) {\n        this.gender = gender;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n    public void eat(){\n        System.out.println(username + \"在吃饭\");\n    }\n}\n\npublic class Test {\n    public static void main(String[] args) {\n        //写一个标准的javabean类\n        //咱们在课后只要能把这个标准的javabean能自己写出来，那么就表示今天的知识点就ok了\n\n\n        //利用空参构造创建对象\n        User u1 = new User();\n        //如果利用空参创建对象，还想赋值只能用set方法赋值\n        u1.setUsername(\"zhangsan\");\n        u1.setPassword(\"1234qwer\");\n        u1.setEmail(\"itheima@itcast.cn\");\n        u1.setGender('男');\n        u1.setAge(23);\n        //获取属性的值并打印\n        System.out.println(u1.getUsername() + \", \" + u1.getPassword()\n                + \", \" + u1.getEmail() + \", \" + u1.getGender() + \", \" + u1.getAge());\n        u1.eat();\n\n        System.out.println(\"=============================\");\n\n        //简单的办法\n        //利用带全部参数的构造来创建对象\n        //快捷键:ctrl + p\n        User u2 = new User(\"lisi\",\"12345678\",\"lisi@itcast.cn\",'女',24);\n        System.out.println(u2.getUsername() + \", \" + u2.getPassword()\n                + \", \" + u2.getEmail() + \", \" + u2.getGender() + \", \" + u2.getAge());\n        u2.eat();\n    }\n}\n\n```\n\n","slug":"day08-面向对象","published":1,"updated":"2024-12-13T01:20:09.639Z","_id":"cm4ld1o8c001oqsto3ng2580p","comments":1,"layout":"post","content":"<h2 id=\"1-类和对象\"><a href=\"#1-类和对象\" class=\"headerlink\" title=\"1. 类和对象\"></a>1. 类和对象</h2><h3 id=\"1-1-类和对象的理解\"><a href=\"#1-1-类和对象的理解\" class=\"headerlink\" title=\"1.1 类和对象的理解\"></a>1.1 类和对象的理解</h3><p>客观存在的事物皆为对象 ，所以我们也常常说万物皆对象。</p>\n<ul>\n<li>类<ul>\n<li>类的理解<ul>\n<li>类是对现实生活中一类具有共同属性和行为的事物的抽象</li>\n<li>类是对象的数据类型，类是具有相同属性和行为的一组对象的集合</li>\n<li>简单理解：类就是对现实事物的一种描述</li>\n</ul>\n</li>\n<li>类的组成<ul>\n<li>属性：指事物的特征，例如：手机事物（品牌，价格，尺寸）</li>\n<li>行为：指事物能执行的操作，例如：手机事物（打电话，发短信）</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>类和对象的关系<ul>\n<li>类：类是对现实生活中一类具有共同属性和行为的事物的抽象</li>\n<li>对象：是能够看得到摸的着的真实存在的实体</li>\n<li>简单理解：<strong>类是对事物的一种描述，对象则为具体存在的事物</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"1-2-类的定义\"><a href=\"#1-2-类的定义\" class=\"headerlink\" title=\"1.2 类的定义\"></a>1.2 类的定义</h3><p>类的组成是由属性和行为两部分组成</p>\n<ul>\n<li>属性：在类中通过成员变量来体现（类中方法外的变量）</li>\n<li>行为：在类中通过成员方法来体现（和前面的方法相比去掉static关键字即可）</li>\n</ul>\n<p>类的定义步骤：</p>\n<p>①定义类</p>\n<p>②编写类的成员变量</p>\n<p>③编写类的成员方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> class 类名 &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 成员变量</span></span><br><span class=\"line\">\t变量<span class=\"number\">1</span>的数据类型 变量<span class=\"number\">1</span>；</span><br><span class=\"line\">\t变量<span class=\"number\">2</span>的数据类型 变量<span class=\"number\">2</span>;</span><br><span class=\"line\">\t…</span><br><span class=\"line\">\t<span class=\"comment\">// 成员方法</span></span><br><span class=\"line\">\t方法<span class=\"number\">1</span>;</span><br><span class=\"line\">\t方法<span class=\"number\">2</span>;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    手机类：</span></span><br><span class=\"line\"><span class=\"comment\">        类名：</span></span><br><span class=\"line\"><span class=\"comment\">        手机(Phone)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        成员变量：</span></span><br><span class=\"line\"><span class=\"comment\">        品牌(brand)</span></span><br><span class=\"line\"><span class=\"comment\">        价格(price)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        成员方法：</span></span><br><span class=\"line\"><span class=\"comment\">        打电话(call)</span></span><br><span class=\"line\"><span class=\"comment\">        发短信(sendMessage)</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Phone</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//成员变量</span></span><br><span class=\"line\">    String brand;</span><br><span class=\"line\">    <span class=\"type\">int</span> price;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//成员方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">call</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;打电话&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendMessage</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;发短信&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-3-对象的使用\"><a href=\"#1-3-对象的使用\" class=\"headerlink\" title=\"1.3 对象的使用\"></a>1.3 对象的使用</h3><ul>\n<li>创建对象的格式：<ul>\n<li>类名 对象名 &#x3D; new 类名();</li>\n</ul>\n</li>\n<li>调用成员的格式：<ul>\n<li>对象名.成员变量</li>\n<li>对象名.成员方法();</li>\n</ul>\n</li>\n<li>示例代码</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    创建对象</span></span><br><span class=\"line\"><span class=\"comment\">        格式：类名 对象名 = new 类名();</span></span><br><span class=\"line\"><span class=\"comment\">        范例：Phone p = new Phone();</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    使用对象</span></span><br><span class=\"line\"><span class=\"comment\">        1：使用成员变量</span></span><br><span class=\"line\"><span class=\"comment\">            格式：对象名.变量名</span></span><br><span class=\"line\"><span class=\"comment\">            范例：p.brand</span></span><br><span class=\"line\"><span class=\"comment\">        2：使用成员方法</span></span><br><span class=\"line\"><span class=\"comment\">            格式：对象名.方法名()</span></span><br><span class=\"line\"><span class=\"comment\">            范例：p.call()</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">PhoneDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建对象</span></span><br><span class=\"line\">        <span class=\"type\">Phone</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Phone</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//使用成员变量</span></span><br><span class=\"line\">        System.out.println(p.brand);</span><br><span class=\"line\">        System.out.println(p.price);</span><br><span class=\"line\"></span><br><span class=\"line\">        p.brand = <span class=\"string\">&quot;小米&quot;</span>;</span><br><span class=\"line\">        p.price = <span class=\"number\">2999</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(p.brand);</span><br><span class=\"line\">        System.out.println(p.price);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//使用成员方法</span></span><br><span class=\"line\">        p.call();</span><br><span class=\"line\">        p.sendMessage();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-4-学生对象-练习\"><a href=\"#1-4-学生对象-练习\" class=\"headerlink\" title=\"1.4 学生对象-练习\"></a>1.4 学生对象-练习</h3><ul>\n<li>需求：首先定义一个学生类，然后定义一个学生测试类，在学生测试类中通过对象完成成员变量和成员方法的使用</li>\n<li>分析：<ul>\n<li>成员变量：姓名，年龄…</li>\n<li>成员方法：学习，做作业…</li>\n</ul>\n</li>\n<li>示例代码：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//成员变量</span></span><br><span class=\"line\">    String name;</span><br><span class=\"line\">    <span class=\"type\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//成员方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">study</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;好好学习，天天向上&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doHomework</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;键盘敲烂，月薪过万&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    学生测试类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StudentDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建对象</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//使用对象</span></span><br><span class=\"line\">        System.out.println(s.name + <span class=\"string\">&quot;,&quot;</span> + s.age);</span><br><span class=\"line\"></span><br><span class=\"line\">        s.name = <span class=\"string\">&quot;林青霞&quot;</span>;</span><br><span class=\"line\">        s.age = <span class=\"number\">30</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(s.name + <span class=\"string\">&quot;,&quot;</span> + s.age);</span><br><span class=\"line\"></span><br><span class=\"line\">        s.study();</span><br><span class=\"line\">        s.doHomework();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-对象内存图\"><a href=\"#2-对象内存图\" class=\"headerlink\" title=\"2. 对象内存图\"></a>2. 对象内存图</h2><h3 id=\"2-1-单个对象内存图\"><a href=\"#2-1-单个对象内存图\" class=\"headerlink\" title=\"2.1 单个对象内存图\"></a>2.1 单个对象内存图</h3><ul>\n<li>成员变量使用过程</li>\n</ul>\n<p><img src=\"/tupian/1(1).png\" alt=\"1\"></p>\n<ul>\n<li>成员方法调用过程</li>\n</ul>\n<p><img src=\"/tupian/2(1).png\" alt=\"2\"></p>\n<h3 id=\"2-2-多个对象内存图\"><a href=\"#2-2-多个对象内存图\" class=\"headerlink\" title=\"2.2 多个对象内存图\"></a>2.2 多个对象内存图</h3><ul>\n<li>成员变量使用过程</li>\n</ul>\n<p><img src=\"/tupian/3(1).png\" alt=\"3\"></p>\n<ul>\n<li>成员方法调用过程</li>\n</ul>\n<p><img src=\"/tupian/4(1).png\" alt=\"4\"></p>\n<ul>\n<li><p>总结：</p>\n<p>多个对象在堆内存中，都有不同的内存划分，成员变量存储在各自的内存区域中，成员方法多个对象共用的一份</p>\n</li>\n</ul>\n<h2 id=\"3-成员变量和局部变量\"><a href=\"#3-成员变量和局部变量\" class=\"headerlink\" title=\"3. 成员变量和局部变量\"></a>3. 成员变量和局部变量</h2><h3 id=\"3-1-成员变量和局部变量的区别\"><a href=\"#3-1-成员变量和局部变量的区别\" class=\"headerlink\" title=\"3.1 成员变量和局部变量的区别\"></a>3.1 成员变量和局部变量的区别</h3><ul>\n<li>类中位置不同：成员变量（类中方法外）局部变量（方法内部或方法声明上）</li>\n<li>内存中位置不同：成员变量（堆内存）局部变量（栈内存）</li>\n<li>生命周期不同：成员变量（随着对象的存在而存在，随着对象的消失而消失）局部变量（随着方法的调用而存在，醉着方法的调用完毕而消失）</li>\n<li>初始化值不同：成员变量（有默认初始化值）局部变量（没有默认初始化值，必须先定义，赋值才能使用）</li>\n</ul>\n<h2 id=\"4-封装\"><a href=\"#4-封装\" class=\"headerlink\" title=\"4. 封装\"></a>4. 封装</h2><h3 id=\"4-1-封装思想\"><a href=\"#4-1-封装思想\" class=\"headerlink\" title=\"4.1 封装思想\"></a>4.1 封装思想</h3><ol>\n<li><p>封装概述<br>是面向对象三大特征之一（封装，继承，多态）</p>\n<p><strong>对象代表什么，就得封装对应的数据，并提供数据对应的行为</strong> </p>\n</li>\n<li><p>封装代码实现<br>将类的某些信息隐藏在类内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对隐藏信息的操作和访问<br>成员变量private，提供对应的getXxx()&#x2F;setXxx()方法</p>\n</li>\n</ol>\n<h3 id=\"4-2-private关键字\"><a href=\"#4-2-private关键字\" class=\"headerlink\" title=\"4.2 private关键字\"></a>4.2 private关键字</h3><p>private是一个修饰符，可以用来修饰成员（成员变量，成员方法）</p>\n<ul>\n<li><p>被private修饰的成员，只能在本类进行访问，针对private修饰的成员变量，如果需要被其他类使用，提供相应的操作</p>\n<ul>\n<li>提供“get变量名()”方法，用于获取成员变量的值，方法用public修饰</li>\n<li>提供“set变量名(参数)”方法，用于设置成员变量的值，方法用public修饰</li>\n</ul>\n</li>\n<li><p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    学生类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//成员变量</span></span><br><span class=\"line\">    String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//提供get/set方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAge</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a&lt;<span class=\"number\">0</span> || a&gt;<span class=\"number\">120</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;你给的年龄有误&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            age = a;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getAge</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//成员方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">show</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(name + <span class=\"string\">&quot;,&quot;</span> + age);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    学生测试类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StudentDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建对象</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\">        <span class=\"comment\">//给成员变量赋值</span></span><br><span class=\"line\">        s.name = <span class=\"string\">&quot;林青霞&quot;</span>;</span><br><span class=\"line\">        s.setAge(<span class=\"number\">30</span>);</span><br><span class=\"line\">        <span class=\"comment\">//调用show方法</span></span><br><span class=\"line\">        s.show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"4-3-private的使用\"><a href=\"#4-3-private的使用\" class=\"headerlink\" title=\"4.3 private的使用\"></a>4.3 private的使用</h3><ul>\n<li><p>需求：定义标准的学生类，要求name和age使用private修饰，并提供set和get方法以及便于显示数据的show方法，测试类中创建对象并使用，最终控制台输出  林青霞，30 </p>\n</li>\n<li><p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    学生类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//成员变量</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//get/set方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String n)</span> &#123;</span><br><span class=\"line\">        name = n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAge</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> &#123;</span><br><span class=\"line\">        age = a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getAge</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">show</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(name + <span class=\"string\">&quot;,&quot;</span> + age);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    学生测试类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StudentDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建对象</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//使用set方法给成员变量赋值</span></span><br><span class=\"line\">        s.setName(<span class=\"string\">&quot;林青霞&quot;</span>);</span><br><span class=\"line\">        s.setAge(<span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        s.show();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//使用get方法获取成员变量的值</span></span><br><span class=\"line\">        System.out.println(s.getName() + <span class=\"string\">&quot;---&quot;</span> + s.getAge());</span><br><span class=\"line\">        System.out.println(s.getName() + <span class=\"string\">&quot;,&quot;</span> + s.getAge());</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"4-4-this关键字\"><a href=\"#4-4-this关键字\" class=\"headerlink\" title=\"4.4 this关键字\"></a>4.4 this关键字</h3><ul>\n<li>this修饰的变量用于指代成员变量，其主要作用是（区分局部变量和成员变量的重名问题）<ul>\n<li>方法的形参如果与成员变量同名，不带this修饰的变量指的是形参，而不是成员变量</li>\n<li>方法的形参没有与成员变量同名，不带this修饰的变量指的是成员变量</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAge</span><span class=\"params\">(<span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getAge</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">show</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(name + <span class=\"string\">&quot;,&quot;</span> + age);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-构造方法\"><a href=\"#5-构造方法\" class=\"headerlink\" title=\"5. 构造方法\"></a>5. 构造方法</h2><h3 id=\"5-1-构造方法概述\"><a href=\"#5-1-构造方法概述\" class=\"headerlink\" title=\"5.1 构造方法概述\"></a>5.1 构造方法概述</h3><p>构造方法是一种特殊的方法</p>\n<ul>\n<li><p>作用：创建对象   Student stu &#x3D; <strong>new Student();</strong></p>\n</li>\n<li><p>格式：</p>\n<p>public class 类名{</p>\n<p>​        修饰符 类名( 参数 ) {</p>\n<p>​        }</p>\n<p>}</p>\n</li>\n<li><p>功能：主要是完成对象数据的初始化</p>\n</li>\n<li><p>示例代码：</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//构造方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Student</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;无参构造方法&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">show</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(name + <span class=\"string\">&quot;,&quot;</span> + age);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    测试类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StudentDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建对象</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\">        s.show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-2-构造方法的注意事项\"><a href=\"#5-2-构造方法的注意事项\" class=\"headerlink\" title=\"5.2 构造方法的注意事项\"></a>5.2 构造方法的注意事项</h3><ul>\n<li>构造方法的创建</li>\n</ul>\n<p>如果没有定义构造方法，系统将给出一个默认的无参数构造方法<br>如果定义了构造方法，系统将不再提供默认的构造方法</p>\n<ul>\n<li>构造方法的重载</li>\n</ul>\n<p>如果自定义了带参构造方法，还要使用无参数构造方法，就必须再写一个无参数构造方法</p>\n<ul>\n<li>推荐的使用方式</li>\n</ul>\n<p>无论是否使用，都手工书写无参数构造方法</p>\n<ul>\n<li>重要功能！</li>\n</ul>\n<p>可以使用带参构造，为成员变量进行初始化</p>\n<ul>\n<li>示例代码</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    学生类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Student</span><span class=\"params\">()</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Student</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Student</span><span class=\"params\">(<span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Student</span><span class=\"params\">(String name,<span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">show</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(name + <span class=\"string\">&quot;,&quot;</span> + age);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    测试类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StudentDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建对象</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\">        s1.show();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//public Student(String name)</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>(<span class=\"string\">&quot;林青霞&quot;</span>);</span><br><span class=\"line\">        s2.show();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//public Student(int age)</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s3</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">        s3.show();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//public Student(String name,int age)</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s4</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>(<span class=\"string\">&quot;林青霞&quot;</span>,<span class=\"number\">30</span>);</span><br><span class=\"line\">        s4.show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-3-标准类制作\"><a href=\"#5-3-标准类制作\" class=\"headerlink\" title=\"5.3 标准类制作\"></a>5.3 标准类制作</h3><p>① 类名需要见名知意</p>\n<p>② 成员变量使用private修饰</p>\n<p>③ 提供至少两个构造方法 </p>\n<ul>\n<li>无参构造方法</li>\n<li>带全部参数的构造方法</li>\n</ul>\n<p>④ get和set方法 </p>\n<p>​\t提供每一个成员变量对应的setXxx()&#x2F;getXxx()</p>\n<p>⑤ 如果还有其他行为，也需要写上</p>\n<h3 id=\"5-4-练习1\"><a href=\"#5-4-练习1\" class=\"headerlink\" title=\"5.4 练习1\"></a>5.4 练习1</h3><p>需求：</p>\n<p>​\t定义标准学生类，要求分别使用空参和有参构造方法创建对象，空参创建的对象通过setXxx赋值，有参创建的对象直接赋值，并通过show方法展示数据。 </p>\n<ul>\n<li>示例代码：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//成员变量</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//构造方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Student</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Student</span><span class=\"params\">(String name, <span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//成员方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAge</span><span class=\"params\">(<span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getAge</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">show</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(name + <span class=\"string\">&quot;,&quot;</span> + age);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    创建对象并为其成员变量赋值的两种方式</span></span><br><span class=\"line\"><span class=\"comment\">        1:无参构造方法创建对象后使用setXxx()赋值</span></span><br><span class=\"line\"><span class=\"comment\">        2:使用带参构造方法直接创建带有属性值的对象</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StudentDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//无参构造方法创建对象后使用setXxx()赋值</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\">        s1.setName(<span class=\"string\">&quot;林青霞&quot;</span>);</span><br><span class=\"line\">        s1.setAge(<span class=\"number\">30</span>);</span><br><span class=\"line\">        s1.show();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//使用带参构造方法直接创建带有属性值的对象</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>(<span class=\"string\">&quot;林青霞&quot;</span>,<span class=\"number\">30</span>);</span><br><span class=\"line\">        s2.show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-4-练习2\"><a href=\"#5-4-练习2\" class=\"headerlink\" title=\"5.4 练习2\"></a>5.4 练习2</h3><p><img src=\"/tupian/111.jpg\" alt=\"111\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.私有化全部的成员变量</span></span><br><span class=\"line\">    <span class=\"comment\">//2.空参构造</span></span><br><span class=\"line\">    <span class=\"comment\">//3.带全部参数的构造</span></span><br><span class=\"line\">    <span class=\"comment\">//4.针对于每一个私有化的成员变量都要提供其对应的get和set方法</span></span><br><span class=\"line\">    <span class=\"comment\">//5.如果当前事物还有其他行为，那么也要写出来，比如学生的吃饭，睡觉等行为</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;<span class=\"comment\">//用户名</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;<span class=\"comment\">//密码</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String email;<span class=\"comment\">//邮箱</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">char</span> gender;<span class=\"comment\">//性别</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;<span class=\"comment\">//年龄</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//空参构造方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">User</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//带全部参数的构造</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">User</span><span class=\"params\">(String username, String password, String email, <span class=\"type\">char</span> gender, <span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.username = username;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.password = password;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.email = email;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.gender = gender;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//get和set</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getUsername</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> username;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setUsername</span><span class=\"params\">(String username)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.username = username;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getPassword</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setPassword</span><span class=\"params\">(String password)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.password = password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getEmail</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> email;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setEmail</span><span class=\"params\">(String email)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.email = email;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">char</span> <span class=\"title function_\">getGender</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gender;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setGender</span><span class=\"params\">(<span class=\"type\">char</span> gender)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.gender = gender;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getAge</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAge</span><span class=\"params\">(<span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">eat</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(username + <span class=\"string\">&quot;在吃饭&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//写一个标准的javabean类</span></span><br><span class=\"line\">        <span class=\"comment\">//咱们在课后只要能把这个标准的javabean能自己写出来，那么就表示今天的知识点就ok了</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//利用空参构造创建对象</span></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">u1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">        <span class=\"comment\">//如果利用空参创建对象，还想赋值只能用set方法赋值</span></span><br><span class=\"line\">        u1.setUsername(<span class=\"string\">&quot;zhangsan&quot;</span>);</span><br><span class=\"line\">        u1.setPassword(<span class=\"string\">&quot;1234qwer&quot;</span>);</span><br><span class=\"line\">        u1.setEmail(<span class=\"string\">&quot;itheima@itcast.cn&quot;</span>);</span><br><span class=\"line\">        u1.setGender(<span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\">        u1.setAge(<span class=\"number\">23</span>);</span><br><span class=\"line\">        <span class=\"comment\">//获取属性的值并打印</span></span><br><span class=\"line\">        System.out.println(u1.getUsername() + <span class=\"string\">&quot;, &quot;</span> + u1.getPassword()</span><br><span class=\"line\">                + <span class=\"string\">&quot;, &quot;</span> + u1.getEmail() + <span class=\"string\">&quot;, &quot;</span> + u1.getGender() + <span class=\"string\">&quot;, &quot;</span> + u1.getAge());</span><br><span class=\"line\">        u1.eat();</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=============================&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//简单的办法</span></span><br><span class=\"line\">        <span class=\"comment\">//利用带全部参数的构造来创建对象</span></span><br><span class=\"line\">        <span class=\"comment\">//快捷键:ctrl + p</span></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">u2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"string\">&quot;lisi&quot;</span>,<span class=\"string\">&quot;12345678&quot;</span>,<span class=\"string\">&quot;lisi@itcast.cn&quot;</span>,<span class=\"string\">&#x27;女&#x27;</span>,<span class=\"number\">24</span>);</span><br><span class=\"line\">        System.out.println(u2.getUsername() + <span class=\"string\">&quot;, &quot;</span> + u2.getPassword()</span><br><span class=\"line\">                + <span class=\"string\">&quot;, &quot;</span> + u2.getEmail() + <span class=\"string\">&quot;, &quot;</span> + u2.getGender() + <span class=\"string\">&quot;, &quot;</span> + u2.getAge());</span><br><span class=\"line\">        u2.eat();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","length":9121,"excerpt":"","more":"<h2 id=\"1-类和对象\"><a href=\"#1-类和对象\" class=\"headerlink\" title=\"1. 类和对象\"></a>1. 类和对象</h2><h3 id=\"1-1-类和对象的理解\"><a href=\"#1-1-类和对象的理解\" class=\"headerlink\" title=\"1.1 类和对象的理解\"></a>1.1 类和对象的理解</h3><p>客观存在的事物皆为对象 ，所以我们也常常说万物皆对象。</p>\n<ul>\n<li>类<ul>\n<li>类的理解<ul>\n<li>类是对现实生活中一类具有共同属性和行为的事物的抽象</li>\n<li>类是对象的数据类型，类是具有相同属性和行为的一组对象的集合</li>\n<li>简单理解：类就是对现实事物的一种描述</li>\n</ul>\n</li>\n<li>类的组成<ul>\n<li>属性：指事物的特征，例如：手机事物（品牌，价格，尺寸）</li>\n<li>行为：指事物能执行的操作，例如：手机事物（打电话，发短信）</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>类和对象的关系<ul>\n<li>类：类是对现实生活中一类具有共同属性和行为的事物的抽象</li>\n<li>对象：是能够看得到摸的着的真实存在的实体</li>\n<li>简单理解：<strong>类是对事物的一种描述，对象则为具体存在的事物</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"1-2-类的定义\"><a href=\"#1-2-类的定义\" class=\"headerlink\" title=\"1.2 类的定义\"></a>1.2 类的定义</h3><p>类的组成是由属性和行为两部分组成</p>\n<ul>\n<li>属性：在类中通过成员变量来体现（类中方法外的变量）</li>\n<li>行为：在类中通过成员方法来体现（和前面的方法相比去掉static关键字即可）</li>\n</ul>\n<p>类的定义步骤：</p>\n<p>①定义类</p>\n<p>②编写类的成员变量</p>\n<p>③编写类的成员方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> class 类名 &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 成员变量</span></span><br><span class=\"line\">\t变量<span class=\"number\">1</span>的数据类型 变量<span class=\"number\">1</span>；</span><br><span class=\"line\">\t变量<span class=\"number\">2</span>的数据类型 变量<span class=\"number\">2</span>;</span><br><span class=\"line\">\t…</span><br><span class=\"line\">\t<span class=\"comment\">// 成员方法</span></span><br><span class=\"line\">\t方法<span class=\"number\">1</span>;</span><br><span class=\"line\">\t方法<span class=\"number\">2</span>;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    手机类：</span></span><br><span class=\"line\"><span class=\"comment\">        类名：</span></span><br><span class=\"line\"><span class=\"comment\">        手机(Phone)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        成员变量：</span></span><br><span class=\"line\"><span class=\"comment\">        品牌(brand)</span></span><br><span class=\"line\"><span class=\"comment\">        价格(price)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        成员方法：</span></span><br><span class=\"line\"><span class=\"comment\">        打电话(call)</span></span><br><span class=\"line\"><span class=\"comment\">        发短信(sendMessage)</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Phone</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//成员变量</span></span><br><span class=\"line\">    String brand;</span><br><span class=\"line\">    <span class=\"type\">int</span> price;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//成员方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">call</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;打电话&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sendMessage</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;发短信&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-3-对象的使用\"><a href=\"#1-3-对象的使用\" class=\"headerlink\" title=\"1.3 对象的使用\"></a>1.3 对象的使用</h3><ul>\n<li>创建对象的格式：<ul>\n<li>类名 对象名 &#x3D; new 类名();</li>\n</ul>\n</li>\n<li>调用成员的格式：<ul>\n<li>对象名.成员变量</li>\n<li>对象名.成员方法();</li>\n</ul>\n</li>\n<li>示例代码</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    创建对象</span></span><br><span class=\"line\"><span class=\"comment\">        格式：类名 对象名 = new 类名();</span></span><br><span class=\"line\"><span class=\"comment\">        范例：Phone p = new Phone();</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    使用对象</span></span><br><span class=\"line\"><span class=\"comment\">        1：使用成员变量</span></span><br><span class=\"line\"><span class=\"comment\">            格式：对象名.变量名</span></span><br><span class=\"line\"><span class=\"comment\">            范例：p.brand</span></span><br><span class=\"line\"><span class=\"comment\">        2：使用成员方法</span></span><br><span class=\"line\"><span class=\"comment\">            格式：对象名.方法名()</span></span><br><span class=\"line\"><span class=\"comment\">            范例：p.call()</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">PhoneDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建对象</span></span><br><span class=\"line\">        <span class=\"type\">Phone</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Phone</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//使用成员变量</span></span><br><span class=\"line\">        System.out.println(p.brand);</span><br><span class=\"line\">        System.out.println(p.price);</span><br><span class=\"line\"></span><br><span class=\"line\">        p.brand = <span class=\"string\">&quot;小米&quot;</span>;</span><br><span class=\"line\">        p.price = <span class=\"number\">2999</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(p.brand);</span><br><span class=\"line\">        System.out.println(p.price);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//使用成员方法</span></span><br><span class=\"line\">        p.call();</span><br><span class=\"line\">        p.sendMessage();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-4-学生对象-练习\"><a href=\"#1-4-学生对象-练习\" class=\"headerlink\" title=\"1.4 学生对象-练习\"></a>1.4 学生对象-练习</h3><ul>\n<li>需求：首先定义一个学生类，然后定义一个学生测试类，在学生测试类中通过对象完成成员变量和成员方法的使用</li>\n<li>分析：<ul>\n<li>成员变量：姓名，年龄…</li>\n<li>成员方法：学习，做作业…</li>\n</ul>\n</li>\n<li>示例代码：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//成员变量</span></span><br><span class=\"line\">    String name;</span><br><span class=\"line\">    <span class=\"type\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//成员方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">study</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;好好学习，天天向上&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doHomework</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;键盘敲烂，月薪过万&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    学生测试类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StudentDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建对象</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//使用对象</span></span><br><span class=\"line\">        System.out.println(s.name + <span class=\"string\">&quot;,&quot;</span> + s.age);</span><br><span class=\"line\"></span><br><span class=\"line\">        s.name = <span class=\"string\">&quot;林青霞&quot;</span>;</span><br><span class=\"line\">        s.age = <span class=\"number\">30</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(s.name + <span class=\"string\">&quot;,&quot;</span> + s.age);</span><br><span class=\"line\"></span><br><span class=\"line\">        s.study();</span><br><span class=\"line\">        s.doHomework();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-对象内存图\"><a href=\"#2-对象内存图\" class=\"headerlink\" title=\"2. 对象内存图\"></a>2. 对象内存图</h2><h3 id=\"2-1-单个对象内存图\"><a href=\"#2-1-单个对象内存图\" class=\"headerlink\" title=\"2.1 单个对象内存图\"></a>2.1 单个对象内存图</h3><ul>\n<li>成员变量使用过程</li>\n</ul>\n<p><img src=\"/tupian/1(1).png\" alt=\"1\"></p>\n<ul>\n<li>成员方法调用过程</li>\n</ul>\n<p><img src=\"/tupian/2(1).png\" alt=\"2\"></p>\n<h3 id=\"2-2-多个对象内存图\"><a href=\"#2-2-多个对象内存图\" class=\"headerlink\" title=\"2.2 多个对象内存图\"></a>2.2 多个对象内存图</h3><ul>\n<li>成员变量使用过程</li>\n</ul>\n<p><img src=\"/tupian/3(1).png\" alt=\"3\"></p>\n<ul>\n<li>成员方法调用过程</li>\n</ul>\n<p><img src=\"/tupian/4(1).png\" alt=\"4\"></p>\n<ul>\n<li><p>总结：</p>\n<p>多个对象在堆内存中，都有不同的内存划分，成员变量存储在各自的内存区域中，成员方法多个对象共用的一份</p>\n</li>\n</ul>\n<h2 id=\"3-成员变量和局部变量\"><a href=\"#3-成员变量和局部变量\" class=\"headerlink\" title=\"3. 成员变量和局部变量\"></a>3. 成员变量和局部变量</h2><h3 id=\"3-1-成员变量和局部变量的区别\"><a href=\"#3-1-成员变量和局部变量的区别\" class=\"headerlink\" title=\"3.1 成员变量和局部变量的区别\"></a>3.1 成员变量和局部变量的区别</h3><ul>\n<li>类中位置不同：成员变量（类中方法外）局部变量（方法内部或方法声明上）</li>\n<li>内存中位置不同：成员变量（堆内存）局部变量（栈内存）</li>\n<li>生命周期不同：成员变量（随着对象的存在而存在，随着对象的消失而消失）局部变量（随着方法的调用而存在，醉着方法的调用完毕而消失）</li>\n<li>初始化值不同：成员变量（有默认初始化值）局部变量（没有默认初始化值，必须先定义，赋值才能使用）</li>\n</ul>\n<h2 id=\"4-封装\"><a href=\"#4-封装\" class=\"headerlink\" title=\"4. 封装\"></a>4. 封装</h2><h3 id=\"4-1-封装思想\"><a href=\"#4-1-封装思想\" class=\"headerlink\" title=\"4.1 封装思想\"></a>4.1 封装思想</h3><ol>\n<li><p>封装概述<br>是面向对象三大特征之一（封装，继承，多态）</p>\n<p><strong>对象代表什么，就得封装对应的数据，并提供数据对应的行为</strong> </p>\n</li>\n<li><p>封装代码实现<br>将类的某些信息隐藏在类内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对隐藏信息的操作和访问<br>成员变量private，提供对应的getXxx()&#x2F;setXxx()方法</p>\n</li>\n</ol>\n<h3 id=\"4-2-private关键字\"><a href=\"#4-2-private关键字\" class=\"headerlink\" title=\"4.2 private关键字\"></a>4.2 private关键字</h3><p>private是一个修饰符，可以用来修饰成员（成员变量，成员方法）</p>\n<ul>\n<li><p>被private修饰的成员，只能在本类进行访问，针对private修饰的成员变量，如果需要被其他类使用，提供相应的操作</p>\n<ul>\n<li>提供“get变量名()”方法，用于获取成员变量的值，方法用public修饰</li>\n<li>提供“set变量名(参数)”方法，用于设置成员变量的值，方法用public修饰</li>\n</ul>\n</li>\n<li><p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    学生类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//成员变量</span></span><br><span class=\"line\">    String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//提供get/set方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAge</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a&lt;<span class=\"number\">0</span> || a&gt;<span class=\"number\">120</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;你给的年龄有误&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            age = a;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getAge</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//成员方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">show</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(name + <span class=\"string\">&quot;,&quot;</span> + age);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    学生测试类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StudentDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建对象</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\">        <span class=\"comment\">//给成员变量赋值</span></span><br><span class=\"line\">        s.name = <span class=\"string\">&quot;林青霞&quot;</span>;</span><br><span class=\"line\">        s.setAge(<span class=\"number\">30</span>);</span><br><span class=\"line\">        <span class=\"comment\">//调用show方法</span></span><br><span class=\"line\">        s.show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"4-3-private的使用\"><a href=\"#4-3-private的使用\" class=\"headerlink\" title=\"4.3 private的使用\"></a>4.3 private的使用</h3><ul>\n<li><p>需求：定义标准的学生类，要求name和age使用private修饰，并提供set和get方法以及便于显示数据的show方法，测试类中创建对象并使用，最终控制台输出  林青霞，30 </p>\n</li>\n<li><p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    学生类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//成员变量</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//get/set方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String n)</span> &#123;</span><br><span class=\"line\">        name = n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAge</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> &#123;</span><br><span class=\"line\">        age = a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getAge</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">show</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(name + <span class=\"string\">&quot;,&quot;</span> + age);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    学生测试类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StudentDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建对象</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//使用set方法给成员变量赋值</span></span><br><span class=\"line\">        s.setName(<span class=\"string\">&quot;林青霞&quot;</span>);</span><br><span class=\"line\">        s.setAge(<span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        s.show();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//使用get方法获取成员变量的值</span></span><br><span class=\"line\">        System.out.println(s.getName() + <span class=\"string\">&quot;---&quot;</span> + s.getAge());</span><br><span class=\"line\">        System.out.println(s.getName() + <span class=\"string\">&quot;,&quot;</span> + s.getAge());</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"4-4-this关键字\"><a href=\"#4-4-this关键字\" class=\"headerlink\" title=\"4.4 this关键字\"></a>4.4 this关键字</h3><ul>\n<li>this修饰的变量用于指代成员变量，其主要作用是（区分局部变量和成员变量的重名问题）<ul>\n<li>方法的形参如果与成员变量同名，不带this修饰的变量指的是形参，而不是成员变量</li>\n<li>方法的形参没有与成员变量同名，不带this修饰的变量指的是成员变量</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAge</span><span class=\"params\">(<span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getAge</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">show</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(name + <span class=\"string\">&quot;,&quot;</span> + age);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-构造方法\"><a href=\"#5-构造方法\" class=\"headerlink\" title=\"5. 构造方法\"></a>5. 构造方法</h2><h3 id=\"5-1-构造方法概述\"><a href=\"#5-1-构造方法概述\" class=\"headerlink\" title=\"5.1 构造方法概述\"></a>5.1 构造方法概述</h3><p>构造方法是一种特殊的方法</p>\n<ul>\n<li><p>作用：创建对象   Student stu &#x3D; <strong>new Student();</strong></p>\n</li>\n<li><p>格式：</p>\n<p>public class 类名{</p>\n<p>​        修饰符 类名( 参数 ) {</p>\n<p>​        }</p>\n<p>}</p>\n</li>\n<li><p>功能：主要是完成对象数据的初始化</p>\n</li>\n<li><p>示例代码：</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//构造方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Student</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;无参构造方法&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">show</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(name + <span class=\"string\">&quot;,&quot;</span> + age);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    测试类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StudentDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建对象</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\">        s.show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-2-构造方法的注意事项\"><a href=\"#5-2-构造方法的注意事项\" class=\"headerlink\" title=\"5.2 构造方法的注意事项\"></a>5.2 构造方法的注意事项</h3><ul>\n<li>构造方法的创建</li>\n</ul>\n<p>如果没有定义构造方法，系统将给出一个默认的无参数构造方法<br>如果定义了构造方法，系统将不再提供默认的构造方法</p>\n<ul>\n<li>构造方法的重载</li>\n</ul>\n<p>如果自定义了带参构造方法，还要使用无参数构造方法，就必须再写一个无参数构造方法</p>\n<ul>\n<li>推荐的使用方式</li>\n</ul>\n<p>无论是否使用，都手工书写无参数构造方法</p>\n<ul>\n<li>重要功能！</li>\n</ul>\n<p>可以使用带参构造，为成员变量进行初始化</p>\n<ul>\n<li>示例代码</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    学生类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Student</span><span class=\"params\">()</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Student</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Student</span><span class=\"params\">(<span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Student</span><span class=\"params\">(String name,<span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">show</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(name + <span class=\"string\">&quot;,&quot;</span> + age);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    测试类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StudentDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建对象</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\">        s1.show();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//public Student(String name)</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>(<span class=\"string\">&quot;林青霞&quot;</span>);</span><br><span class=\"line\">        s2.show();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//public Student(int age)</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s3</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">        s3.show();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//public Student(String name,int age)</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s4</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>(<span class=\"string\">&quot;林青霞&quot;</span>,<span class=\"number\">30</span>);</span><br><span class=\"line\">        s4.show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-3-标准类制作\"><a href=\"#5-3-标准类制作\" class=\"headerlink\" title=\"5.3 标准类制作\"></a>5.3 标准类制作</h3><p>① 类名需要见名知意</p>\n<p>② 成员变量使用private修饰</p>\n<p>③ 提供至少两个构造方法 </p>\n<ul>\n<li>无参构造方法</li>\n<li>带全部参数的构造方法</li>\n</ul>\n<p>④ get和set方法 </p>\n<p>​\t提供每一个成员变量对应的setXxx()&#x2F;getXxx()</p>\n<p>⑤ 如果还有其他行为，也需要写上</p>\n<h3 id=\"5-4-练习1\"><a href=\"#5-4-练习1\" class=\"headerlink\" title=\"5.4 练习1\"></a>5.4 练习1</h3><p>需求：</p>\n<p>​\t定义标准学生类，要求分别使用空参和有参构造方法创建对象，空参创建的对象通过setXxx赋值，有参创建的对象直接赋值，并通过show方法展示数据。 </p>\n<ul>\n<li>示例代码：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//成员变量</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//构造方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Student</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Student</span><span class=\"params\">(String name, <span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//成员方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAge</span><span class=\"params\">(<span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getAge</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">show</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(name + <span class=\"string\">&quot;,&quot;</span> + age);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    创建对象并为其成员变量赋值的两种方式</span></span><br><span class=\"line\"><span class=\"comment\">        1:无参构造方法创建对象后使用setXxx()赋值</span></span><br><span class=\"line\"><span class=\"comment\">        2:使用带参构造方法直接创建带有属性值的对象</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StudentDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//无参构造方法创建对象后使用setXxx()赋值</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\">        s1.setName(<span class=\"string\">&quot;林青霞&quot;</span>);</span><br><span class=\"line\">        s1.setAge(<span class=\"number\">30</span>);</span><br><span class=\"line\">        s1.show();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//使用带参构造方法直接创建带有属性值的对象</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>(<span class=\"string\">&quot;林青霞&quot;</span>,<span class=\"number\">30</span>);</span><br><span class=\"line\">        s2.show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-4-练习2\"><a href=\"#5-4-练习2\" class=\"headerlink\" title=\"5.4 练习2\"></a>5.4 练习2</h3><p><img src=\"/tupian/111.jpg\" alt=\"111\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.私有化全部的成员变量</span></span><br><span class=\"line\">    <span class=\"comment\">//2.空参构造</span></span><br><span class=\"line\">    <span class=\"comment\">//3.带全部参数的构造</span></span><br><span class=\"line\">    <span class=\"comment\">//4.针对于每一个私有化的成员变量都要提供其对应的get和set方法</span></span><br><span class=\"line\">    <span class=\"comment\">//5.如果当前事物还有其他行为，那么也要写出来，比如学生的吃饭，睡觉等行为</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;<span class=\"comment\">//用户名</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;<span class=\"comment\">//密码</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String email;<span class=\"comment\">//邮箱</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">char</span> gender;<span class=\"comment\">//性别</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;<span class=\"comment\">//年龄</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//空参构造方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">User</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//带全部参数的构造</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">User</span><span class=\"params\">(String username, String password, String email, <span class=\"type\">char</span> gender, <span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.username = username;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.password = password;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.email = email;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.gender = gender;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//get和set</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getUsername</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> username;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setUsername</span><span class=\"params\">(String username)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.username = username;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getPassword</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setPassword</span><span class=\"params\">(String password)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.password = password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getEmail</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> email;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setEmail</span><span class=\"params\">(String email)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.email = email;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">char</span> <span class=\"title function_\">getGender</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> gender;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setGender</span><span class=\"params\">(<span class=\"type\">char</span> gender)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.gender = gender;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getAge</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAge</span><span class=\"params\">(<span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">eat</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(username + <span class=\"string\">&quot;在吃饭&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//写一个标准的javabean类</span></span><br><span class=\"line\">        <span class=\"comment\">//咱们在课后只要能把这个标准的javabean能自己写出来，那么就表示今天的知识点就ok了</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//利用空参构造创建对象</span></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">u1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">        <span class=\"comment\">//如果利用空参创建对象，还想赋值只能用set方法赋值</span></span><br><span class=\"line\">        u1.setUsername(<span class=\"string\">&quot;zhangsan&quot;</span>);</span><br><span class=\"line\">        u1.setPassword(<span class=\"string\">&quot;1234qwer&quot;</span>);</span><br><span class=\"line\">        u1.setEmail(<span class=\"string\">&quot;itheima@itcast.cn&quot;</span>);</span><br><span class=\"line\">        u1.setGender(<span class=\"string\">&#x27;男&#x27;</span>);</span><br><span class=\"line\">        u1.setAge(<span class=\"number\">23</span>);</span><br><span class=\"line\">        <span class=\"comment\">//获取属性的值并打印</span></span><br><span class=\"line\">        System.out.println(u1.getUsername() + <span class=\"string\">&quot;, &quot;</span> + u1.getPassword()</span><br><span class=\"line\">                + <span class=\"string\">&quot;, &quot;</span> + u1.getEmail() + <span class=\"string\">&quot;, &quot;</span> + u1.getGender() + <span class=\"string\">&quot;, &quot;</span> + u1.getAge());</span><br><span class=\"line\">        u1.eat();</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=============================&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//简单的办法</span></span><br><span class=\"line\">        <span class=\"comment\">//利用带全部参数的构造来创建对象</span></span><br><span class=\"line\">        <span class=\"comment\">//快捷键:ctrl + p</span></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">u2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"string\">&quot;lisi&quot;</span>,<span class=\"string\">&quot;12345678&quot;</span>,<span class=\"string\">&quot;lisi@itcast.cn&quot;</span>,<span class=\"string\">&#x27;女&#x27;</span>,<span class=\"number\">24</span>);</span><br><span class=\"line\">        System.out.println(u2.getUsername() + <span class=\"string\">&quot;, &quot;</span> + u2.getPassword()</span><br><span class=\"line\">                + <span class=\"string\">&quot;, &quot;</span> + u2.getEmail() + <span class=\"string\">&quot;, &quot;</span> + u2.getGender() + <span class=\"string\">&quot;, &quot;</span> + u2.getAge());</span><br><span class=\"line\">        u2.eat();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"title":"day07-综合练习","date":"2024-12-12T08:41:00.000Z","photos":["/tupian/j07.jpg"],"_content":"\n# 练习一：飞机票\n\n需求:\n\n​\t机票价格按照淡季旺季、头等舱和经济舱收费、输入机票原价、月份和头等舱或经济舱。\n\n​\t按照如下规则计算机票价格：旺季（5-10月）头等舱9折，经济舱8.5折，淡季（11月到来年4月）头等舱7折，经济舱6.5折。\n\n代码示例：\n\n```java\npackage com.itheima.test;\n\nimport java.util.Scanner;\n\npublic class Test1 {\n    public static void main(String[] args) {\n        /* 机票价格按照淡季旺季、头等舱和经济舱收费、输入机票原价、月份和头等舱或经济舱。\n        按照如下规则计算机票价格：旺季（5-10月）头等舱9折，经济舱8.5折，淡季（11月到来年4月）头等舱7折，经济舱6.5折。*/\n\n        //分析：\n        //1.键盘录入机票原价、月份、头等舱或经济舱\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"请输入机票的原价\");\n        int ticket = sc.nextInt();\n        System.out.println(\"请输入当前的月份\");\n        int month = sc.nextInt();\n        System.out.println(\"请输入当前购买的舱位 0 头等舱 1 经济舱\");\n        int seat = sc.nextInt();\n        //2.先判断月份是旺季还是淡季\n        //ctrl + alt + M 自动抽取方法\n        if (month >= 5 && month <= 10) {\n            //旺季 //3.继续判断当前机票是经济舱还是头等舱\n            //ticket = getPrice(ticket, seat, 0.9, 0.85);\n            ticket = getTicket(ticket, seat, 0.9, 0.85);\n        } else if ((month >= 1 && month <= 4) || (month >= 11 && month <= 12)) {\n            //淡季\n            //ticket = getPrice(ticket, seat, 0.7, 0.65);\n            ticket = getTicket(ticket, seat, 0.7, 0.65);\n        } else {\n            //表示键盘录入的月份是一个非法数据\n            System.out.println(\"键盘录入的月份不合法\");\n        }\n\n        System.out.println(ticket);\n    }\n\n    public static int getTicket(int ticket, int seat, double v, double v2) {\n        if (seat == 0) {\n            //头等舱\n            ticket = (int) (ticket * v);\n        } else if (seat == 1) {\n            //经济舱\n            ticket = (int) (ticket * v2);\n        } else {\n            System.out.println(\"没有这个舱位\");\n        }\n        return ticket;\n    }\n\n    //1.我要干嘛？根据舱位和折扣来计算最终的票价\n    //2.我干这件事，需要什么才能完成？原价 舱位 头等舱的折扣 经济舱的折扣\n    //3.方法的调用处是否需要继续使用这个结果  需要\n    /*  public static int getPrice(int ticket, int seat, double v0, double v1) {\n        if (seat == 0) {\n            //头等舱\n            ticket = (int) (ticket * v0);\n        } else if (seat == 1) {\n            //经济舱\n            ticket = (int) (ticket * v1);\n        } else {\n            System.out.println(\"没有这个舱位\");\n        }\n        return ticket;\n    }*/\n}\n```\n\n# 练习二：打印素数\n\n​\t判断101~200之间有多少个素数，并输出所有素数。\n\n备注：素数就是质数\n\n代码示例：\n\n```java\npackage com.itheima.test;\n\npublic class Test2 {\n    public static void main(String[] args) {\n        //判断 101 ~ 200 之间有多少个素数，并打印所有素数\n\n        //思路一： 2 ~ 99\n        //定义变量i ，赋值100\n        //判断i是否为质数\n\n        //定义一个变量用来统计有多少个质数\n        int count = 0;\n        //外循环：遍历101~200这个范围，依次得到这个范围之内的每一个数字\n        for (int i = 101; i <= 200; i++) {\n            //i 依次表示循环中的每一个数字\n            //继续判断i是否为一个质数\n            boolean flag = true;\n            //内循环:判断当前数字是否为一个质数。\n            for (int j = 2; j < i; j++) {\n                //j 表示2~99之间的每一个数字\n                if(i % j == 0){\n                    flag = false;\n                    //跳出单层循环，内循环\n                    break;\n                }\n            }\n            if(flag){\n                System.out.println(\"当前数字\"+i+\"是质数\");\n                count++;\n            }\n        }\n\n        System.out.println(\"一共有\" + count + \"个质数\");\n\n        /* int i = 7;\n        boolean flag = true;\n        for (int j = 2; j < i; j++) {\n            //j 表示2~99之间的每一个数字\n            if(i % j == 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            System.out.println(\"当前数字是质数\");\n        }else{\n            System.out.println(\"当前数字不是一个质数\");\n        }*/\n    }\n}\n\n```\n\n# 练习三：验证码\n\n需求：\n\n​\t定义方法实现随机产生一个5位的验证码\n\n验证码格式：\n\n​\t长度为5\n\n​\t前四位是大写字母或者小写字母\n\n​\t最后一位是数字\n\n代码示例：\n\n```java\npackage com.itheima.test;\n\nimport java.util.Random;\n\npublic class Test3 {\n    public static void main(String[] args) {\n        /*   需求：\n            定义方法实现随机产生一个5位的验证码\n            验证码格式：\n            长度为5\n            前四位是大写字母或者小写字母\n            最后一位是数字\n     */\n\n        //方法：\n        //在以后如果我们要在一堆没有什么规律的数据中随机抽取\n        //可以先把这些数据放到数组当中\n        //再随机抽取一个索引\n\n        //分析：\n        //1.大写字母和小写字母都放到数组当中\n        char[] chs = new char[52];\n        for (int i = 0; i < chs.length; i++) {\n            //ASCII码表\n            if(i <= 25){\n                //添加小写字母\n                chs[i] = (char)(97 + i);\n            }else{//27\n                //添加大写字母\n                // A --- 65\n                chs[i] = (char)(65 + i - 26);\n            }\n        }\n\n        //定义一个字符串类型的变量，用来记录最终的结果\n        String result = \"\";\n\n        //2.随机抽取4次\n        //随机抽取数组中的索引\n        Random r = new Random();\n        for (int i = 0; i < 4; i++) {\n            int randomIndex = r.nextInt(chs.length);\n            //利用随机索引，获取对应的元素\n            //System.out.println(chs[randomIndex]);\n            result = result + chs[randomIndex];\n        }\n        //System.out.println(result);\n        //3.随机抽取一个数字0~9\n        int number = r.nextInt(10);\n        //生成最终的结果\n        result = result + number;\n\n        //打印最终结果\n        System.out.println(result);\n\n    }\n}\n\n```\n\n# 练习四：复制数组\n\n需求：\n\n​\t把一个数组中的元素复制到另一个新数组中去。\n\n代码示例：\n\n```java\npackage com.itheima.test;\n\npublic class Test4 {\n    public static void main(String[] args) {\n        /* 需求：\n        把一个数组中的元素复制到另一个新数组中去。*/\n\n        //分析：\n        //1.定义一个老数组并存储一些元素\n        int[] arr = {1,2,3,4,5};\n        //2.定义一个新数组的长度跟老数组一致\n        int[] newArr = new int[arr.length];\n        //3.遍历老数组，得到老数组中的每一个元素，依次存入到新数组当中\n        for (int i = 0; i < arr.length; i++) {\n            //i 表示老数组中的索引。新数组中的每一个索引\n            //arr[i]  表示老数组中的元素\n            newArr[i] = arr[i];\n        }\n\n        //4.新数组中已经存满元素了\n        for (int i = 0; i < newArr.length; i++) {\n            System.out.println(newArr[i]);\n        }\n\n    }\n}\n\n```\n\n# 练习五：评委打分\n\n需求 :  \n\n​\t在唱歌比赛中，有6名评委给选手打分，分数范围是[0 - 100]之间的整数。选手的最后得分为：去掉最高分、最低分后的4个评委的平均分，请完成上述过程并计算出选手的得分。\n\n代码示例：\n\n```java\npackage com.itheima.test;\n\nimport java.util.Scanner;\n\npublic class Test5 {\n    public static void main(String[] args) {\n        //在唱歌比赛中，有6名评委给选手打分，分数范围是[0 - 100]之间的整数。\n        // 选手的最后得分为：去掉最高分、最低分后的4个评委的平均分，请完成上述过程并计算出选手的得分。\n\n\n        //分析：\n        //1.定义一个数组，用来存储6名评委的打分（0~100）\n        int[] scoreArr = getScores();\n        for (int i = 0; i < scoreArr.length; i++) {\n            System.out.println(scoreArr[i]);\n        }\n        //2.求出数组中的最大值\n        int max = getMax(scoreArr);\n        //3.求出数组中的最小值\n        int min = getMin(scoreArr);\n        //4.求出数组中6个分数的总和\n        int sum = getSum(scoreArr);\n        //5.（总和 - 最大值 - 最小值 ）/4\n        int avg =  (sum - max - min)/(scoreArr.length - 2);\n        //6.打印结果\n        System.out.println(\"选手的最终得分为：\" + avg);\n    }\n\n\n    public static int getSum(int[] scoreArr){\n        int sum = 0;\n        for (int i = 0; i < scoreArr.length; i++) {\n            sum = sum + scoreArr[i];\n        }\n        return  sum;\n\n    }\n\n\n\n    //求数组的最大值\n    public static int getMax(int[] scoreArr){\n        int max = scoreArr[0];\n        for (int i = 1; i < scoreArr.length; i++) {\n            if(scoreArr[i] > max){\n                max = scoreArr[i];\n            }\n        }\n        return max;\n    }\n\n    //求数组的最小值\n    public static int getMin(int[] scoreArr){\n        int min = scoreArr[0];\n        for (int i = 1; i < scoreArr.length; i++) {\n            if(scoreArr[i] < min){\n                min = scoreArr[i];\n            }\n        }\n        return min;\n    }\n\n\n\n    //1.我要干嘛？定义一个数组，用来存储6名评委的打分（0~100）\n    //2.我需要什么？都不需要\n    //3.干完了这件事情，是否需要返回？必须返回\n    public static int[] getScores(){\n        //定义数组\n        int[] scores = new int[6];\n        //使用键盘录入的形式，输入分数：0~100\n        Scanner sc = new Scanner(System.in);\n        for (int i = 0; i < scores.length; ) {\n            System.out.println(\"请输入评委的打分\");\n            int score = sc.nextInt();//100\n            if(score >=0 && score<= 100){\n                scores[i] = score;\n                i++;\n            }else{\n                System.out.println(\"成绩超出了范围,继续录入，当前的i为：\" + i);\n            }\n        }\n        return  scores;\n    }\n}\n```\n\n\n\n# 练习六：数字加密\n\n需求：\n\n​\t某系统的数字密码（大于0），比如1983，采用加密方式进行传输。\n\n规则如下：\n\n​\t先得到每位数，然后每位数都加上5 , 再对10求余，最后将所有数字反转，得到一串新数。\n\n举例：\n\n```java\n\t\t1\t9\t8\t3\n+5\t\t6   14  13  8\n%10\t\t6   4   3   8\n反转\t   8   3   4   6\n加密后的结果就是：8346\n```\n\n代码示例：\n\n```java\npackage com.itheima.test;\n\npublic class Test6 {\n    public static void main(String[] args) {\n        /*\n        某系统的数字密码（大于0）。比如1983，采用加密方式进行传输，\n        规则如下：\n            每位数加上5\n            再对10求余，\n            最后将所有数字反转，\n            得到一串新数。\n*/\n\n\n        //分析：\n        //1.把整数里面的每一位放到数组当中\n        int[] arr = {1, 9, 8, 3};\n        //2.加密\n        //每位数加上5\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = arr[i] + 5;\n        }\n        //再对10求余，\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = arr[i] % 10;\n        }\n        //将所有数字反转\n        for (int i = 0, j = arr.length - 1; i < j; i++, j--) {\n            int temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n        }\n        //8 3 4 6 --> 8346\n        //3.把数组里面的每一个数字进行拼接，变成加密之后的结果\n        int number = 0;\n        for (int i = 0; i < arr.length; i++) {\n            number = number * 10 + arr[i];\n        }\n        System.out.println(number);\n    }\n}\n```\n\n# 练习六扩展：\n\n```java\npackage com.itheima.test;\n\npublic class Test7 {\n    public static void main(String[] args) {\n        //需求：\n        //把整数上的每一位都添加到数组当中\n        //反向推导\n\n\n\n        //1.计算出数组的长度\n        int number = 12345;\n        //定义一个变量临时记录number的值，就是为了第三步的时候再次使用\n        int temp = number;\n        //定义一个变量进行统计\n        int count = 0;\n        while(number != 0){\n            //每一次循环就去掉右边的一个数字\n            number = number / 10;\n            //去掉一位计数器就自增一次。\n            count++;\n        }\n        //2.定义数组\n        //动态初始化\n        int[] arr = new int[count];\n        //3.把整数上的每一位都添加到数组当中\n        int index = arr.length -1;\n        while(temp != 0){//12345\n            //获取temp里面的每一位数组\n            int ge = temp % 10;\n            //再去掉右边的那位数字\n            temp = temp / 10;\n            //把当前获取到的个位添加到数组当中\n            arr[index] = ge;\n            index--;\n        }\n        //验证结果  1  2  3  4 5\n        for (int i = 0; i < arr.length; i++) {\n            System.out.print(arr[i] + \" \");\n        }\n    }\n}\n```\n\n\n\n\n\n# 练习七：数字解密\n\n把上一题加密之后的数据进行解密\n\n代码示例：\n\n```java\npackage com.itheima.test;\n\npublic class Test8 {\n    public static void main(String[] args) {\n        /*某系统的数字密码（大于0）。比如1983，采用加密方式进行传输，\n        规则如下：\n            每位数加上5\n            再对10求余，\n            最后将所有数字反转，\n            得到一串新数。\n            按照以上规则进行解密：\n            比如1983加密之后变成8346，解密之后变成1983\n        */\n\n\n        //1.定义数组记录解密之后的结果\n        int[] arr = {8, 3, 4, 6};\n        //2.反转\n        for (int i = 0, j = arr.length - 1; i < j; i++, j--) {\n            int temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n        }\n        //3.由于加密是通过对10取余的方式进行获取的\n        //所以在解密的时候就需要判断，0~4之间+10  5~9数字不变\n        for (int i = 0; i < arr.length; i++) {\n            if (arr[i] >= 0 && arr[i] <= 4) {\n                arr[i] = arr[i] + 10;\n            }\n        }\n        //4.每一位减5\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = arr[i] - 5;\n        }\n        //5.获取数组里面的每一位数字拼接成最终的结果\n        int number = 0;\n        for (int i = 0; i < arr.length; i++) {\n            number = number * 10 + arr[i];\n        }\n        System.out.println(number);\n\n\n\n\n    }\n}\n\n```\n\n\n\n\n\n# 练习八：抽奖\n\n需求：\n\n​\t一个大V直播抽奖，奖品是现金红包，分别有{2, 588 , 888, 1000, 10000}五个奖金。请使用代码模拟抽奖，打印出每个奖项，奖项的出现顺序要随机且不重复。打印效果如下：（随机顺序，不一定是下面的顺序）\n\n```java\n888元的奖金被抽出\n588元的奖金被抽出\n10000元的奖金被抽出\n1000元的奖金被抽出\n2元的奖金被抽出\n```\n\n## 解法一:\n\n```java\npackage com.itheima.test;\n\nimport java.util.Random;\n\npublic class Test9 {\n    public static void main(String[] args) {\n        /* 需求：\n        一个大V直播抽奖，奖品是现金红包，分别有{2, 588 , 888, 1000, 10000}五个奖金。\n        请使用代码模拟抽奖，打印出每个奖项，奖项的出现顺序要随机且不重复。\n        打印效果如下：（随机顺序，不一定是下面的顺序）\n            888元的奖金被抽出\n            588元的奖金被抽出\n            10000元的奖金被抽出\n            1000元的奖金被抽出\n            2元的奖金被抽出\n        */\n\n\n        //分析：\n        //1.定义数组表示奖池\n        int[] arr = {2, 588, 888, 1000, 10000};\n        //2.定义新数组用于存储抽奖的结果\n        int[] newArr = new int[arr.length];\n        //3.抽奖\n        Random r = new Random();\n        //因为有5个奖项，所以这里要循环5次\n        for (int i = 0; i < 5; ) {\n            //获取随机索引\n            int randomIndex = r.nextInt(arr.length);\n            //获取奖项\n            int prize = arr[randomIndex];\n            //判断当前的奖项是否存在，如果存在则重新抽取，如果不存在，就表示是有效奖项\n            boolean flag = contains(newArr, prize);\n            if(!flag){\n                //把当前抽取到的奖项添加到newArr当中\n                newArr[i] = prize;\n                //添加完毕之后，移动索引\n                i++;\n            }\n        }\n        //4.遍历newArr\n        for (int i = 0; i < newArr.length; i++) {\n            System.out.println(newArr[i]);\n        }\n\n\n    }\n\n    //判断prize在数组当中是否存在\n    //存在：true\n    //不存在：false\n    public static boolean contains(int[] arr,int prize){\n        for (int i = 0; i < arr.length; i++) {\n            if(arr[i] == prize){\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n}\n\n```\n\n## 解法二：\n\n```java\npackage com.itheima.test;\n\nimport java.util.Random;\n\npublic class Test10 {\n    public static void main(String[] args) {\n       /* 需求：\n        一个大V直播抽奖，奖品是现金红包，分别有{2, 588 , 888, 1000, 10000}五个奖金。\n        请使用代码模拟抽奖，打印出每个奖项，奖项的出现顺序要随机且不重复。\n        打印效果如下：（随机顺序，不一定是下面的顺序）\n            888元的奖金被抽出\n            588元的奖金被抽出\n            10000元的奖金被抽出\n            1000元的奖金被抽出\n            2元的奖金被抽出\n        */\n\n        //1.把奖池里面的所有奖项打乱顺序\n        int[] arr = {2, 588, 888, 1000, 10000};\n        Random r = new Random();\n        for (int i = 0; i < arr.length; i++) {\n            //获取随机索引\n            int randomIndex = r.nextInt(arr.length);\n            //拿着i跟随机索引randomIndex上的值进行交换\n            int temp = arr[i];\n            arr[i] = arr[randomIndex];\n            arr[randomIndex] = temp;\n        }\n        //2.遍历奖池,从0索引开始获取每一个奖项\n        for (int i = 0; i < arr.length; i++) {\n            System.out.println(arr[i]);\n        }\n\n\n    }\n}\n```\n\n\n\n\n\n# 练习九：双色球\n\n ![图片1](/tupian/图片1.png)\n\n\n\n代码示例:\n\n```java\npackage com.itheima.test;\n\nimport java.util.Random;\nimport java.util.Scanner;\n\npublic class Test11 {\n    public static void main(String[] args) {\n        //1.生成中奖号码\n        int[] arr = createNumber(); // 123456  7\n\n        System.out.println(\"=======================\");\n        for (int i = 0; i < arr.length; i++) {\n            System.out.print(arr[i] + \" \");\n        }\n\n        System.out.println(\"=======================\");\n\n\n\n        //2.用户输入彩票号码（红球 + 蓝球）//654321\n        int[] userInputArr = userInputNumber();\n\n        //3.判断用户的中奖情况\n        //红球 蓝球\n        int redCount = 0;\n        int blueCount = 0;\n\n        //判断红球\n        for (int i = 0; i < userInputArr.length - 1; i++) {\n            int redNumber = userInputArr[i];\n            for (int j = 0; j < arr.length - 1; j++) {\n                if(redNumber == arr[j]){\n                    redCount++;\n                    //如果找到了，那么后面的数字就没有必要继续比较了\n                    //跳出内循环，继续判断下一个红球号码是否中奖\n                    break;\n                }\n            }\n        }\n\n        //判断蓝球\n        int blueNumber = userInputArr[userInputArr.length-1];\n        if(blueNumber == arr[arr.length - 1]){\n            blueCount++;\n        }\n\n        //根据红球的个数以及蓝球的个数来判断中奖情况\n        if(redCount == 6 && blueCount == 1){\n            System.out.println(\"恭喜你，中奖1000万\");\n        }else if(redCount == 6 && blueCount == 0){\n            System.out.println(\"恭喜你，中奖500万\");\n        }else if(redCount == 5 && blueCount == 1){\n            System.out.println(\"恭喜你，中奖3000\");\n        }else if((redCount == 5 && blueCount == 0) ||  (redCount == 4 && blueCount == 1)){\n            System.out.println(\"恭喜你，中奖200\");\n        }else if((redCount == 4 && blueCount == 0) ||  (redCount == 3 && blueCount == 1)){\n            System.out.println(\"恭喜你，中奖10\");\n        }else if((redCount == 2 && blueCount == 1) ||  (redCount == 1 && blueCount == 1)|| (redCount == 0 && blueCount == 1)){\n            System.out.println(\"恭喜你，中奖5\");\n        }else{\n            System.out.println(\"谢谢参与，谢谢惠顾\");\n        }\n\n    }\n\n    public static int[] userInputNumber() {\n        //1.创建数组用于添加用户购买的彩票号码\n        //6个红球 1个蓝球 数组长度：7\n        int[] arr = new int[7];\n\n        //2.利用键盘录入让用输入\n        Scanner sc = new Scanner(System.in);\n        //让用户输入红球号码\n        for (int i = 0; i < 6; ) {\n            System.out.println(\"请输入第\" + (i + 1) + \"个红球号码\");\n            int redNumber = sc.nextInt();\n            //redNumber  在1~33  唯一不重复\n            if (redNumber >= 1 && redNumber <= 33) {\n                boolean flag = contains(arr, redNumber);\n                if (!flag) {\n                    //不存在\n                    //有效的，可以添加到数组当中\n                    arr[i] = redNumber;\n                    i++;\n                } else {\n                    //存在\n                    System.out.println(\"当前红球号码已经存在，请重新输入\");\n                }\n            } else {\n                System.out.println(\"当前红球号码超出范围\");\n            }\n        }\n\n        //让用户输入篮球号码\n        System.out.println(\"请输入篮球号码\");\n        //1~16\n        while (true) {\n            int blueNumber = sc.nextInt();\n            if (blueNumber >= 1 && blueNumber <= 16) {\n                arr[arr.length - 1] = blueNumber;\n                break;\n            } else {\n                System.out.println(\"当前篮球号码超出范围\");\n            }\n        }\n        return arr;\n\n    }\n\n\n    public static int[] createNumber() {\n        //1.创建数组用于添加中奖号码\n        //6个红球 1个蓝球 数组长度：7\n        int[] arr = new int[7];\n\n        //2.随机生成号码并添加到数组当中\n        //红球：不能重复的  1 2 3 4 5 6\n        //蓝球：可以跟红球号码重复 5\n\n        //生成红球号码并添加到数组当中\n        Random r = new Random();\n        for (int i = 0; i < 6; ) {\n            //获取红球号码\n            int redNumber = r.nextInt(33) + 1;\n            boolean flag = contains(arr, redNumber);\n            if (!flag) {\n                //把红球号码添加到数组当中\n                arr[i] = redNumber;\n                i++;\n            }\n        }\n\n        //生成蓝球号码并添加到数组当中\n        int blueNumber = r.nextInt(16) + 1;\n        arr[arr.length - 1] = blueNumber;\n        return arr;\n    }\n\n    //用于判断数组在数组中是否存在\n    public static boolean contains(int[] arr, int number) {\n        for (int i = 0; i < arr.length; i++) {\n            if (arr[i] == number) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n```\n\n","source":"_posts/day07-综合练习.md","raw":"---\ntitle: day07-综合练习\ndate: 2024-12-12 16:41:00\ntags:\n    - 练习\ncategories: java\nphotos: /tupian/j07.jpg\n---\n\n# 练习一：飞机票\n\n需求:\n\n​\t机票价格按照淡季旺季、头等舱和经济舱收费、输入机票原价、月份和头等舱或经济舱。\n\n​\t按照如下规则计算机票价格：旺季（5-10月）头等舱9折，经济舱8.5折，淡季（11月到来年4月）头等舱7折，经济舱6.5折。\n\n代码示例：\n\n```java\npackage com.itheima.test;\n\nimport java.util.Scanner;\n\npublic class Test1 {\n    public static void main(String[] args) {\n        /* 机票价格按照淡季旺季、头等舱和经济舱收费、输入机票原价、月份和头等舱或经济舱。\n        按照如下规则计算机票价格：旺季（5-10月）头等舱9折，经济舱8.5折，淡季（11月到来年4月）头等舱7折，经济舱6.5折。*/\n\n        //分析：\n        //1.键盘录入机票原价、月份、头等舱或经济舱\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"请输入机票的原价\");\n        int ticket = sc.nextInt();\n        System.out.println(\"请输入当前的月份\");\n        int month = sc.nextInt();\n        System.out.println(\"请输入当前购买的舱位 0 头等舱 1 经济舱\");\n        int seat = sc.nextInt();\n        //2.先判断月份是旺季还是淡季\n        //ctrl + alt + M 自动抽取方法\n        if (month >= 5 && month <= 10) {\n            //旺季 //3.继续判断当前机票是经济舱还是头等舱\n            //ticket = getPrice(ticket, seat, 0.9, 0.85);\n            ticket = getTicket(ticket, seat, 0.9, 0.85);\n        } else if ((month >= 1 && month <= 4) || (month >= 11 && month <= 12)) {\n            //淡季\n            //ticket = getPrice(ticket, seat, 0.7, 0.65);\n            ticket = getTicket(ticket, seat, 0.7, 0.65);\n        } else {\n            //表示键盘录入的月份是一个非法数据\n            System.out.println(\"键盘录入的月份不合法\");\n        }\n\n        System.out.println(ticket);\n    }\n\n    public static int getTicket(int ticket, int seat, double v, double v2) {\n        if (seat == 0) {\n            //头等舱\n            ticket = (int) (ticket * v);\n        } else if (seat == 1) {\n            //经济舱\n            ticket = (int) (ticket * v2);\n        } else {\n            System.out.println(\"没有这个舱位\");\n        }\n        return ticket;\n    }\n\n    //1.我要干嘛？根据舱位和折扣来计算最终的票价\n    //2.我干这件事，需要什么才能完成？原价 舱位 头等舱的折扣 经济舱的折扣\n    //3.方法的调用处是否需要继续使用这个结果  需要\n    /*  public static int getPrice(int ticket, int seat, double v0, double v1) {\n        if (seat == 0) {\n            //头等舱\n            ticket = (int) (ticket * v0);\n        } else if (seat == 1) {\n            //经济舱\n            ticket = (int) (ticket * v1);\n        } else {\n            System.out.println(\"没有这个舱位\");\n        }\n        return ticket;\n    }*/\n}\n```\n\n# 练习二：打印素数\n\n​\t判断101~200之间有多少个素数，并输出所有素数。\n\n备注：素数就是质数\n\n代码示例：\n\n```java\npackage com.itheima.test;\n\npublic class Test2 {\n    public static void main(String[] args) {\n        //判断 101 ~ 200 之间有多少个素数，并打印所有素数\n\n        //思路一： 2 ~ 99\n        //定义变量i ，赋值100\n        //判断i是否为质数\n\n        //定义一个变量用来统计有多少个质数\n        int count = 0;\n        //外循环：遍历101~200这个范围，依次得到这个范围之内的每一个数字\n        for (int i = 101; i <= 200; i++) {\n            //i 依次表示循环中的每一个数字\n            //继续判断i是否为一个质数\n            boolean flag = true;\n            //内循环:判断当前数字是否为一个质数。\n            for (int j = 2; j < i; j++) {\n                //j 表示2~99之间的每一个数字\n                if(i % j == 0){\n                    flag = false;\n                    //跳出单层循环，内循环\n                    break;\n                }\n            }\n            if(flag){\n                System.out.println(\"当前数字\"+i+\"是质数\");\n                count++;\n            }\n        }\n\n        System.out.println(\"一共有\" + count + \"个质数\");\n\n        /* int i = 7;\n        boolean flag = true;\n        for (int j = 2; j < i; j++) {\n            //j 表示2~99之间的每一个数字\n            if(i % j == 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            System.out.println(\"当前数字是质数\");\n        }else{\n            System.out.println(\"当前数字不是一个质数\");\n        }*/\n    }\n}\n\n```\n\n# 练习三：验证码\n\n需求：\n\n​\t定义方法实现随机产生一个5位的验证码\n\n验证码格式：\n\n​\t长度为5\n\n​\t前四位是大写字母或者小写字母\n\n​\t最后一位是数字\n\n代码示例：\n\n```java\npackage com.itheima.test;\n\nimport java.util.Random;\n\npublic class Test3 {\n    public static void main(String[] args) {\n        /*   需求：\n            定义方法实现随机产生一个5位的验证码\n            验证码格式：\n            长度为5\n            前四位是大写字母或者小写字母\n            最后一位是数字\n     */\n\n        //方法：\n        //在以后如果我们要在一堆没有什么规律的数据中随机抽取\n        //可以先把这些数据放到数组当中\n        //再随机抽取一个索引\n\n        //分析：\n        //1.大写字母和小写字母都放到数组当中\n        char[] chs = new char[52];\n        for (int i = 0; i < chs.length; i++) {\n            //ASCII码表\n            if(i <= 25){\n                //添加小写字母\n                chs[i] = (char)(97 + i);\n            }else{//27\n                //添加大写字母\n                // A --- 65\n                chs[i] = (char)(65 + i - 26);\n            }\n        }\n\n        //定义一个字符串类型的变量，用来记录最终的结果\n        String result = \"\";\n\n        //2.随机抽取4次\n        //随机抽取数组中的索引\n        Random r = new Random();\n        for (int i = 0; i < 4; i++) {\n            int randomIndex = r.nextInt(chs.length);\n            //利用随机索引，获取对应的元素\n            //System.out.println(chs[randomIndex]);\n            result = result + chs[randomIndex];\n        }\n        //System.out.println(result);\n        //3.随机抽取一个数字0~9\n        int number = r.nextInt(10);\n        //生成最终的结果\n        result = result + number;\n\n        //打印最终结果\n        System.out.println(result);\n\n    }\n}\n\n```\n\n# 练习四：复制数组\n\n需求：\n\n​\t把一个数组中的元素复制到另一个新数组中去。\n\n代码示例：\n\n```java\npackage com.itheima.test;\n\npublic class Test4 {\n    public static void main(String[] args) {\n        /* 需求：\n        把一个数组中的元素复制到另一个新数组中去。*/\n\n        //分析：\n        //1.定义一个老数组并存储一些元素\n        int[] arr = {1,2,3,4,5};\n        //2.定义一个新数组的长度跟老数组一致\n        int[] newArr = new int[arr.length];\n        //3.遍历老数组，得到老数组中的每一个元素，依次存入到新数组当中\n        for (int i = 0; i < arr.length; i++) {\n            //i 表示老数组中的索引。新数组中的每一个索引\n            //arr[i]  表示老数组中的元素\n            newArr[i] = arr[i];\n        }\n\n        //4.新数组中已经存满元素了\n        for (int i = 0; i < newArr.length; i++) {\n            System.out.println(newArr[i]);\n        }\n\n    }\n}\n\n```\n\n# 练习五：评委打分\n\n需求 :  \n\n​\t在唱歌比赛中，有6名评委给选手打分，分数范围是[0 - 100]之间的整数。选手的最后得分为：去掉最高分、最低分后的4个评委的平均分，请完成上述过程并计算出选手的得分。\n\n代码示例：\n\n```java\npackage com.itheima.test;\n\nimport java.util.Scanner;\n\npublic class Test5 {\n    public static void main(String[] args) {\n        //在唱歌比赛中，有6名评委给选手打分，分数范围是[0 - 100]之间的整数。\n        // 选手的最后得分为：去掉最高分、最低分后的4个评委的平均分，请完成上述过程并计算出选手的得分。\n\n\n        //分析：\n        //1.定义一个数组，用来存储6名评委的打分（0~100）\n        int[] scoreArr = getScores();\n        for (int i = 0; i < scoreArr.length; i++) {\n            System.out.println(scoreArr[i]);\n        }\n        //2.求出数组中的最大值\n        int max = getMax(scoreArr);\n        //3.求出数组中的最小值\n        int min = getMin(scoreArr);\n        //4.求出数组中6个分数的总和\n        int sum = getSum(scoreArr);\n        //5.（总和 - 最大值 - 最小值 ）/4\n        int avg =  (sum - max - min)/(scoreArr.length - 2);\n        //6.打印结果\n        System.out.println(\"选手的最终得分为：\" + avg);\n    }\n\n\n    public static int getSum(int[] scoreArr){\n        int sum = 0;\n        for (int i = 0; i < scoreArr.length; i++) {\n            sum = sum + scoreArr[i];\n        }\n        return  sum;\n\n    }\n\n\n\n    //求数组的最大值\n    public static int getMax(int[] scoreArr){\n        int max = scoreArr[0];\n        for (int i = 1; i < scoreArr.length; i++) {\n            if(scoreArr[i] > max){\n                max = scoreArr[i];\n            }\n        }\n        return max;\n    }\n\n    //求数组的最小值\n    public static int getMin(int[] scoreArr){\n        int min = scoreArr[0];\n        for (int i = 1; i < scoreArr.length; i++) {\n            if(scoreArr[i] < min){\n                min = scoreArr[i];\n            }\n        }\n        return min;\n    }\n\n\n\n    //1.我要干嘛？定义一个数组，用来存储6名评委的打分（0~100）\n    //2.我需要什么？都不需要\n    //3.干完了这件事情，是否需要返回？必须返回\n    public static int[] getScores(){\n        //定义数组\n        int[] scores = new int[6];\n        //使用键盘录入的形式，输入分数：0~100\n        Scanner sc = new Scanner(System.in);\n        for (int i = 0; i < scores.length; ) {\n            System.out.println(\"请输入评委的打分\");\n            int score = sc.nextInt();//100\n            if(score >=0 && score<= 100){\n                scores[i] = score;\n                i++;\n            }else{\n                System.out.println(\"成绩超出了范围,继续录入，当前的i为：\" + i);\n            }\n        }\n        return  scores;\n    }\n}\n```\n\n\n\n# 练习六：数字加密\n\n需求：\n\n​\t某系统的数字密码（大于0），比如1983，采用加密方式进行传输。\n\n规则如下：\n\n​\t先得到每位数，然后每位数都加上5 , 再对10求余，最后将所有数字反转，得到一串新数。\n\n举例：\n\n```java\n\t\t1\t9\t8\t3\n+5\t\t6   14  13  8\n%10\t\t6   4   3   8\n反转\t   8   3   4   6\n加密后的结果就是：8346\n```\n\n代码示例：\n\n```java\npackage com.itheima.test;\n\npublic class Test6 {\n    public static void main(String[] args) {\n        /*\n        某系统的数字密码（大于0）。比如1983，采用加密方式进行传输，\n        规则如下：\n            每位数加上5\n            再对10求余，\n            最后将所有数字反转，\n            得到一串新数。\n*/\n\n\n        //分析：\n        //1.把整数里面的每一位放到数组当中\n        int[] arr = {1, 9, 8, 3};\n        //2.加密\n        //每位数加上5\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = arr[i] + 5;\n        }\n        //再对10求余，\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = arr[i] % 10;\n        }\n        //将所有数字反转\n        for (int i = 0, j = arr.length - 1; i < j; i++, j--) {\n            int temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n        }\n        //8 3 4 6 --> 8346\n        //3.把数组里面的每一个数字进行拼接，变成加密之后的结果\n        int number = 0;\n        for (int i = 0; i < arr.length; i++) {\n            number = number * 10 + arr[i];\n        }\n        System.out.println(number);\n    }\n}\n```\n\n# 练习六扩展：\n\n```java\npackage com.itheima.test;\n\npublic class Test7 {\n    public static void main(String[] args) {\n        //需求：\n        //把整数上的每一位都添加到数组当中\n        //反向推导\n\n\n\n        //1.计算出数组的长度\n        int number = 12345;\n        //定义一个变量临时记录number的值，就是为了第三步的时候再次使用\n        int temp = number;\n        //定义一个变量进行统计\n        int count = 0;\n        while(number != 0){\n            //每一次循环就去掉右边的一个数字\n            number = number / 10;\n            //去掉一位计数器就自增一次。\n            count++;\n        }\n        //2.定义数组\n        //动态初始化\n        int[] arr = new int[count];\n        //3.把整数上的每一位都添加到数组当中\n        int index = arr.length -1;\n        while(temp != 0){//12345\n            //获取temp里面的每一位数组\n            int ge = temp % 10;\n            //再去掉右边的那位数字\n            temp = temp / 10;\n            //把当前获取到的个位添加到数组当中\n            arr[index] = ge;\n            index--;\n        }\n        //验证结果  1  2  3  4 5\n        for (int i = 0; i < arr.length; i++) {\n            System.out.print(arr[i] + \" \");\n        }\n    }\n}\n```\n\n\n\n\n\n# 练习七：数字解密\n\n把上一题加密之后的数据进行解密\n\n代码示例：\n\n```java\npackage com.itheima.test;\n\npublic class Test8 {\n    public static void main(String[] args) {\n        /*某系统的数字密码（大于0）。比如1983，采用加密方式进行传输，\n        规则如下：\n            每位数加上5\n            再对10求余，\n            最后将所有数字反转，\n            得到一串新数。\n            按照以上规则进行解密：\n            比如1983加密之后变成8346，解密之后变成1983\n        */\n\n\n        //1.定义数组记录解密之后的结果\n        int[] arr = {8, 3, 4, 6};\n        //2.反转\n        for (int i = 0, j = arr.length - 1; i < j; i++, j--) {\n            int temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n        }\n        //3.由于加密是通过对10取余的方式进行获取的\n        //所以在解密的时候就需要判断，0~4之间+10  5~9数字不变\n        for (int i = 0; i < arr.length; i++) {\n            if (arr[i] >= 0 && arr[i] <= 4) {\n                arr[i] = arr[i] + 10;\n            }\n        }\n        //4.每一位减5\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = arr[i] - 5;\n        }\n        //5.获取数组里面的每一位数字拼接成最终的结果\n        int number = 0;\n        for (int i = 0; i < arr.length; i++) {\n            number = number * 10 + arr[i];\n        }\n        System.out.println(number);\n\n\n\n\n    }\n}\n\n```\n\n\n\n\n\n# 练习八：抽奖\n\n需求：\n\n​\t一个大V直播抽奖，奖品是现金红包，分别有{2, 588 , 888, 1000, 10000}五个奖金。请使用代码模拟抽奖，打印出每个奖项，奖项的出现顺序要随机且不重复。打印效果如下：（随机顺序，不一定是下面的顺序）\n\n```java\n888元的奖金被抽出\n588元的奖金被抽出\n10000元的奖金被抽出\n1000元的奖金被抽出\n2元的奖金被抽出\n```\n\n## 解法一:\n\n```java\npackage com.itheima.test;\n\nimport java.util.Random;\n\npublic class Test9 {\n    public static void main(String[] args) {\n        /* 需求：\n        一个大V直播抽奖，奖品是现金红包，分别有{2, 588 , 888, 1000, 10000}五个奖金。\n        请使用代码模拟抽奖，打印出每个奖项，奖项的出现顺序要随机且不重复。\n        打印效果如下：（随机顺序，不一定是下面的顺序）\n            888元的奖金被抽出\n            588元的奖金被抽出\n            10000元的奖金被抽出\n            1000元的奖金被抽出\n            2元的奖金被抽出\n        */\n\n\n        //分析：\n        //1.定义数组表示奖池\n        int[] arr = {2, 588, 888, 1000, 10000};\n        //2.定义新数组用于存储抽奖的结果\n        int[] newArr = new int[arr.length];\n        //3.抽奖\n        Random r = new Random();\n        //因为有5个奖项，所以这里要循环5次\n        for (int i = 0; i < 5; ) {\n            //获取随机索引\n            int randomIndex = r.nextInt(arr.length);\n            //获取奖项\n            int prize = arr[randomIndex];\n            //判断当前的奖项是否存在，如果存在则重新抽取，如果不存在，就表示是有效奖项\n            boolean flag = contains(newArr, prize);\n            if(!flag){\n                //把当前抽取到的奖项添加到newArr当中\n                newArr[i] = prize;\n                //添加完毕之后，移动索引\n                i++;\n            }\n        }\n        //4.遍历newArr\n        for (int i = 0; i < newArr.length; i++) {\n            System.out.println(newArr[i]);\n        }\n\n\n    }\n\n    //判断prize在数组当中是否存在\n    //存在：true\n    //不存在：false\n    public static boolean contains(int[] arr,int prize){\n        for (int i = 0; i < arr.length; i++) {\n            if(arr[i] == prize){\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n}\n\n```\n\n## 解法二：\n\n```java\npackage com.itheima.test;\n\nimport java.util.Random;\n\npublic class Test10 {\n    public static void main(String[] args) {\n       /* 需求：\n        一个大V直播抽奖，奖品是现金红包，分别有{2, 588 , 888, 1000, 10000}五个奖金。\n        请使用代码模拟抽奖，打印出每个奖项，奖项的出现顺序要随机且不重复。\n        打印效果如下：（随机顺序，不一定是下面的顺序）\n            888元的奖金被抽出\n            588元的奖金被抽出\n            10000元的奖金被抽出\n            1000元的奖金被抽出\n            2元的奖金被抽出\n        */\n\n        //1.把奖池里面的所有奖项打乱顺序\n        int[] arr = {2, 588, 888, 1000, 10000};\n        Random r = new Random();\n        for (int i = 0; i < arr.length; i++) {\n            //获取随机索引\n            int randomIndex = r.nextInt(arr.length);\n            //拿着i跟随机索引randomIndex上的值进行交换\n            int temp = arr[i];\n            arr[i] = arr[randomIndex];\n            arr[randomIndex] = temp;\n        }\n        //2.遍历奖池,从0索引开始获取每一个奖项\n        for (int i = 0; i < arr.length; i++) {\n            System.out.println(arr[i]);\n        }\n\n\n    }\n}\n```\n\n\n\n\n\n# 练习九：双色球\n\n ![图片1](/tupian/图片1.png)\n\n\n\n代码示例:\n\n```java\npackage com.itheima.test;\n\nimport java.util.Random;\nimport java.util.Scanner;\n\npublic class Test11 {\n    public static void main(String[] args) {\n        //1.生成中奖号码\n        int[] arr = createNumber(); // 123456  7\n\n        System.out.println(\"=======================\");\n        for (int i = 0; i < arr.length; i++) {\n            System.out.print(arr[i] + \" \");\n        }\n\n        System.out.println(\"=======================\");\n\n\n\n        //2.用户输入彩票号码（红球 + 蓝球）//654321\n        int[] userInputArr = userInputNumber();\n\n        //3.判断用户的中奖情况\n        //红球 蓝球\n        int redCount = 0;\n        int blueCount = 0;\n\n        //判断红球\n        for (int i = 0; i < userInputArr.length - 1; i++) {\n            int redNumber = userInputArr[i];\n            for (int j = 0; j < arr.length - 1; j++) {\n                if(redNumber == arr[j]){\n                    redCount++;\n                    //如果找到了，那么后面的数字就没有必要继续比较了\n                    //跳出内循环，继续判断下一个红球号码是否中奖\n                    break;\n                }\n            }\n        }\n\n        //判断蓝球\n        int blueNumber = userInputArr[userInputArr.length-1];\n        if(blueNumber == arr[arr.length - 1]){\n            blueCount++;\n        }\n\n        //根据红球的个数以及蓝球的个数来判断中奖情况\n        if(redCount == 6 && blueCount == 1){\n            System.out.println(\"恭喜你，中奖1000万\");\n        }else if(redCount == 6 && blueCount == 0){\n            System.out.println(\"恭喜你，中奖500万\");\n        }else if(redCount == 5 && blueCount == 1){\n            System.out.println(\"恭喜你，中奖3000\");\n        }else if((redCount == 5 && blueCount == 0) ||  (redCount == 4 && blueCount == 1)){\n            System.out.println(\"恭喜你，中奖200\");\n        }else if((redCount == 4 && blueCount == 0) ||  (redCount == 3 && blueCount == 1)){\n            System.out.println(\"恭喜你，中奖10\");\n        }else if((redCount == 2 && blueCount == 1) ||  (redCount == 1 && blueCount == 1)|| (redCount == 0 && blueCount == 1)){\n            System.out.println(\"恭喜你，中奖5\");\n        }else{\n            System.out.println(\"谢谢参与，谢谢惠顾\");\n        }\n\n    }\n\n    public static int[] userInputNumber() {\n        //1.创建数组用于添加用户购买的彩票号码\n        //6个红球 1个蓝球 数组长度：7\n        int[] arr = new int[7];\n\n        //2.利用键盘录入让用输入\n        Scanner sc = new Scanner(System.in);\n        //让用户输入红球号码\n        for (int i = 0; i < 6; ) {\n            System.out.println(\"请输入第\" + (i + 1) + \"个红球号码\");\n            int redNumber = sc.nextInt();\n            //redNumber  在1~33  唯一不重复\n            if (redNumber >= 1 && redNumber <= 33) {\n                boolean flag = contains(arr, redNumber);\n                if (!flag) {\n                    //不存在\n                    //有效的，可以添加到数组当中\n                    arr[i] = redNumber;\n                    i++;\n                } else {\n                    //存在\n                    System.out.println(\"当前红球号码已经存在，请重新输入\");\n                }\n            } else {\n                System.out.println(\"当前红球号码超出范围\");\n            }\n        }\n\n        //让用户输入篮球号码\n        System.out.println(\"请输入篮球号码\");\n        //1~16\n        while (true) {\n            int blueNumber = sc.nextInt();\n            if (blueNumber >= 1 && blueNumber <= 16) {\n                arr[arr.length - 1] = blueNumber;\n                break;\n            } else {\n                System.out.println(\"当前篮球号码超出范围\");\n            }\n        }\n        return arr;\n\n    }\n\n\n    public static int[] createNumber() {\n        //1.创建数组用于添加中奖号码\n        //6个红球 1个蓝球 数组长度：7\n        int[] arr = new int[7];\n\n        //2.随机生成号码并添加到数组当中\n        //红球：不能重复的  1 2 3 4 5 6\n        //蓝球：可以跟红球号码重复 5\n\n        //生成红球号码并添加到数组当中\n        Random r = new Random();\n        for (int i = 0; i < 6; ) {\n            //获取红球号码\n            int redNumber = r.nextInt(33) + 1;\n            boolean flag = contains(arr, redNumber);\n            if (!flag) {\n                //把红球号码添加到数组当中\n                arr[i] = redNumber;\n                i++;\n            }\n        }\n\n        //生成蓝球号码并添加到数组当中\n        int blueNumber = r.nextInt(16) + 1;\n        arr[arr.length - 1] = blueNumber;\n        return arr;\n    }\n\n    //用于判断数组在数组中是否存在\n    public static boolean contains(int[] arr, int number) {\n        for (int i = 0; i < arr.length; i++) {\n            if (arr[i] == number) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n```\n\n","slug":"day07-综合练习","published":1,"updated":"2024-12-13T01:23:44.001Z","_id":"cm4ld1o8c001pqsto99ytglyp","comments":1,"layout":"post","content":"<h1 id=\"练习一：飞机票\"><a href=\"#练习一：飞机票\" class=\"headerlink\" title=\"练习一：飞机票\"></a>练习一：飞机票</h1><p>需求:</p>\n<p>​\t机票价格按照淡季旺季、头等舱和经济舱收费、输入机票原价、月份和头等舱或经济舱。</p>\n<p>​\t按照如下规则计算机票价格：旺季（5-10月）头等舱9折，经济舱8.5折，淡季（11月到来年4月）头等舱7折，经济舱6.5折。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test1</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">/* 机票价格按照淡季旺季、头等舱和经济舱收费、输入机票原价、月份和头等舱或经济舱。</span></span><br><span class=\"line\"><span class=\"comment\">        按照如下规则计算机票价格：旺季（5-10月）头等舱9折，经济舱8.5折，淡季（11月到来年4月）头等舱7折，经济舱6.5折。*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//分析：</span></span><br><span class=\"line\">        <span class=\"comment\">//1.键盘录入机票原价、月份、头等舱或经济舱</span></span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入机票的原价&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">ticket</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入当前的月份&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">month</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入当前购买的舱位 0 头等舱 1 经济舱&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">seat</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">        <span class=\"comment\">//2.先判断月份是旺季还是淡季</span></span><br><span class=\"line\">        <span class=\"comment\">//ctrl + alt + M 自动抽取方法</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (month &gt;= <span class=\"number\">5</span> &amp;&amp; month &lt;= <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//旺季 //3.继续判断当前机票是经济舱还是头等舱</span></span><br><span class=\"line\">            <span class=\"comment\">//ticket = getPrice(ticket, seat, 0.9, 0.85);</span></span><br><span class=\"line\">            ticket = getTicket(ticket, seat, <span class=\"number\">0.9</span>, <span class=\"number\">0.85</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((month &gt;= <span class=\"number\">1</span> &amp;&amp; month &lt;= <span class=\"number\">4</span>) || (month &gt;= <span class=\"number\">11</span> &amp;&amp; month &lt;= <span class=\"number\">12</span>)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//淡季</span></span><br><span class=\"line\">            <span class=\"comment\">//ticket = getPrice(ticket, seat, 0.7, 0.65);</span></span><br><span class=\"line\">            ticket = getTicket(ticket, seat, <span class=\"number\">0.7</span>, <span class=\"number\">0.65</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//表示键盘录入的月份是一个非法数据</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;键盘录入的月份不合法&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(ticket);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">getTicket</span><span class=\"params\">(<span class=\"type\">int</span> ticket, <span class=\"type\">int</span> seat, <span class=\"type\">double</span> v, <span class=\"type\">double</span> v2)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (seat == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//头等舱</span></span><br><span class=\"line\">            ticket = (<span class=\"type\">int</span>) (ticket * v);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (seat == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//经济舱</span></span><br><span class=\"line\">            ticket = (<span class=\"type\">int</span>) (ticket * v2);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;没有这个舱位&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ticket;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1.我要干嘛？根据舱位和折扣来计算最终的票价</span></span><br><span class=\"line\">    <span class=\"comment\">//2.我干这件事，需要什么才能完成？原价 舱位 头等舱的折扣 经济舱的折扣</span></span><br><span class=\"line\">    <span class=\"comment\">//3.方法的调用处是否需要继续使用这个结果  需要</span></span><br><span class=\"line\">    <span class=\"comment\">/*  public static int getPrice(int ticket, int seat, double v0, double v1) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">        if (seat == 0) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">            //头等舱</span></span><br><span class=\"line\"><span class=\"comment\">            ticket = (int) (ticket * v0);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125; else if (seat == 1) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">            //经济舱</span></span><br><span class=\"line\"><span class=\"comment\">            ticket = (int) (ticket * v1);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125; else &#123;</span></span><br><span class=\"line\"><span class=\"comment\">            System.out.println(&quot;没有这个舱位&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">        return ticket;</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;*/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"练习二：打印素数\"><a href=\"#练习二：打印素数\" class=\"headerlink\" title=\"练习二：打印素数\"></a>练习二：打印素数</h1><p>​\t判断101~200之间有多少个素数，并输出所有素数。</p>\n<p>备注：素数就是质数</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test2</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//判断 101 ~ 200 之间有多少个素数，并打印所有素数</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//思路一： 2 ~ 99</span></span><br><span class=\"line\">        <span class=\"comment\">//定义变量i ，赋值100</span></span><br><span class=\"line\">        <span class=\"comment\">//判断i是否为质数</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//定义一个变量用来统计有多少个质数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//外循环：遍历101~200这个范围，依次得到这个范围之内的每一个数字</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">101</span>; i &lt;= <span class=\"number\">200</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//i 依次表示循环中的每一个数字</span></span><br><span class=\"line\">            <span class=\"comment\">//继续判断i是否为一个质数</span></span><br><span class=\"line\">            <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"comment\">//内循环:判断当前数字是否为一个质数。</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">2</span>; j &lt; i; j++) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//j 表示2~99之间的每一个数字</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(i % j == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                    flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    <span class=\"comment\">//跳出单层循环，内循环</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(flag)&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;当前数字&quot;</span>+i+<span class=\"string\">&quot;是质数&quot;</span>);</span><br><span class=\"line\">                count++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;一共有&quot;</span> + count + <span class=\"string\">&quot;个质数&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/* int i = 7;</span></span><br><span class=\"line\"><span class=\"comment\">        boolean flag = true;</span></span><br><span class=\"line\"><span class=\"comment\">        for (int j = 2; j &lt; i; j++) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">            //j 表示2~99之间的每一个数字</span></span><br><span class=\"line\"><span class=\"comment\">            if(i % j == 0)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">                flag = false;</span></span><br><span class=\"line\"><span class=\"comment\">                break;</span></span><br><span class=\"line\"><span class=\"comment\">            &#125;</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">        if(flag)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">            System.out.println(&quot;当前数字是质数&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;else&#123;</span></span><br><span class=\"line\"><span class=\"comment\">            System.out.println(&quot;当前数字不是一个质数&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;*/</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"练习三：验证码\"><a href=\"#练习三：验证码\" class=\"headerlink\" title=\"练习三：验证码\"></a>练习三：验证码</h1><p>需求：</p>\n<p>​\t定义方法实现随机产生一个5位的验证码</p>\n<p>验证码格式：</p>\n<p>​\t长度为5</p>\n<p>​\t前四位是大写字母或者小写字母</p>\n<p>​\t最后一位是数字</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test3</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">/*   需求：</span></span><br><span class=\"line\"><span class=\"comment\">            定义方法实现随机产生一个5位的验证码</span></span><br><span class=\"line\"><span class=\"comment\">            验证码格式：</span></span><br><span class=\"line\"><span class=\"comment\">            长度为5</span></span><br><span class=\"line\"><span class=\"comment\">            前四位是大写字母或者小写字母</span></span><br><span class=\"line\"><span class=\"comment\">            最后一位是数字</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//方法：</span></span><br><span class=\"line\">        <span class=\"comment\">//在以后如果我们要在一堆没有什么规律的数据中随机抽取</span></span><br><span class=\"line\">        <span class=\"comment\">//可以先把这些数据放到数组当中</span></span><br><span class=\"line\">        <span class=\"comment\">//再随机抽取一个索引</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//分析：</span></span><br><span class=\"line\">        <span class=\"comment\">//1.大写字母和小写字母都放到数组当中</span></span><br><span class=\"line\">        <span class=\"type\">char</span>[] chs = <span class=\"keyword\">new</span> <span class=\"title class_\">char</span>[<span class=\"number\">52</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; chs.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//ASCII码表</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i &lt;= <span class=\"number\">25</span>)&#123;</span><br><span class=\"line\">                <span class=\"comment\">//添加小写字母</span></span><br><span class=\"line\">                chs[i] = (<span class=\"type\">char</span>)(<span class=\"number\">97</span> + i);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;<span class=\"comment\">//27</span></span><br><span class=\"line\">                <span class=\"comment\">//添加大写字母</span></span><br><span class=\"line\">                <span class=\"comment\">// A --- 65</span></span><br><span class=\"line\">                chs[i] = (<span class=\"type\">char</span>)(<span class=\"number\">65</span> + i - <span class=\"number\">26</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//定义一个字符串类型的变量，用来记录最终的结果</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.随机抽取4次</span></span><br><span class=\"line\">        <span class=\"comment\">//随机抽取数组中的索引</span></span><br><span class=\"line\">        <span class=\"type\">Random</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">randomIndex</span> <span class=\"operator\">=</span> r.nextInt(chs.length);</span><br><span class=\"line\">            <span class=\"comment\">//利用随机索引，获取对应的元素</span></span><br><span class=\"line\">            <span class=\"comment\">//System.out.println(chs[randomIndex]);</span></span><br><span class=\"line\">            result = result + chs[randomIndex];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(result);</span></span><br><span class=\"line\">        <span class=\"comment\">//3.随机抽取一个数字0~9</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> r.nextInt(<span class=\"number\">10</span>);</span><br><span class=\"line\">        <span class=\"comment\">//生成最终的结果</span></span><br><span class=\"line\">        result = result + number;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//打印最终结果</span></span><br><span class=\"line\">        System.out.println(result);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"练习四：复制数组\"><a href=\"#练习四：复制数组\" class=\"headerlink\" title=\"练习四：复制数组\"></a>练习四：复制数组</h1><p>需求：</p>\n<p>​\t把一个数组中的元素复制到另一个新数组中去。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test4</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">/* 需求：</span></span><br><span class=\"line\"><span class=\"comment\">        把一个数组中的元素复制到另一个新数组中去。*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//分析：</span></span><br><span class=\"line\">        <span class=\"comment\">//1.定义一个老数组并存储一些元素</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">        <span class=\"comment\">//2.定义一个新数组的长度跟老数组一致</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] newArr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[arr.length];</span><br><span class=\"line\">        <span class=\"comment\">//3.遍历老数组，得到老数组中的每一个元素，依次存入到新数组当中</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//i 表示老数组中的索引。新数组中的每一个索引</span></span><br><span class=\"line\">            <span class=\"comment\">//arr[i]  表示老数组中的元素</span></span><br><span class=\"line\">            newArr[i] = arr[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4.新数组中已经存满元素了</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; newArr.length; i++) &#123;</span><br><span class=\"line\">            System.out.println(newArr[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"练习五：评委打分\"><a href=\"#练习五：评委打分\" class=\"headerlink\" title=\"练习五：评委打分\"></a>练习五：评委打分</h1><p>需求 :  </p>\n<p>​\t在唱歌比赛中，有6名评委给选手打分，分数范围是[0 - 100]之间的整数。选手的最后得分为：去掉最高分、最低分后的4个评委的平均分，请完成上述过程并计算出选手的得分。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test5</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//在唱歌比赛中，有6名评委给选手打分，分数范围是[0 - 100]之间的整数。</span></span><br><span class=\"line\">        <span class=\"comment\">// 选手的最后得分为：去掉最高分、最低分后的4个评委的平均分，请完成上述过程并计算出选手的得分。</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//分析：</span></span><br><span class=\"line\">        <span class=\"comment\">//1.定义一个数组，用来存储6名评委的打分（0~100）</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] scoreArr = getScores();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; scoreArr.length; i++) &#123;</span><br><span class=\"line\">            System.out.println(scoreArr[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//2.求出数组中的最大值</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">max</span> <span class=\"operator\">=</span> getMax(scoreArr);</span><br><span class=\"line\">        <span class=\"comment\">//3.求出数组中的最小值</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">min</span> <span class=\"operator\">=</span> getMin(scoreArr);</span><br><span class=\"line\">        <span class=\"comment\">//4.求出数组中6个分数的总和</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> getSum(scoreArr);</span><br><span class=\"line\">        <span class=\"comment\">//5.（总和 - 最大值 - 最小值 ）/4</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">avg</span> <span class=\"operator\">=</span>  (sum - max - min)/(scoreArr.length - <span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"comment\">//6.打印结果</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;选手的最终得分为：&quot;</span> + avg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">getSum</span><span class=\"params\">(<span class=\"type\">int</span>[] scoreArr)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; scoreArr.length; i++) &#123;</span><br><span class=\"line\">            sum = sum + scoreArr[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>  sum;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//求数组的最大值</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">getMax</span><span class=\"params\">(<span class=\"type\">int</span>[] scoreArr)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">max</span> <span class=\"operator\">=</span> scoreArr[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt; scoreArr.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(scoreArr[i] &gt; max)&#123;</span><br><span class=\"line\">                max = scoreArr[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//求数组的最小值</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">getMin</span><span class=\"params\">(<span class=\"type\">int</span>[] scoreArr)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">min</span> <span class=\"operator\">=</span> scoreArr[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt; scoreArr.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(scoreArr[i] &lt; min)&#123;</span><br><span class=\"line\">                min = scoreArr[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> min;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1.我要干嘛？定义一个数组，用来存储6名评委的打分（0~100）</span></span><br><span class=\"line\">    <span class=\"comment\">//2.我需要什么？都不需要</span></span><br><span class=\"line\">    <span class=\"comment\">//3.干完了这件事情，是否需要返回？必须返回</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span>[] getScores()&#123;</span><br><span class=\"line\">        <span class=\"comment\">//定义数组</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] scores = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">6</span>];</span><br><span class=\"line\">        <span class=\"comment\">//使用键盘录入的形式，输入分数：0~100</span></span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; scores.length; ) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;请输入评委的打分&quot;</span>);</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">score</span> <span class=\"operator\">=</span> sc.nextInt();<span class=\"comment\">//100</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(score &gt;=<span class=\"number\">0</span> &amp;&amp; score&lt;= <span class=\"number\">100</span>)&#123;</span><br><span class=\"line\">                scores[i] = score;</span><br><span class=\"line\">                i++;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;成绩超出了范围,继续录入，当前的i为：&quot;</span> + i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>  scores;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"练习六：数字加密\"><a href=\"#练习六：数字加密\" class=\"headerlink\" title=\"练习六：数字加密\"></a>练习六：数字加密</h1><p>需求：</p>\n<p>​\t某系统的数字密码（大于0），比如1983，采用加密方式进行传输。</p>\n<p>规则如下：</p>\n<p>​\t先得到每位数，然后每位数都加上5 , 再对10求余，最后将所有数字反转，得到一串新数。</p>\n<p>举例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"number\">1</span>\t<span class=\"number\">9</span>\t<span class=\"number\">8</span>\t<span class=\"number\">3</span></span><br><span class=\"line\">+<span class=\"number\">5</span>\t\t<span class=\"number\">6</span>   <span class=\"number\">14</span>  <span class=\"number\">13</span>  <span class=\"number\">8</span></span><br><span class=\"line\">%<span class=\"number\">10</span>\t\t<span class=\"number\">6</span>   <span class=\"number\">4</span>   <span class=\"number\">3</span>   <span class=\"number\">8</span></span><br><span class=\"line\">反转\t   <span class=\"number\">8</span>   <span class=\"number\">3</span>   <span class=\"number\">4</span>   <span class=\"number\">6</span></span><br><span class=\"line\">加密后的结果就是：<span class=\"number\">8346</span></span><br></pre></td></tr></table></figure>\n\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test6</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">        某系统的数字密码（大于0）。比如1983，采用加密方式进行传输，</span></span><br><span class=\"line\"><span class=\"comment\">        规则如下：</span></span><br><span class=\"line\"><span class=\"comment\">            每位数加上5</span></span><br><span class=\"line\"><span class=\"comment\">            再对10求余，</span></span><br><span class=\"line\"><span class=\"comment\">            最后将所有数字反转，</span></span><br><span class=\"line\"><span class=\"comment\">            得到一串新数。</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//分析：</span></span><br><span class=\"line\">        <span class=\"comment\">//1.把整数里面的每一位放到数组当中</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">8</span>, <span class=\"number\">3</span>&#125;;</span><br><span class=\"line\">        <span class=\"comment\">//2.加密</span></span><br><span class=\"line\">        <span class=\"comment\">//每位数加上5</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            arr[i] = arr[i] + <span class=\"number\">5</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//再对10求余，</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            arr[i] = arr[i] % <span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//将所有数字反转</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>, j = arr.length - <span class=\"number\">1</span>; i &lt; j; i++, j--) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> arr[i];</span><br><span class=\"line\">            arr[i] = arr[j];</span><br><span class=\"line\">            arr[j] = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//8 3 4 6 --&gt; 8346</span></span><br><span class=\"line\">        <span class=\"comment\">//3.把数组里面的每一个数字进行拼接，变成加密之后的结果</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            number = number * <span class=\"number\">10</span> + arr[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(number);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"练习六扩展：\"><a href=\"#练习六扩展：\" class=\"headerlink\" title=\"练习六扩展：\"></a>练习六扩展：</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test7</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//需求：</span></span><br><span class=\"line\">        <span class=\"comment\">//把整数上的每一位都添加到数组当中</span></span><br><span class=\"line\">        <span class=\"comment\">//反向推导</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1.计算出数组的长度</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> <span class=\"number\">12345</span>;</span><br><span class=\"line\">        <span class=\"comment\">//定义一个变量临时记录number的值，就是为了第三步的时候再次使用</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> number;</span><br><span class=\"line\">        <span class=\"comment\">//定义一个变量进行统计</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(number != <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//每一次循环就去掉右边的一个数字</span></span><br><span class=\"line\">            number = number / <span class=\"number\">10</span>;</span><br><span class=\"line\">            <span class=\"comment\">//去掉一位计数器就自增一次。</span></span><br><span class=\"line\">            count++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//2.定义数组</span></span><br><span class=\"line\">        <span class=\"comment\">//动态初始化</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[count];</span><br><span class=\"line\">        <span class=\"comment\">//3.把整数上的每一位都添加到数组当中</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">index</span> <span class=\"operator\">=</span> arr.length -<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(temp != <span class=\"number\">0</span>)&#123;<span class=\"comment\">//12345</span></span><br><span class=\"line\">            <span class=\"comment\">//获取temp里面的每一位数组</span></span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">ge</span> <span class=\"operator\">=</span> temp % <span class=\"number\">10</span>;</span><br><span class=\"line\">            <span class=\"comment\">//再去掉右边的那位数字</span></span><br><span class=\"line\">            temp = temp / <span class=\"number\">10</span>;</span><br><span class=\"line\">            <span class=\"comment\">//把当前获取到的个位添加到数组当中</span></span><br><span class=\"line\">            arr[index] = ge;</span><br><span class=\"line\">            index--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//验证结果  1  2  3  4 5</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            System.out.print(arr[i] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"练习七：数字解密\"><a href=\"#练习七：数字解密\" class=\"headerlink\" title=\"练习七：数字解密\"></a>练习七：数字解密</h1><p>把上一题加密之后的数据进行解密</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test8</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">/*某系统的数字密码（大于0）。比如1983，采用加密方式进行传输，</span></span><br><span class=\"line\"><span class=\"comment\">        规则如下：</span></span><br><span class=\"line\"><span class=\"comment\">            每位数加上5</span></span><br><span class=\"line\"><span class=\"comment\">            再对10求余，</span></span><br><span class=\"line\"><span class=\"comment\">            最后将所有数字反转，</span></span><br><span class=\"line\"><span class=\"comment\">            得到一串新数。</span></span><br><span class=\"line\"><span class=\"comment\">            按照以上规则进行解密：</span></span><br><span class=\"line\"><span class=\"comment\">            比如1983加密之后变成8346，解密之后变成1983</span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1.定义数组记录解密之后的结果</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">8</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>&#125;;</span><br><span class=\"line\">        <span class=\"comment\">//2.反转</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>, j = arr.length - <span class=\"number\">1</span>; i &lt; j; i++, j--) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> arr[i];</span><br><span class=\"line\">            arr[i] = arr[j];</span><br><span class=\"line\">            arr[j] = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//3.由于加密是通过对10取余的方式进行获取的</span></span><br><span class=\"line\">        <span class=\"comment\">//所以在解密的时候就需要判断，0~4之间+10  5~9数字不变</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arr[i] &gt;= <span class=\"number\">0</span> &amp;&amp; arr[i] &lt;= <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">                arr[i] = arr[i] + <span class=\"number\">10</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//4.每一位减5</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            arr[i] = arr[i] - <span class=\"number\">5</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//5.获取数组里面的每一位数字拼接成最终的结果</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            number = number * <span class=\"number\">10</span> + arr[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(number);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"练习八：抽奖\"><a href=\"#练习八：抽奖\" class=\"headerlink\" title=\"练习八：抽奖\"></a>练习八：抽奖</h1><p>需求：</p>\n<p>​\t一个大V直播抽奖，奖品是现金红包，分别有{2, 588 , 888, 1000, 10000}五个奖金。请使用代码模拟抽奖，打印出每个奖项，奖项的出现顺序要随机且不重复。打印效果如下：（随机顺序，不一定是下面的顺序）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">888</span>元的奖金被抽出</span><br><span class=\"line\"><span class=\"number\">588</span>元的奖金被抽出</span><br><span class=\"line\"><span class=\"number\">10000</span>元的奖金被抽出</span><br><span class=\"line\"><span class=\"number\">1000</span>元的奖金被抽出</span><br><span class=\"line\"><span class=\"number\">2</span>元的奖金被抽出</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"解法一\"><a href=\"#解法一\" class=\"headerlink\" title=\"解法一:\"></a>解法一:</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test9</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">/* 需求：</span></span><br><span class=\"line\"><span class=\"comment\">        一个大V直播抽奖，奖品是现金红包，分别有&#123;2, 588 , 888, 1000, 10000&#125;五个奖金。</span></span><br><span class=\"line\"><span class=\"comment\">        请使用代码模拟抽奖，打印出每个奖项，奖项的出现顺序要随机且不重复。</span></span><br><span class=\"line\"><span class=\"comment\">        打印效果如下：（随机顺序，不一定是下面的顺序）</span></span><br><span class=\"line\"><span class=\"comment\">            888元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">            588元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">            10000元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">            1000元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">            2元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//分析：</span></span><br><span class=\"line\">        <span class=\"comment\">//1.定义数组表示奖池</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">2</span>, <span class=\"number\">588</span>, <span class=\"number\">888</span>, <span class=\"number\">1000</span>, <span class=\"number\">10000</span>&#125;;</span><br><span class=\"line\">        <span class=\"comment\">//2.定义新数组用于存储抽奖的结果</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] newArr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[arr.length];</span><br><span class=\"line\">        <span class=\"comment\">//3.抽奖</span></span><br><span class=\"line\">        <span class=\"type\">Random</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\">        <span class=\"comment\">//因为有5个奖项，所以这里要循环5次</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; ) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//获取随机索引</span></span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">randomIndex</span> <span class=\"operator\">=</span> r.nextInt(arr.length);</span><br><span class=\"line\">            <span class=\"comment\">//获取奖项</span></span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">prize</span> <span class=\"operator\">=</span> arr[randomIndex];</span><br><span class=\"line\">            <span class=\"comment\">//判断当前的奖项是否存在，如果存在则重新抽取，如果不存在，就表示是有效奖项</span></span><br><span class=\"line\">            <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> contains(newArr, prize);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!flag)&#123;</span><br><span class=\"line\">                <span class=\"comment\">//把当前抽取到的奖项添加到newArr当中</span></span><br><span class=\"line\">                newArr[i] = prize;</span><br><span class=\"line\">                <span class=\"comment\">//添加完毕之后，移动索引</span></span><br><span class=\"line\">                i++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//4.遍历newArr</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; newArr.length; i++) &#123;</span><br><span class=\"line\">            System.out.println(newArr[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//判断prize在数组当中是否存在</span></span><br><span class=\"line\">    <span class=\"comment\">//存在：true</span></span><br><span class=\"line\">    <span class=\"comment\">//不存在：false</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">contains</span><span class=\"params\">(<span class=\"type\">int</span>[] arr,<span class=\"type\">int</span> prize)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(arr[i] == prize)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"解法二：\"><a href=\"#解法二：\" class=\"headerlink\" title=\"解法二：\"></a>解法二：</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test10</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">       <span class=\"comment\">/* 需求：</span></span><br><span class=\"line\"><span class=\"comment\">        一个大V直播抽奖，奖品是现金红包，分别有&#123;2, 588 , 888, 1000, 10000&#125;五个奖金。</span></span><br><span class=\"line\"><span class=\"comment\">        请使用代码模拟抽奖，打印出每个奖项，奖项的出现顺序要随机且不重复。</span></span><br><span class=\"line\"><span class=\"comment\">        打印效果如下：（随机顺序，不一定是下面的顺序）</span></span><br><span class=\"line\"><span class=\"comment\">            888元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">            588元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">            10000元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">            1000元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">            2元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1.把奖池里面的所有奖项打乱顺序</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">2</span>, <span class=\"number\">588</span>, <span class=\"number\">888</span>, <span class=\"number\">1000</span>, <span class=\"number\">10000</span>&#125;;</span><br><span class=\"line\">        <span class=\"type\">Random</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//获取随机索引</span></span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">randomIndex</span> <span class=\"operator\">=</span> r.nextInt(arr.length);</span><br><span class=\"line\">            <span class=\"comment\">//拿着i跟随机索引randomIndex上的值进行交换</span></span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> arr[i];</span><br><span class=\"line\">            arr[i] = arr[randomIndex];</span><br><span class=\"line\">            arr[randomIndex] = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//2.遍历奖池,从0索引开始获取每一个奖项</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            System.out.println(arr[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"练习九：双色球\"><a href=\"#练习九：双色球\" class=\"headerlink\" title=\"练习九：双色球\"></a>练习九：双色球</h1><p> <img src=\"/tupian/%E5%9B%BE%E7%89%871.png\" alt=\"图片1\"></p>\n<p>代码示例:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test11</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.生成中奖号码</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = createNumber(); <span class=\"comment\">// 123456  7</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=======================&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            System.out.print(arr[i] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=======================&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.用户输入彩票号码（红球 + 蓝球）//654321</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] userInputArr = userInputNumber();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.判断用户的中奖情况</span></span><br><span class=\"line\">        <span class=\"comment\">//红球 蓝球</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">redCount</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">blueCount</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//判断红球</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; userInputArr.length - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">redNumber</span> <span class=\"operator\">=</span> userInputArr[i];</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; arr.length - <span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(redNumber == arr[j])&#123;</span><br><span class=\"line\">                    redCount++;</span><br><span class=\"line\">                    <span class=\"comment\">//如果找到了，那么后面的数字就没有必要继续比较了</span></span><br><span class=\"line\">                    <span class=\"comment\">//跳出内循环，继续判断下一个红球号码是否中奖</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//判断蓝球</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">blueNumber</span> <span class=\"operator\">=</span> userInputArr[userInputArr.length-<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(blueNumber == arr[arr.length - <span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">            blueCount++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//根据红球的个数以及蓝球的个数来判断中奖情况</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(redCount == <span class=\"number\">6</span> &amp;&amp; blueCount == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;恭喜你，中奖1000万&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(redCount == <span class=\"number\">6</span> &amp;&amp; blueCount == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;恭喜你，中奖500万&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(redCount == <span class=\"number\">5</span> &amp;&amp; blueCount == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;恭喜你，中奖3000&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>((redCount == <span class=\"number\">5</span> &amp;&amp; blueCount == <span class=\"number\">0</span>) ||  (redCount == <span class=\"number\">4</span> &amp;&amp; blueCount == <span class=\"number\">1</span>))&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;恭喜你，中奖200&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>((redCount == <span class=\"number\">4</span> &amp;&amp; blueCount == <span class=\"number\">0</span>) ||  (redCount == <span class=\"number\">3</span> &amp;&amp; blueCount == <span class=\"number\">1</span>))&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;恭喜你，中奖10&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>((redCount == <span class=\"number\">2</span> &amp;&amp; blueCount == <span class=\"number\">1</span>) ||  (redCount == <span class=\"number\">1</span> &amp;&amp; blueCount == <span class=\"number\">1</span>)|| (redCount == <span class=\"number\">0</span> &amp;&amp; blueCount == <span class=\"number\">1</span>))&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;恭喜你，中奖5&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;谢谢参与，谢谢惠顾&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span>[] userInputNumber() &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.创建数组用于添加用户购买的彩票号码</span></span><br><span class=\"line\">        <span class=\"comment\">//6个红球 1个蓝球 数组长度：7</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">7</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.利用键盘录入让用输入</span></span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        <span class=\"comment\">//让用户输入红球号码</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; ) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;请输入第&quot;</span> + (i + <span class=\"number\">1</span>) + <span class=\"string\">&quot;个红球号码&quot;</span>);</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">redNumber</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">            <span class=\"comment\">//redNumber  在1~33  唯一不重复</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (redNumber &gt;= <span class=\"number\">1</span> &amp;&amp; redNumber &lt;= <span class=\"number\">33</span>) &#123;</span><br><span class=\"line\">                <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> contains(arr, redNumber);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!flag) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//不存在</span></span><br><span class=\"line\">                    <span class=\"comment\">//有效的，可以添加到数组当中</span></span><br><span class=\"line\">                    arr[i] = redNumber;</span><br><span class=\"line\">                    i++;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//存在</span></span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;当前红球号码已经存在，请重新输入&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;当前红球号码超出范围&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//让用户输入篮球号码</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入篮球号码&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//1~16</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">blueNumber</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (blueNumber &gt;= <span class=\"number\">1</span> &amp;&amp; blueNumber &lt;= <span class=\"number\">16</span>) &#123;</span><br><span class=\"line\">                arr[arr.length - <span class=\"number\">1</span>] = blueNumber;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;当前篮球号码超出范围&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span>[] createNumber() &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.创建数组用于添加中奖号码</span></span><br><span class=\"line\">        <span class=\"comment\">//6个红球 1个蓝球 数组长度：7</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">7</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.随机生成号码并添加到数组当中</span></span><br><span class=\"line\">        <span class=\"comment\">//红球：不能重复的  1 2 3 4 5 6</span></span><br><span class=\"line\">        <span class=\"comment\">//蓝球：可以跟红球号码重复 5</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//生成红球号码并添加到数组当中</span></span><br><span class=\"line\">        <span class=\"type\">Random</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; ) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//获取红球号码</span></span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">redNumber</span> <span class=\"operator\">=</span> r.nextInt(<span class=\"number\">33</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> contains(arr, redNumber);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!flag) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//把红球号码添加到数组当中</span></span><br><span class=\"line\">                arr[i] = redNumber;</span><br><span class=\"line\">                i++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//生成蓝球号码并添加到数组当中</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">blueNumber</span> <span class=\"operator\">=</span> r.nextInt(<span class=\"number\">16</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">        arr[arr.length - <span class=\"number\">1</span>] = blueNumber;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//用于判断数组在数组中是否存在</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">contains</span><span class=\"params\">(<span class=\"type\">int</span>[] arr, <span class=\"type\">int</span> number)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arr[i] == number) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","length":13833,"excerpt":"","more":"<h1 id=\"练习一：飞机票\"><a href=\"#练习一：飞机票\" class=\"headerlink\" title=\"练习一：飞机票\"></a>练习一：飞机票</h1><p>需求:</p>\n<p>​\t机票价格按照淡季旺季、头等舱和经济舱收费、输入机票原价、月份和头等舱或经济舱。</p>\n<p>​\t按照如下规则计算机票价格：旺季（5-10月）头等舱9折，经济舱8.5折，淡季（11月到来年4月）头等舱7折，经济舱6.5折。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test1</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">/* 机票价格按照淡季旺季、头等舱和经济舱收费、输入机票原价、月份和头等舱或经济舱。</span></span><br><span class=\"line\"><span class=\"comment\">        按照如下规则计算机票价格：旺季（5-10月）头等舱9折，经济舱8.5折，淡季（11月到来年4月）头等舱7折，经济舱6.5折。*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//分析：</span></span><br><span class=\"line\">        <span class=\"comment\">//1.键盘录入机票原价、月份、头等舱或经济舱</span></span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入机票的原价&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">ticket</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入当前的月份&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">month</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入当前购买的舱位 0 头等舱 1 经济舱&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">seat</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">        <span class=\"comment\">//2.先判断月份是旺季还是淡季</span></span><br><span class=\"line\">        <span class=\"comment\">//ctrl + alt + M 自动抽取方法</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (month &gt;= <span class=\"number\">5</span> &amp;&amp; month &lt;= <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//旺季 //3.继续判断当前机票是经济舱还是头等舱</span></span><br><span class=\"line\">            <span class=\"comment\">//ticket = getPrice(ticket, seat, 0.9, 0.85);</span></span><br><span class=\"line\">            ticket = getTicket(ticket, seat, <span class=\"number\">0.9</span>, <span class=\"number\">0.85</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((month &gt;= <span class=\"number\">1</span> &amp;&amp; month &lt;= <span class=\"number\">4</span>) || (month &gt;= <span class=\"number\">11</span> &amp;&amp; month &lt;= <span class=\"number\">12</span>)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//淡季</span></span><br><span class=\"line\">            <span class=\"comment\">//ticket = getPrice(ticket, seat, 0.7, 0.65);</span></span><br><span class=\"line\">            ticket = getTicket(ticket, seat, <span class=\"number\">0.7</span>, <span class=\"number\">0.65</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//表示键盘录入的月份是一个非法数据</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;键盘录入的月份不合法&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(ticket);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">getTicket</span><span class=\"params\">(<span class=\"type\">int</span> ticket, <span class=\"type\">int</span> seat, <span class=\"type\">double</span> v, <span class=\"type\">double</span> v2)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (seat == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//头等舱</span></span><br><span class=\"line\">            ticket = (<span class=\"type\">int</span>) (ticket * v);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (seat == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//经济舱</span></span><br><span class=\"line\">            ticket = (<span class=\"type\">int</span>) (ticket * v2);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;没有这个舱位&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ticket;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1.我要干嘛？根据舱位和折扣来计算最终的票价</span></span><br><span class=\"line\">    <span class=\"comment\">//2.我干这件事，需要什么才能完成？原价 舱位 头等舱的折扣 经济舱的折扣</span></span><br><span class=\"line\">    <span class=\"comment\">//3.方法的调用处是否需要继续使用这个结果  需要</span></span><br><span class=\"line\">    <span class=\"comment\">/*  public static int getPrice(int ticket, int seat, double v0, double v1) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">        if (seat == 0) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">            //头等舱</span></span><br><span class=\"line\"><span class=\"comment\">            ticket = (int) (ticket * v0);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125; else if (seat == 1) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">            //经济舱</span></span><br><span class=\"line\"><span class=\"comment\">            ticket = (int) (ticket * v1);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125; else &#123;</span></span><br><span class=\"line\"><span class=\"comment\">            System.out.println(&quot;没有这个舱位&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">        return ticket;</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;*/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"练习二：打印素数\"><a href=\"#练习二：打印素数\" class=\"headerlink\" title=\"练习二：打印素数\"></a>练习二：打印素数</h1><p>​\t判断101~200之间有多少个素数，并输出所有素数。</p>\n<p>备注：素数就是质数</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test2</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//判断 101 ~ 200 之间有多少个素数，并打印所有素数</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//思路一： 2 ~ 99</span></span><br><span class=\"line\">        <span class=\"comment\">//定义变量i ，赋值100</span></span><br><span class=\"line\">        <span class=\"comment\">//判断i是否为质数</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//定义一个变量用来统计有多少个质数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//外循环：遍历101~200这个范围，依次得到这个范围之内的每一个数字</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">101</span>; i &lt;= <span class=\"number\">200</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//i 依次表示循环中的每一个数字</span></span><br><span class=\"line\">            <span class=\"comment\">//继续判断i是否为一个质数</span></span><br><span class=\"line\">            <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"comment\">//内循环:判断当前数字是否为一个质数。</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">2</span>; j &lt; i; j++) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//j 表示2~99之间的每一个数字</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(i % j == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                    flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    <span class=\"comment\">//跳出单层循环，内循环</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(flag)&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;当前数字&quot;</span>+i+<span class=\"string\">&quot;是质数&quot;</span>);</span><br><span class=\"line\">                count++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;一共有&quot;</span> + count + <span class=\"string\">&quot;个质数&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/* int i = 7;</span></span><br><span class=\"line\"><span class=\"comment\">        boolean flag = true;</span></span><br><span class=\"line\"><span class=\"comment\">        for (int j = 2; j &lt; i; j++) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">            //j 表示2~99之间的每一个数字</span></span><br><span class=\"line\"><span class=\"comment\">            if(i % j == 0)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">                flag = false;</span></span><br><span class=\"line\"><span class=\"comment\">                break;</span></span><br><span class=\"line\"><span class=\"comment\">            &#125;</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">        if(flag)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">            System.out.println(&quot;当前数字是质数&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;else&#123;</span></span><br><span class=\"line\"><span class=\"comment\">            System.out.println(&quot;当前数字不是一个质数&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;*/</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"练习三：验证码\"><a href=\"#练习三：验证码\" class=\"headerlink\" title=\"练习三：验证码\"></a>练习三：验证码</h1><p>需求：</p>\n<p>​\t定义方法实现随机产生一个5位的验证码</p>\n<p>验证码格式：</p>\n<p>​\t长度为5</p>\n<p>​\t前四位是大写字母或者小写字母</p>\n<p>​\t最后一位是数字</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test3</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">/*   需求：</span></span><br><span class=\"line\"><span class=\"comment\">            定义方法实现随机产生一个5位的验证码</span></span><br><span class=\"line\"><span class=\"comment\">            验证码格式：</span></span><br><span class=\"line\"><span class=\"comment\">            长度为5</span></span><br><span class=\"line\"><span class=\"comment\">            前四位是大写字母或者小写字母</span></span><br><span class=\"line\"><span class=\"comment\">            最后一位是数字</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//方法：</span></span><br><span class=\"line\">        <span class=\"comment\">//在以后如果我们要在一堆没有什么规律的数据中随机抽取</span></span><br><span class=\"line\">        <span class=\"comment\">//可以先把这些数据放到数组当中</span></span><br><span class=\"line\">        <span class=\"comment\">//再随机抽取一个索引</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//分析：</span></span><br><span class=\"line\">        <span class=\"comment\">//1.大写字母和小写字母都放到数组当中</span></span><br><span class=\"line\">        <span class=\"type\">char</span>[] chs = <span class=\"keyword\">new</span> <span class=\"title class_\">char</span>[<span class=\"number\">52</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; chs.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//ASCII码表</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i &lt;= <span class=\"number\">25</span>)&#123;</span><br><span class=\"line\">                <span class=\"comment\">//添加小写字母</span></span><br><span class=\"line\">                chs[i] = (<span class=\"type\">char</span>)(<span class=\"number\">97</span> + i);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;<span class=\"comment\">//27</span></span><br><span class=\"line\">                <span class=\"comment\">//添加大写字母</span></span><br><span class=\"line\">                <span class=\"comment\">// A --- 65</span></span><br><span class=\"line\">                chs[i] = (<span class=\"type\">char</span>)(<span class=\"number\">65</span> + i - <span class=\"number\">26</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//定义一个字符串类型的变量，用来记录最终的结果</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.随机抽取4次</span></span><br><span class=\"line\">        <span class=\"comment\">//随机抽取数组中的索引</span></span><br><span class=\"line\">        <span class=\"type\">Random</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">randomIndex</span> <span class=\"operator\">=</span> r.nextInt(chs.length);</span><br><span class=\"line\">            <span class=\"comment\">//利用随机索引，获取对应的元素</span></span><br><span class=\"line\">            <span class=\"comment\">//System.out.println(chs[randomIndex]);</span></span><br><span class=\"line\">            result = result + chs[randomIndex];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(result);</span></span><br><span class=\"line\">        <span class=\"comment\">//3.随机抽取一个数字0~9</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> r.nextInt(<span class=\"number\">10</span>);</span><br><span class=\"line\">        <span class=\"comment\">//生成最终的结果</span></span><br><span class=\"line\">        result = result + number;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//打印最终结果</span></span><br><span class=\"line\">        System.out.println(result);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"练习四：复制数组\"><a href=\"#练习四：复制数组\" class=\"headerlink\" title=\"练习四：复制数组\"></a>练习四：复制数组</h1><p>需求：</p>\n<p>​\t把一个数组中的元素复制到另一个新数组中去。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test4</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">/* 需求：</span></span><br><span class=\"line\"><span class=\"comment\">        把一个数组中的元素复制到另一个新数组中去。*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//分析：</span></span><br><span class=\"line\">        <span class=\"comment\">//1.定义一个老数组并存储一些元素</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">        <span class=\"comment\">//2.定义一个新数组的长度跟老数组一致</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] newArr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[arr.length];</span><br><span class=\"line\">        <span class=\"comment\">//3.遍历老数组，得到老数组中的每一个元素，依次存入到新数组当中</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//i 表示老数组中的索引。新数组中的每一个索引</span></span><br><span class=\"line\">            <span class=\"comment\">//arr[i]  表示老数组中的元素</span></span><br><span class=\"line\">            newArr[i] = arr[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4.新数组中已经存满元素了</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; newArr.length; i++) &#123;</span><br><span class=\"line\">            System.out.println(newArr[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"练习五：评委打分\"><a href=\"#练习五：评委打分\" class=\"headerlink\" title=\"练习五：评委打分\"></a>练习五：评委打分</h1><p>需求 :  </p>\n<p>​\t在唱歌比赛中，有6名评委给选手打分，分数范围是[0 - 100]之间的整数。选手的最后得分为：去掉最高分、最低分后的4个评委的平均分，请完成上述过程并计算出选手的得分。</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test5</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//在唱歌比赛中，有6名评委给选手打分，分数范围是[0 - 100]之间的整数。</span></span><br><span class=\"line\">        <span class=\"comment\">// 选手的最后得分为：去掉最高分、最低分后的4个评委的平均分，请完成上述过程并计算出选手的得分。</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//分析：</span></span><br><span class=\"line\">        <span class=\"comment\">//1.定义一个数组，用来存储6名评委的打分（0~100）</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] scoreArr = getScores();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; scoreArr.length; i++) &#123;</span><br><span class=\"line\">            System.out.println(scoreArr[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//2.求出数组中的最大值</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">max</span> <span class=\"operator\">=</span> getMax(scoreArr);</span><br><span class=\"line\">        <span class=\"comment\">//3.求出数组中的最小值</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">min</span> <span class=\"operator\">=</span> getMin(scoreArr);</span><br><span class=\"line\">        <span class=\"comment\">//4.求出数组中6个分数的总和</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> getSum(scoreArr);</span><br><span class=\"line\">        <span class=\"comment\">//5.（总和 - 最大值 - 最小值 ）/4</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">avg</span> <span class=\"operator\">=</span>  (sum - max - min)/(scoreArr.length - <span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"comment\">//6.打印结果</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;选手的最终得分为：&quot;</span> + avg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">getSum</span><span class=\"params\">(<span class=\"type\">int</span>[] scoreArr)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; scoreArr.length; i++) &#123;</span><br><span class=\"line\">            sum = sum + scoreArr[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>  sum;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//求数组的最大值</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">getMax</span><span class=\"params\">(<span class=\"type\">int</span>[] scoreArr)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">max</span> <span class=\"operator\">=</span> scoreArr[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt; scoreArr.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(scoreArr[i] &gt; max)&#123;</span><br><span class=\"line\">                max = scoreArr[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//求数组的最小值</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">getMin</span><span class=\"params\">(<span class=\"type\">int</span>[] scoreArr)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">min</span> <span class=\"operator\">=</span> scoreArr[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt; scoreArr.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(scoreArr[i] &lt; min)&#123;</span><br><span class=\"line\">                min = scoreArr[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> min;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1.我要干嘛？定义一个数组，用来存储6名评委的打分（0~100）</span></span><br><span class=\"line\">    <span class=\"comment\">//2.我需要什么？都不需要</span></span><br><span class=\"line\">    <span class=\"comment\">//3.干完了这件事情，是否需要返回？必须返回</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span>[] getScores()&#123;</span><br><span class=\"line\">        <span class=\"comment\">//定义数组</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] scores = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">6</span>];</span><br><span class=\"line\">        <span class=\"comment\">//使用键盘录入的形式，输入分数：0~100</span></span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; scores.length; ) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;请输入评委的打分&quot;</span>);</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">score</span> <span class=\"operator\">=</span> sc.nextInt();<span class=\"comment\">//100</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(score &gt;=<span class=\"number\">0</span> &amp;&amp; score&lt;= <span class=\"number\">100</span>)&#123;</span><br><span class=\"line\">                scores[i] = score;</span><br><span class=\"line\">                i++;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;成绩超出了范围,继续录入，当前的i为：&quot;</span> + i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>  scores;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"练习六：数字加密\"><a href=\"#练习六：数字加密\" class=\"headerlink\" title=\"练习六：数字加密\"></a>练习六：数字加密</h1><p>需求：</p>\n<p>​\t某系统的数字密码（大于0），比如1983，采用加密方式进行传输。</p>\n<p>规则如下：</p>\n<p>​\t先得到每位数，然后每位数都加上5 , 再对10求余，最后将所有数字反转，得到一串新数。</p>\n<p>举例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"number\">1</span>\t<span class=\"number\">9</span>\t<span class=\"number\">8</span>\t<span class=\"number\">3</span></span><br><span class=\"line\">+<span class=\"number\">5</span>\t\t<span class=\"number\">6</span>   <span class=\"number\">14</span>  <span class=\"number\">13</span>  <span class=\"number\">8</span></span><br><span class=\"line\">%<span class=\"number\">10</span>\t\t<span class=\"number\">6</span>   <span class=\"number\">4</span>   <span class=\"number\">3</span>   <span class=\"number\">8</span></span><br><span class=\"line\">反转\t   <span class=\"number\">8</span>   <span class=\"number\">3</span>   <span class=\"number\">4</span>   <span class=\"number\">6</span></span><br><span class=\"line\">加密后的结果就是：<span class=\"number\">8346</span></span><br></pre></td></tr></table></figure>\n\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test6</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">        某系统的数字密码（大于0）。比如1983，采用加密方式进行传输，</span></span><br><span class=\"line\"><span class=\"comment\">        规则如下：</span></span><br><span class=\"line\"><span class=\"comment\">            每位数加上5</span></span><br><span class=\"line\"><span class=\"comment\">            再对10求余，</span></span><br><span class=\"line\"><span class=\"comment\">            最后将所有数字反转，</span></span><br><span class=\"line\"><span class=\"comment\">            得到一串新数。</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//分析：</span></span><br><span class=\"line\">        <span class=\"comment\">//1.把整数里面的每一位放到数组当中</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">8</span>, <span class=\"number\">3</span>&#125;;</span><br><span class=\"line\">        <span class=\"comment\">//2.加密</span></span><br><span class=\"line\">        <span class=\"comment\">//每位数加上5</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            arr[i] = arr[i] + <span class=\"number\">5</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//再对10求余，</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            arr[i] = arr[i] % <span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//将所有数字反转</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>, j = arr.length - <span class=\"number\">1</span>; i &lt; j; i++, j--) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> arr[i];</span><br><span class=\"line\">            arr[i] = arr[j];</span><br><span class=\"line\">            arr[j] = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//8 3 4 6 --&gt; 8346</span></span><br><span class=\"line\">        <span class=\"comment\">//3.把数组里面的每一个数字进行拼接，变成加密之后的结果</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            number = number * <span class=\"number\">10</span> + arr[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(number);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"练习六扩展：\"><a href=\"#练习六扩展：\" class=\"headerlink\" title=\"练习六扩展：\"></a>练习六扩展：</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test7</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//需求：</span></span><br><span class=\"line\">        <span class=\"comment\">//把整数上的每一位都添加到数组当中</span></span><br><span class=\"line\">        <span class=\"comment\">//反向推导</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1.计算出数组的长度</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> <span class=\"number\">12345</span>;</span><br><span class=\"line\">        <span class=\"comment\">//定义一个变量临时记录number的值，就是为了第三步的时候再次使用</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> number;</span><br><span class=\"line\">        <span class=\"comment\">//定义一个变量进行统计</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(number != <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//每一次循环就去掉右边的一个数字</span></span><br><span class=\"line\">            number = number / <span class=\"number\">10</span>;</span><br><span class=\"line\">            <span class=\"comment\">//去掉一位计数器就自增一次。</span></span><br><span class=\"line\">            count++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//2.定义数组</span></span><br><span class=\"line\">        <span class=\"comment\">//动态初始化</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[count];</span><br><span class=\"line\">        <span class=\"comment\">//3.把整数上的每一位都添加到数组当中</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">index</span> <span class=\"operator\">=</span> arr.length -<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(temp != <span class=\"number\">0</span>)&#123;<span class=\"comment\">//12345</span></span><br><span class=\"line\">            <span class=\"comment\">//获取temp里面的每一位数组</span></span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">ge</span> <span class=\"operator\">=</span> temp % <span class=\"number\">10</span>;</span><br><span class=\"line\">            <span class=\"comment\">//再去掉右边的那位数字</span></span><br><span class=\"line\">            temp = temp / <span class=\"number\">10</span>;</span><br><span class=\"line\">            <span class=\"comment\">//把当前获取到的个位添加到数组当中</span></span><br><span class=\"line\">            arr[index] = ge;</span><br><span class=\"line\">            index--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//验证结果  1  2  3  4 5</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            System.out.print(arr[i] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"练习七：数字解密\"><a href=\"#练习七：数字解密\" class=\"headerlink\" title=\"练习七：数字解密\"></a>练习七：数字解密</h1><p>把上一题加密之后的数据进行解密</p>\n<p>代码示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test8</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">/*某系统的数字密码（大于0）。比如1983，采用加密方式进行传输，</span></span><br><span class=\"line\"><span class=\"comment\">        规则如下：</span></span><br><span class=\"line\"><span class=\"comment\">            每位数加上5</span></span><br><span class=\"line\"><span class=\"comment\">            再对10求余，</span></span><br><span class=\"line\"><span class=\"comment\">            最后将所有数字反转，</span></span><br><span class=\"line\"><span class=\"comment\">            得到一串新数。</span></span><br><span class=\"line\"><span class=\"comment\">            按照以上规则进行解密：</span></span><br><span class=\"line\"><span class=\"comment\">            比如1983加密之后变成8346，解密之后变成1983</span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1.定义数组记录解密之后的结果</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">8</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>&#125;;</span><br><span class=\"line\">        <span class=\"comment\">//2.反转</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>, j = arr.length - <span class=\"number\">1</span>; i &lt; j; i++, j--) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> arr[i];</span><br><span class=\"line\">            arr[i] = arr[j];</span><br><span class=\"line\">            arr[j] = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//3.由于加密是通过对10取余的方式进行获取的</span></span><br><span class=\"line\">        <span class=\"comment\">//所以在解密的时候就需要判断，0~4之间+10  5~9数字不变</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arr[i] &gt;= <span class=\"number\">0</span> &amp;&amp; arr[i] &lt;= <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">                arr[i] = arr[i] + <span class=\"number\">10</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//4.每一位减5</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            arr[i] = arr[i] - <span class=\"number\">5</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//5.获取数组里面的每一位数字拼接成最终的结果</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            number = number * <span class=\"number\">10</span> + arr[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(number);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"练习八：抽奖\"><a href=\"#练习八：抽奖\" class=\"headerlink\" title=\"练习八：抽奖\"></a>练习八：抽奖</h1><p>需求：</p>\n<p>​\t一个大V直播抽奖，奖品是现金红包，分别有{2, 588 , 888, 1000, 10000}五个奖金。请使用代码模拟抽奖，打印出每个奖项，奖项的出现顺序要随机且不重复。打印效果如下：（随机顺序，不一定是下面的顺序）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">888</span>元的奖金被抽出</span><br><span class=\"line\"><span class=\"number\">588</span>元的奖金被抽出</span><br><span class=\"line\"><span class=\"number\">10000</span>元的奖金被抽出</span><br><span class=\"line\"><span class=\"number\">1000</span>元的奖金被抽出</span><br><span class=\"line\"><span class=\"number\">2</span>元的奖金被抽出</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"解法一\"><a href=\"#解法一\" class=\"headerlink\" title=\"解法一:\"></a>解法一:</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test9</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">/* 需求：</span></span><br><span class=\"line\"><span class=\"comment\">        一个大V直播抽奖，奖品是现金红包，分别有&#123;2, 588 , 888, 1000, 10000&#125;五个奖金。</span></span><br><span class=\"line\"><span class=\"comment\">        请使用代码模拟抽奖，打印出每个奖项，奖项的出现顺序要随机且不重复。</span></span><br><span class=\"line\"><span class=\"comment\">        打印效果如下：（随机顺序，不一定是下面的顺序）</span></span><br><span class=\"line\"><span class=\"comment\">            888元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">            588元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">            10000元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">            1000元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">            2元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//分析：</span></span><br><span class=\"line\">        <span class=\"comment\">//1.定义数组表示奖池</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">2</span>, <span class=\"number\">588</span>, <span class=\"number\">888</span>, <span class=\"number\">1000</span>, <span class=\"number\">10000</span>&#125;;</span><br><span class=\"line\">        <span class=\"comment\">//2.定义新数组用于存储抽奖的结果</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] newArr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[arr.length];</span><br><span class=\"line\">        <span class=\"comment\">//3.抽奖</span></span><br><span class=\"line\">        <span class=\"type\">Random</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\">        <span class=\"comment\">//因为有5个奖项，所以这里要循环5次</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; ) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//获取随机索引</span></span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">randomIndex</span> <span class=\"operator\">=</span> r.nextInt(arr.length);</span><br><span class=\"line\">            <span class=\"comment\">//获取奖项</span></span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">prize</span> <span class=\"operator\">=</span> arr[randomIndex];</span><br><span class=\"line\">            <span class=\"comment\">//判断当前的奖项是否存在，如果存在则重新抽取，如果不存在，就表示是有效奖项</span></span><br><span class=\"line\">            <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> contains(newArr, prize);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!flag)&#123;</span><br><span class=\"line\">                <span class=\"comment\">//把当前抽取到的奖项添加到newArr当中</span></span><br><span class=\"line\">                newArr[i] = prize;</span><br><span class=\"line\">                <span class=\"comment\">//添加完毕之后，移动索引</span></span><br><span class=\"line\">                i++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//4.遍历newArr</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; newArr.length; i++) &#123;</span><br><span class=\"line\">            System.out.println(newArr[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//判断prize在数组当中是否存在</span></span><br><span class=\"line\">    <span class=\"comment\">//存在：true</span></span><br><span class=\"line\">    <span class=\"comment\">//不存在：false</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">contains</span><span class=\"params\">(<span class=\"type\">int</span>[] arr,<span class=\"type\">int</span> prize)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(arr[i] == prize)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"解法二：\"><a href=\"#解法二：\" class=\"headerlink\" title=\"解法二：\"></a>解法二：</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test10</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">       <span class=\"comment\">/* 需求：</span></span><br><span class=\"line\"><span class=\"comment\">        一个大V直播抽奖，奖品是现金红包，分别有&#123;2, 588 , 888, 1000, 10000&#125;五个奖金。</span></span><br><span class=\"line\"><span class=\"comment\">        请使用代码模拟抽奖，打印出每个奖项，奖项的出现顺序要随机且不重复。</span></span><br><span class=\"line\"><span class=\"comment\">        打印效果如下：（随机顺序，不一定是下面的顺序）</span></span><br><span class=\"line\"><span class=\"comment\">            888元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">            588元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">            10000元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">            1000元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">            2元的奖金被抽出</span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1.把奖池里面的所有奖项打乱顺序</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">2</span>, <span class=\"number\">588</span>, <span class=\"number\">888</span>, <span class=\"number\">1000</span>, <span class=\"number\">10000</span>&#125;;</span><br><span class=\"line\">        <span class=\"type\">Random</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//获取随机索引</span></span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">randomIndex</span> <span class=\"operator\">=</span> r.nextInt(arr.length);</span><br><span class=\"line\">            <span class=\"comment\">//拿着i跟随机索引randomIndex上的值进行交换</span></span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">temp</span> <span class=\"operator\">=</span> arr[i];</span><br><span class=\"line\">            arr[i] = arr[randomIndex];</span><br><span class=\"line\">            arr[randomIndex] = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//2.遍历奖池,从0索引开始获取每一个奖项</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            System.out.println(arr[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"练习九：双色球\"><a href=\"#练习九：双色球\" class=\"headerlink\" title=\"练习九：双色球\"></a>练习九：双色球</h1><p> <img src=\"/tupian/%E5%9B%BE%E7%89%871.png\" alt=\"图片1\"></p>\n<p>代码示例:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test11</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.生成中奖号码</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = createNumber(); <span class=\"comment\">// 123456  7</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=======================&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            System.out.print(arr[i] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=======================&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.用户输入彩票号码（红球 + 蓝球）//654321</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] userInputArr = userInputNumber();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.判断用户的中奖情况</span></span><br><span class=\"line\">        <span class=\"comment\">//红球 蓝球</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">redCount</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">blueCount</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//判断红球</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; userInputArr.length - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">redNumber</span> <span class=\"operator\">=</span> userInputArr[i];</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; arr.length - <span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(redNumber == arr[j])&#123;</span><br><span class=\"line\">                    redCount++;</span><br><span class=\"line\">                    <span class=\"comment\">//如果找到了，那么后面的数字就没有必要继续比较了</span></span><br><span class=\"line\">                    <span class=\"comment\">//跳出内循环，继续判断下一个红球号码是否中奖</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//判断蓝球</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">blueNumber</span> <span class=\"operator\">=</span> userInputArr[userInputArr.length-<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(blueNumber == arr[arr.length - <span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">            blueCount++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//根据红球的个数以及蓝球的个数来判断中奖情况</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(redCount == <span class=\"number\">6</span> &amp;&amp; blueCount == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;恭喜你，中奖1000万&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(redCount == <span class=\"number\">6</span> &amp;&amp; blueCount == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;恭喜你，中奖500万&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(redCount == <span class=\"number\">5</span> &amp;&amp; blueCount == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;恭喜你，中奖3000&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>((redCount == <span class=\"number\">5</span> &amp;&amp; blueCount == <span class=\"number\">0</span>) ||  (redCount == <span class=\"number\">4</span> &amp;&amp; blueCount == <span class=\"number\">1</span>))&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;恭喜你，中奖200&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>((redCount == <span class=\"number\">4</span> &amp;&amp; blueCount == <span class=\"number\">0</span>) ||  (redCount == <span class=\"number\">3</span> &amp;&amp; blueCount == <span class=\"number\">1</span>))&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;恭喜你，中奖10&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>((redCount == <span class=\"number\">2</span> &amp;&amp; blueCount == <span class=\"number\">1</span>) ||  (redCount == <span class=\"number\">1</span> &amp;&amp; blueCount == <span class=\"number\">1</span>)|| (redCount == <span class=\"number\">0</span> &amp;&amp; blueCount == <span class=\"number\">1</span>))&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;恭喜你，中奖5&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;谢谢参与，谢谢惠顾&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span>[] userInputNumber() &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.创建数组用于添加用户购买的彩票号码</span></span><br><span class=\"line\">        <span class=\"comment\">//6个红球 1个蓝球 数组长度：7</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">7</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.利用键盘录入让用输入</span></span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        <span class=\"comment\">//让用户输入红球号码</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; ) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;请输入第&quot;</span> + (i + <span class=\"number\">1</span>) + <span class=\"string\">&quot;个红球号码&quot;</span>);</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">redNumber</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">            <span class=\"comment\">//redNumber  在1~33  唯一不重复</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (redNumber &gt;= <span class=\"number\">1</span> &amp;&amp; redNumber &lt;= <span class=\"number\">33</span>) &#123;</span><br><span class=\"line\">                <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> contains(arr, redNumber);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!flag) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//不存在</span></span><br><span class=\"line\">                    <span class=\"comment\">//有效的，可以添加到数组当中</span></span><br><span class=\"line\">                    arr[i] = redNumber;</span><br><span class=\"line\">                    i++;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//存在</span></span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;当前红球号码已经存在，请重新输入&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;当前红球号码超出范围&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//让用户输入篮球号码</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入篮球号码&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//1~16</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">blueNumber</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (blueNumber &gt;= <span class=\"number\">1</span> &amp;&amp; blueNumber &lt;= <span class=\"number\">16</span>) &#123;</span><br><span class=\"line\">                arr[arr.length - <span class=\"number\">1</span>] = blueNumber;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;当前篮球号码超出范围&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span>[] createNumber() &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.创建数组用于添加中奖号码</span></span><br><span class=\"line\">        <span class=\"comment\">//6个红球 1个蓝球 数组长度：7</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">7</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.随机生成号码并添加到数组当中</span></span><br><span class=\"line\">        <span class=\"comment\">//红球：不能重复的  1 2 3 4 5 6</span></span><br><span class=\"line\">        <span class=\"comment\">//蓝球：可以跟红球号码重复 5</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//生成红球号码并添加到数组当中</span></span><br><span class=\"line\">        <span class=\"type\">Random</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; ) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//获取红球号码</span></span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">redNumber</span> <span class=\"operator\">=</span> r.nextInt(<span class=\"number\">33</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> contains(arr, redNumber);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!flag) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//把红球号码添加到数组当中</span></span><br><span class=\"line\">                arr[i] = redNumber;</span><br><span class=\"line\">                i++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//生成蓝球号码并添加到数组当中</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">blueNumber</span> <span class=\"operator\">=</span> r.nextInt(<span class=\"number\">16</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">        arr[arr.length - <span class=\"number\">1</span>] = blueNumber;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//用于判断数组在数组中是否存在</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">contains</span><span class=\"params\">(<span class=\"type\">int</span>[] arr, <span class=\"type\">int</span> number)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arr[i] == number) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cm4ld1o850006qstofc0w352h","category_id":"cm4ld1o840003qstoa7gk0ehm","_id":"cm4ld1o87000cqsto5a1g6roh"},{"post_id":"cm4ld1o810000qsto4mk747hh","category_id":"cm4ld1o840003qstoa7gk0ehm","_id":"cm4ld1o88000gqsto84mqew9m"},{"post_id":"cm4ld1o830002qsto78hgb6rp","category_id":"cm4ld1o840003qstoa7gk0ehm","_id":"cm4ld1o88000jqsto7i6d308a"},{"post_id":"cm4ld1o850005qstocmdkghif","category_id":"cm4ld1o840003qstoa7gk0ehm","_id":"cm4ld1o89000mqstogo221umc"},{"post_id":"cm4ld1o860007qsto7s2p8vtk","category_id":"cm4ld1o88000iqsto6rjq0jdn","_id":"cm4ld1o89000sqstodfqk1n1b"},{"post_id":"cm4ld1o86000aqsto9n7uggca","category_id":"cm4ld1o88000iqsto6rjq0jdn","_id":"cm4ld1o89000vqstoc0t9foa7"},{"post_id":"cm4ld1o87000bqstogl3i4emc","category_id":"cm4ld1o88000iqsto6rjq0jdn","_id":"cm4ld1o89000zqsto6lsebh9y"},{"post_id":"cm4ld1o88000fqsto5ckwg3dy","category_id":"cm4ld1o88000iqsto6rjq0jdn","_id":"cm4ld1o8a0013qsto4coy7nm6"},{"post_id":"cm4ld1o88000hqsto5s9vb5py","category_id":"cm4ld1o88000iqsto6rjq0jdn","_id":"cm4ld1o8a0016qstoal50ahb7"},{"post_id":"cm4ld1o8b001lqstoa1hh7r09","category_id":"cm4ld1o88000iqsto6rjq0jdn","_id":"cm4ld1o8c001qqstog550fups"},{"post_id":"cm4ld1o8c001mqsto7029a5ve","category_id":"cm4ld1o88000iqsto6rjq0jdn","_id":"cm4ld1o8c001rqsto0li282kt"},{"post_id":"cm4ld1o8c001oqsto3ng2580p","category_id":"cm4ld1o88000iqsto6rjq0jdn","_id":"cm4ld1o8d001uqsto18qg8rj3"},{"post_id":"cm4ld1o8c001pqsto99ytglyp","category_id":"cm4ld1o88000iqsto6rjq0jdn","_id":"cm4ld1o8d001vqsto2shj4bmm"}],"PostTag":[{"post_id":"cm4ld1o810000qsto4mk747hh","tag_id":"cm4ld1o840004qstoexpkdcbw","_id":"cm4ld1o89000lqstoco9ifb41"},{"post_id":"cm4ld1o810000qsto4mk747hh","tag_id":"cm4ld1o860009qsto45b6963b","_id":"cm4ld1o89000oqstoarw8bkht"},{"post_id":"cm4ld1o810000qsto4mk747hh","tag_id":"cm4ld1o87000eqsto1e0hdkao","_id":"cm4ld1o89000qqsto660xcrci"},{"post_id":"cm4ld1o830002qsto78hgb6rp","tag_id":"cm4ld1o88000kqsto0o5f4lee","_id":"cm4ld1o89000xqstoa9e22bng"},{"post_id":"cm4ld1o830002qsto78hgb6rp","tag_id":"cm4ld1o860009qsto45b6963b","_id":"cm4ld1o8a0010qsto3jimfhqw"},{"post_id":"cm4ld1o830002qsto78hgb6rp","tag_id":"cm4ld1o87000eqsto1e0hdkao","_id":"cm4ld1o8a0012qstobvt0f4ha"},{"post_id":"cm4ld1o850005qstocmdkghif","tag_id":"cm4ld1o860009qsto45b6963b","_id":"cm4ld1o8a0014qsto4e6bhk8j"},{"post_id":"cm4ld1o850006qstofc0w352h","tag_id":"cm4ld1o8a0011qsto6er00ni1","_id":"cm4ld1o8a0019qsto14g945nu"},{"post_id":"cm4ld1o850006qstofc0w352h","tag_id":"cm4ld1o8a0015qstoa8cjd730","_id":"cm4ld1o8a001aqstob5yc1zrf"},{"post_id":"cm4ld1o850006qstofc0w352h","tag_id":"cm4ld1o87000eqsto1e0hdkao","_id":"cm4ld1o8a001cqstog15i7kn3"},{"post_id":"cm4ld1o860007qsto7s2p8vtk","tag_id":"cm4ld1o8a0018qstoe3rxbmq1","_id":"cm4ld1o8a001dqsto6m4g58qi"},{"post_id":"cm4ld1o86000aqsto9n7uggca","tag_id":"cm4ld1o8a001bqsto664y051i","_id":"cm4ld1o8a001fqstoh28zct42"},{"post_id":"cm4ld1o87000bqstogl3i4emc","tag_id":"cm4ld1o8a001eqsto3bik4oqr","_id":"cm4ld1o8a001hqsto3rd711j9"},{"post_id":"cm4ld1o88000fqsto5ckwg3dy","tag_id":"cm4ld1o8a001gqsto2maa43eg","_id":"cm4ld1o8b001jqstoep3q47ac"},{"post_id":"cm4ld1o88000hqsto5s9vb5py","tag_id":"cm4ld1o8a001iqsto2yawe3yd","_id":"cm4ld1o8b001kqsto0rrmgqbd"},{"post_id":"cm4ld1o8b001lqstoa1hh7r09","tag_id":"cm4ld1o8c001nqstoga0881nf","_id":"cm4ld1o8d001tqstoa2lb4c5g"},{"post_id":"cm4ld1o8c001mqsto7029a5ve","tag_id":"cm4ld1o8d001sqsto9enx2443","_id":"cm4ld1o8d001xqstoaesgch75"},{"post_id":"cm4ld1o8c001oqsto3ng2580p","tag_id":"cm4ld1o8d001wqstod1xp251j","_id":"cm4ld1o8d001zqsto5g5o9n89"},{"post_id":"cm4ld1o8c001pqsto99ytglyp","tag_id":"cm4ld1o8d001yqstofxl3bvhb","_id":"cm4ld1o8d0020qsto3erb6bhz"}],"Tag":[{"name":"双指针","_id":"cm4ld1o840004qstoexpkdcbw"},{"name":"字符串","_id":"cm4ld1o860009qsto45b6963b"},{"name":"模拟","_id":"cm4ld1o87000eqsto1e0hdkao"},{"name":"算法","_id":"cm4ld1o88000kqsto0o5f4lee"},{"name":"语法","_id":"cm4ld1o8a0011qsto6er00ni1"},{"name":"STL","_id":"cm4ld1o8a0015qstoa8cjd730"},{"name":"运算符","_id":"cm4ld1o8a0018qstoe3rxbmq1"},{"name":"idea安装及使用","_id":"cm4ld1o8a001bqsto664y051i"},{"name":"循环","_id":"cm4ld1o8a001eqsto3bik4oqr"},{"name":"环境变量","_id":"cm4ld1o8a001gqsto2maa43eg"},{"name":"数组","_id":"cm4ld1o8a001iqsto2yawe3yd"},{"name":"流程控制语句","_id":"cm4ld1o8c001nqstoga0881nf"},{"name":"方法","_id":"cm4ld1o8d001sqsto9enx2443"},{"name":"面向对象","_id":"cm4ld1o8d001wqstod1xp251j"},{"name":"练习","_id":"cm4ld1o8d001yqstofxl3bvhb"}]}}